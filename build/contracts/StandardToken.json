{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_firstOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_secondOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_third",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "operation",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "lastCanceller",
          "type": "address"
        }
      ],
      "name": "OperationCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "operation",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "howMany",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ownersCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        }
      ],
      "name": "OperationCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "operation",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ownersCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "downvoter",
          "type": "address"
        }
      ],
      "name": "OperationDownvoted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "operation",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "howMany",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ownersCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "performer",
          "type": "address"
        }
      ],
      "name": "OperationPerformed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "operation",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "howMany",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ownersCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "upvoter",
          "type": "address"
        }
      ],
      "name": "OperationUpvoted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MaxSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allOperations",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allOperationsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "allOperationsIndicies",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operation",
          "type": "bytes32"
        }
      ],
      "name": "cancelPending",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "howManyOwnersDecide",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "owners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownersCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ownersIndices",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalBurned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oldOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "votesCountByOperation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "votesMaskByOperation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/StandardToken.sol"
  },
  "ast": {
    "absolutePath": "contracts/StandardToken.sol",
    "exportedSymbols": {
      "Address": [
        496
      ],
      "Context": [
        22
      ],
      "ERC20": [
        998
      ],
      "IERC20": [
        98
      ],
      "Multiownable": [
        1578
      ],
      "SafeMath": [
        293
      ],
      "StandardToken": [
        1712
      ]
    },
    "id": 1713,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "99:23:0"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 22,
        "linearizedBaseContracts": [
          22
        ],
        "name": "Context",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9,
              "nodeType": "Block",
              "src": "725:34:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 6,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "742:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 7,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "742:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 5,
                  "id": 8,
                  "nodeType": "Return",
                  "src": "735:17:0"
                }
              ]
            },
            "documentation": null,
            "id": 10,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "674:2:0"
            },
            "returnParameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10,
                  "src": "708:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "707:17:0"
            },
            "scope": 22,
            "src": "655:104:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 20,
              "nodeType": "Block",
              "src": "830:165:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15,
                    "name": "this",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": -28,
                    "src": "840:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Context_$22",
                      "typeString": "contract Context"
                    }
                  },
                  "id": 16,
                  "nodeType": "ExpressionStatement",
                  "src": "840:4:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 17,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "980:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 18,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "980:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 14,
                  "id": 19,
                  "nodeType": "Return",
                  "src": "973:15:0"
                }
              ]
            },
            "documentation": null,
            "id": 21,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "782:2:0"
            },
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21,
                  "src": "816:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "816:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "815:14:0"
            },
            "scope": 22,
            "src": "765:230:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1713,
        "src": "623:374:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 23,
          "nodeType": "StructuredDocumentation",
          "src": "1055:70:0",
          "text": " @dev Interface of the ERC20 standard as defined in the EIP."
        },
        "fullyImplemented": false,
        "id": 98,
        "linearizedBaseContracts": [
          98
        ],
        "name": "IERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 24,
              "nodeType": "StructuredDocumentation",
              "src": "1149:66:0",
              "text": " @dev Returns the amount of tokens in existence."
            },
            "functionSelector": "18160ddd",
            "id": 29,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1240:2:0"
            },
            "returnParameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 29,
                  "src": "1266:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1266:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1265:9:0"
            },
            "scope": 98,
            "src": "1220:55:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 30,
              "nodeType": "StructuredDocumentation",
              "src": "1281:72:0",
              "text": " @dev Returns the amount of tokens owned by `account`."
            },
            "functionSelector": "70a08231",
            "id": 37,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 37,
                  "src": "1377:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1377:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1376:17:0"
            },
            "returnParameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 37,
                  "src": "1417:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1417:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1416:9:0"
            },
            "scope": 98,
            "src": "1358:68:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 38,
              "nodeType": "StructuredDocumentation",
              "src": "1432:209:0",
              "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
            },
            "functionSelector": "a9059cbb",
            "id": 47,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 47,
                  "src": "1664:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1664:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 47,
                  "src": "1683:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1683:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1663:35:0"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 47,
                  "src": "1717:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1717:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1716:6:0"
            },
            "scope": 98,
            "src": "1646:77:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 48,
              "nodeType": "StructuredDocumentation",
              "src": "1729:264:0",
              "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
            },
            "functionSelector": "dd62ed3e",
            "id": 57,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 57,
                  "src": "2017:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2017:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 57,
                  "src": "2032:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2032:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2016:32:0"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 57,
                  "src": "2072:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2072:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2071:9:0"
            },
            "scope": 98,
            "src": "1998:83:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 58,
              "nodeType": "StructuredDocumentation",
              "src": "2087:642:0",
              "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
            },
            "functionSelector": "095ea7b3",
            "id": 67,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 67,
                  "src": "2751:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2751:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 67,
                  "src": "2768:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2768:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2750:33:0"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 67,
                  "src": "2802:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2802:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2801:6:0"
            },
            "scope": 98,
            "src": "2734:74:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 68,
              "nodeType": "StructuredDocumentation",
              "src": "2814:296:0",
              "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
            },
            "functionSelector": "23b872dd",
            "id": 79,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 79,
                  "src": "3137:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3137:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 79,
                  "src": "3153:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3153:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 79,
                  "src": "3172:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3172:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3136:51:0"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 79,
                  "src": "3206:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3206:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3205:6:0"
            },
            "scope": 98,
            "src": "3115:97:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 80,
              "nodeType": "StructuredDocumentation",
              "src": "3218:158:0",
              "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
            },
            "id": 88,
            "name": "Transfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 88,
                  "src": "3396:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3396:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 88,
                  "src": "3418:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3418:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 88,
                  "src": "3438:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3438:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3395:57:0"
            },
            "src": "3381:72:0"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 89,
              "nodeType": "StructuredDocumentation",
              "src": "3459:148:0",
              "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
            },
            "id": 97,
            "name": "Approval",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 97,
                  "src": "3627:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3627:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 97,
                  "src": "3650:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3650:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 97,
                  "src": "3675:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3675:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3626:63:0"
            },
            "src": "3612:78:0"
          }
        ],
        "scope": 1713,
        "src": "1126:2566:0"
      },
      {
        "id": 99,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "3745:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 100,
          "nodeType": "StructuredDocumentation",
          "src": "3769:563:0",
          "text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
        },
        "fullyImplemented": true,
        "id": 293,
        "linearizedBaseContracts": [
          293
        ],
        "name": "SafeMath",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 125,
              "nodeType": "Block",
              "src": "4652:109:0",
              "statements": [
                {
                  "assignments": [
                    111
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 111,
                      "mutability": "mutable",
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 125,
                      "src": "4662:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 110,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4662:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 115,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 112,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "4674:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 113,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "4678:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4674:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4662:17:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 117,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "4697:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 118,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103,
                          "src": "4702:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4697:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4705:29:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                          "typeString": "literal_string \"SafeMath: addition overflow\""
                        },
                        "value": "SafeMath: addition overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                          "typeString": "literal_string \"SafeMath: addition overflow\""
                        }
                      ],
                      "id": 116,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4689:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4689:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "4689:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 123,
                    "name": "c",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 111,
                    "src": "4753:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 109,
                  "id": 124,
                  "nodeType": "Return",
                  "src": "4746:8:0"
                }
              ]
            },
            "documentation": {
              "id": 101,
              "nodeType": "StructuredDocumentation",
              "src": "4356:224:0",
              "text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
            },
            "id": 126,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 126,
                  "src": "4598:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4598:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 126,
                  "src": "4609:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4609:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4597:22:0"
            },
            "returnParameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 126,
                  "src": "4643:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4643:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4642:9:0"
            },
            "scope": 293,
            "src": "4585:176:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 142,
              "nodeType": "Block",
              "src": "5099:67:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 137,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "5120:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 138,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "5123:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5126:32:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                          "typeString": "literal_string \"SafeMath: subtraction overflow\""
                        },
                        "value": "SafeMath: subtraction overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                          "typeString": "literal_string \"SafeMath: subtraction overflow\""
                        }
                      ],
                      "id": 136,
                      "name": "sub",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        143,
                        171
                      ],
                      "referencedDeclaration": 171,
                      "src": "5116:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5116:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 135,
                  "id": 141,
                  "nodeType": "Return",
                  "src": "5109:50:0"
                }
              ]
            },
            "documentation": {
              "id": 127,
              "nodeType": "StructuredDocumentation",
              "src": "4767:260:0",
              "text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
            },
            "id": 143,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sub",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 143,
                  "src": "5045:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5045:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 143,
                  "src": "5056:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5056:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5044:22:0"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 143,
                  "src": "5090:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5090:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5089:9:0"
            },
            "scope": 293,
            "src": "5032:134:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "5552:92:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 156,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "5570:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 157,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 146,
                          "src": "5575:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5570:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 159,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "5578:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 155,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5562:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5562:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "5562:29:0"
                },
                {
                  "assignments": [
                    163
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 163,
                      "mutability": "mutable",
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 170,
                      "src": "5601:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 162,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5601:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 167,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 164,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 146,
                      "src": "5613:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 165,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "5617:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5613:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5601:17:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 168,
                    "name": "c",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 163,
                    "src": "5636:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 154,
                  "id": 169,
                  "nodeType": "Return",
                  "src": "5629:8:0"
                }
              ]
            },
            "documentation": {
              "id": 144,
              "nodeType": "StructuredDocumentation",
              "src": "5172:280:0",
              "text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
            },
            "id": 171,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sub",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 146,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 171,
                  "src": "5470:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5470:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 148,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 171,
                  "src": "5481:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5481:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 150,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 171,
                  "src": "5492:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5492:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5469:50:0"
            },
            "returnParameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 171,
                  "src": "5543:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5543:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5542:9:0"
            },
            "scope": 293,
            "src": "5457:187:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "5958:392:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 181,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 174,
                      "src": "6190:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6195:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6190:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 187,
                  "nodeType": "IfStatement",
                  "src": "6186:45:0",
                  "trueBody": {
                    "id": 186,
                    "nodeType": "Block",
                    "src": "6198:33:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6219:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 180,
                        "id": 185,
                        "nodeType": "Return",
                        "src": "6212:8:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    189
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 189,
                      "mutability": "mutable",
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 205,
                      "src": "6241:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 188,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6241:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 193,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 190,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 174,
                      "src": "6253:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 191,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 176,
                      "src": "6257:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6253:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6241:17:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 195,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 189,
                            "src": "6276:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 196,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 174,
                            "src": "6280:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6276:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 198,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 176,
                          "src": "6285:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6276:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6288:35:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                          "typeString": "literal_string \"SafeMath: multiplication overflow\""
                        },
                        "value": "SafeMath: multiplication overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                          "typeString": "literal_string \"SafeMath: multiplication overflow\""
                        }
                      ],
                      "id": 194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6268:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6268:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "6268:56:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 203,
                    "name": "c",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 189,
                    "src": "6342:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 180,
                  "id": 204,
                  "nodeType": "Return",
                  "src": "6335:8:0"
                }
              ]
            },
            "documentation": {
              "id": 172,
              "nodeType": "StructuredDocumentation",
              "src": "5650:236:0",
              "text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
            },
            "id": 206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mul",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 174,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 206,
                  "src": "5904:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5904:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 206,
                  "src": "5915:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5915:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5903:22:0"
            },
            "returnParameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 206,
                  "src": "5949:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5949:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5948:9:0"
            },
            "scope": 293,
            "src": "5891:459:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 222,
              "nodeType": "Block",
              "src": "6879:63:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 217,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 209,
                        "src": "6900:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 218,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "6903:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6906:28:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                          "typeString": "literal_string \"SafeMath: division by zero\""
                        },
                        "value": "SafeMath: division by zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                          "typeString": "literal_string \"SafeMath: division by zero\""
                        }
                      ],
                      "id": 216,
                      "name": "div",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        223,
                        251
                      ],
                      "referencedDeclaration": 251,
                      "src": "6896:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6896:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 215,
                  "id": 221,
                  "nodeType": "Return",
                  "src": "6889:46:0"
                }
              ]
            },
            "documentation": {
              "id": 207,
              "nodeType": "StructuredDocumentation",
              "src": "6356:451:0",
              "text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
            },
            "id": 223,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "div",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 209,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 223,
                  "src": "6825:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6825:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 223,
                  "src": "6836:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6836:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6824:22:0"
            },
            "returnParameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 223,
                  "src": "6870:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6870:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6869:9:0"
            },
            "scope": 293,
            "src": "6812:130:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 250,
              "nodeType": "Block",
              "src": "7519:177:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 236,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 228,
                          "src": "7537:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7541:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7537:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 239,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 230,
                        "src": "7544:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 235,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7529:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7529:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "7529:28:0"
                },
                {
                  "assignments": [
                    243
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 243,
                      "mutability": "mutable",
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 250,
                      "src": "7567:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 242,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7567:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 247,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 244,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 226,
                      "src": "7579:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 245,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "7583:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7579:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7567:17:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 248,
                    "name": "c",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 243,
                    "src": "7688:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 234,
                  "id": 249,
                  "nodeType": "Return",
                  "src": "7681:8:0"
                }
              ]
            },
            "documentation": {
              "id": 224,
              "nodeType": "StructuredDocumentation",
              "src": "6948:471:0",
              "text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
            },
            "id": 251,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "div",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 251,
                  "src": "7437:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7437:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 228,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 251,
                  "src": "7448:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7448:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 230,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 251,
                  "src": "7459:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7459:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7436:50:0"
            },
            "returnParameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 251,
                  "src": "7510:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7510:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7509:9:0"
            },
            "scope": 293,
            "src": "7424:272:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 267,
              "nodeType": "Block",
              "src": "8214:61:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 262,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 254,
                        "src": "8235:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 263,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 256,
                        "src": "8238:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8241:26:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
                          "typeString": "literal_string \"SafeMath: modulo by zero\""
                        },
                        "value": "SafeMath: modulo by zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
                          "typeString": "literal_string \"SafeMath: modulo by zero\""
                        }
                      ],
                      "id": 261,
                      "name": "mod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        268,
                        292
                      ],
                      "referencedDeclaration": 292,
                      "src": "8231:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8231:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 260,
                  "id": 266,
                  "nodeType": "Return",
                  "src": "8224:44:0"
                }
              ]
            },
            "documentation": {
              "id": 252,
              "nodeType": "StructuredDocumentation",
              "src": "7702:440:0",
              "text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
            },
            "id": 268,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mod",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 254,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 268,
                  "src": "8160:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8160:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 256,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 268,
                  "src": "8171:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8171:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8159:22:0"
            },
            "returnParameters": {
              "id": 260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 259,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 268,
                  "src": "8205:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8205:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8204:9:0"
            },
            "scope": 293,
            "src": "8147:128:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 291,
              "nodeType": "Block",
              "src": "8841:68:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 281,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 273,
                          "src": "8859:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8864:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8859:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 284,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "8867:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 280,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8851:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8851:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "8851:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 287,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "8897:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 288,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "8901:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8897:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 279,
                  "id": 290,
                  "nodeType": "Return",
                  "src": "8890:12:0"
                }
              ]
            },
            "documentation": {
              "id": 269,
              "nodeType": "StructuredDocumentation",
              "src": "8281:460:0",
              "text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
            },
            "id": 292,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mod",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 292,
                  "src": "8759:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8759:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 273,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 292,
                  "src": "8770:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 272,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8770:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 292,
                  "src": "8781:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8781:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8758:50:0"
            },
            "returnParameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 292,
                  "src": "8832:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8832:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8831:9:0"
            },
            "scope": 293,
            "src": "8746:163:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1713,
        "src": "4333:4578:0"
      },
      {
        "id": 294,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "8964:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 295,
          "nodeType": "StructuredDocumentation",
          "src": "8988:67:0",
          "text": " @dev Collection of functions related to the address type"
        },
        "fullyImplemented": true,
        "id": 496,
        "linearizedBaseContracts": [
          496
        ],
        "name": "Address",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 320,
              "nodeType": "Block",
              "src": "9714:544:0",
              "statements": [
                {
                  "assignments": [
                    304
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 304,
                      "mutability": "mutable",
                      "name": "codehash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 320,
                      "src": "9966:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 303,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9966:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 305,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9966:16:0"
                },
                {
                  "assignments": [
                    307
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 307,
                      "mutability": "mutable",
                      "name": "accountHash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 320,
                      "src": "9992:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 306,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9992:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 309,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10014:66:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
                      "typeString": "int_const 8947...(69 digits omitted)...1552"
                    },
                    "value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9992:88:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "10155:36:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10157:32:0",
                        "value": {
                          "arguments": [
                            {
                              "name": "account",
                              "nodeType": "YulIdentifier",
                              "src": "10181:7:0"
                            }
                          ],
                          "functionName": {
                            "name": "extcodehash",
                            "nodeType": "YulIdentifier",
                            "src": "10169:11:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10169:20:0"
                        },
                        "variableNames": [
                          {
                            "name": "codehash",
                            "nodeType": "YulIdentifier",
                            "src": "10157:8:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 298,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "10181:7:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 304,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "10157:8:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 310,
                  "nodeType": "InlineAssembly",
                  "src": "10146:45:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 311,
                            "name": "codehash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 304,
                            "src": "10208:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 312,
                            "name": "accountHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 307,
                            "src": "10220:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "10208:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 314,
                            "name": "codehash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 304,
                            "src": "10235:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "307830",
                            "id": 315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10247:3:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x0"
                          },
                          "src": "10235:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10208:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 318,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "10207:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 302,
                  "id": 319,
                  "nodeType": "Return",
                  "src": "10200:51:0"
                }
              ]
            },
            "documentation": {
              "id": 296,
              "nodeType": "StructuredDocumentation",
              "src": "9078:565:0",
              "text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
            },
            "id": 321,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 298,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 321,
                  "src": "9668:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9668:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9667:17:0"
            },
            "returnParameters": {
              "id": 302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 301,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 321,
                  "src": "9708:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 300,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9708:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9707:6:0"
            },
            "scope": 496,
            "src": "9648:610:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 354,
              "nodeType": "Block",
              "src": "11246:320:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 332,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11272:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Address_$496",
                                  "typeString": "library Address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Address_$496",
                                  "typeString": "library Address"
                                }
                              ],
                              "id": 331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11264:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 330,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11264:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11264:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11264:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 335,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 326,
                          "src": "11289:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11264:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11297:31:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                          "typeString": "literal_string \"Address: insufficient balance\""
                        },
                        "value": "Address: insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                          "typeString": "literal_string \"Address: insufficient balance\""
                        }
                      ],
                      "id": 329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11256:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11256:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "11256:73:0"
                },
                {
                  "assignments": [
                    341,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 341,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 354,
                      "src": "11418:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 340,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11418:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 348,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11468:2:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 342,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 324,
                          "src": "11436:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "11436:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "argumentTypes": null,
                          "id": 344,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 326,
                          "src": "11459:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "11436:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11436:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11417:54:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 350,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "11489:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11498:60:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                          "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                        },
                        "value": "Address: unable to send value, recipient may have reverted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                          "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                        }
                      ],
                      "id": 349,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11481:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11481:78:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "11481:78:0"
                }
              ]
            },
            "documentation": {
              "id": 322,
              "nodeType": "StructuredDocumentation",
              "src": "10264:906:0",
              "text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
            },
            "id": 355,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendValue",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 324,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 355,
                  "src": "11194:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11194:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 326,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 355,
                  "src": "11221:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11221:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11193:43:0"
            },
            "returnParameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11246:0:0"
            },
            "scope": 496,
            "src": "11175:391:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 371,
              "nodeType": "Block",
              "src": "12396:84:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 366,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "12426:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 367,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 360,
                        "src": "12434:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12440:32:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                          "typeString": "literal_string \"Address: low-level call failed\""
                        },
                        "value": "Address: low-level call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                          "typeString": "literal_string \"Address: low-level call failed\""
                        }
                      ],
                      "id": 365,
                      "name": "functionCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        372,
                        392
                      ],
                      "referencedDeclaration": 392,
                      "src": "12413:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12413:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 364,
                  "id": 370,
                  "nodeType": "Return",
                  "src": "12406:67:0"
                }
              ]
            },
            "documentation": {
              "id": 356,
              "nodeType": "StructuredDocumentation",
              "src": "11572:730:0",
              "text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
            },
            "id": 372,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionCall",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 358,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 372,
                  "src": "12329:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12329:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 360,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 372,
                  "src": "12345:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 359,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12345:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12328:35:0"
            },
            "returnParameters": {
              "id": 364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 363,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 372,
                  "src": "12382:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 362,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12382:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12381:14:0"
            },
            "scope": 496,
            "src": "12307:173:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 391,
              "nodeType": "Block",
              "src": "12819:77:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 385,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 375,
                        "src": "12859:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 386,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 377,
                        "src": "12867:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12873:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "id": 388,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 379,
                        "src": "12876:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 384,
                      "name": "_functionCallWithValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 495,
                      "src": "12836:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12836:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 383,
                  "id": 390,
                  "nodeType": "Return",
                  "src": "12829:60:0"
                }
              ]
            },
            "documentation": {
              "id": 373,
              "nodeType": "StructuredDocumentation",
              "src": "12486:211:0",
              "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
            },
            "id": 392,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionCall",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 375,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 392,
                  "src": "12724:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 374,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12724:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 377,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 392,
                  "src": "12740:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 376,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12740:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 379,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 392,
                  "src": "12759:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 378,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12759:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12723:63:0"
            },
            "returnParameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 382,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 392,
                  "src": "12805:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 381,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12805:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12804:14:0"
            },
            "scope": 496,
            "src": "12702:194:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 411,
              "nodeType": "Block",
              "src": "13371:111:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 405,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "13410:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 406,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "13418:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 407,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "13424:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13431:43:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                          "typeString": "literal_string \"Address: low-level call with value failed\""
                        },
                        "value": "Address: low-level call with value failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                          "typeString": "literal_string \"Address: low-level call with value failed\""
                        }
                      ],
                      "id": 404,
                      "name": "functionCallWithValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        412,
                        445
                      ],
                      "referencedDeclaration": 445,
                      "src": "13388:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13388:87:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 403,
                  "id": 410,
                  "nodeType": "Return",
                  "src": "13381:94:0"
                }
              ]
            },
            "documentation": {
              "id": 393,
              "nodeType": "StructuredDocumentation",
              "src": "12902:351:0",
              "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
            },
            "id": 412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionCallWithValue",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 395,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 412,
                  "src": "13289:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13289:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 412,
                  "src": "13305:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13305:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 399,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 412,
                  "src": "13324:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13324:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13288:50:0"
            },
            "returnParameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 412,
                  "src": "13357:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13357:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13356:14:0"
            },
            "scope": 496,
            "src": "13258:224:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 444,
              "nodeType": "Block",
              "src": "13871:172:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 429,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "13897:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Address_$496",
                                  "typeString": "library Address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Address_$496",
                                  "typeString": "library Address"
                                }
                              ],
                              "id": 428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13889:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 427,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13889:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13889:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "13889:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 432,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 419,
                          "src": "13914:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13889:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13921:40:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                          "typeString": "literal_string \"Address: insufficient balance for call\""
                        },
                        "value": "Address: insufficient balance for call"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                          "typeString": "literal_string \"Address: insufficient balance for call\""
                        }
                      ],
                      "id": 426,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13881:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13881:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 436,
                  "nodeType": "ExpressionStatement",
                  "src": "13881:81:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 438,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 415,
                        "src": "14002:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 439,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "14010:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 440,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 419,
                        "src": "14016:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 441,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "14023:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 437,
                      "name": "_functionCallWithValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 495,
                      "src": "13979:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13979:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 425,
                  "id": 443,
                  "nodeType": "Return",
                  "src": "13972:64:0"
                }
              ]
            },
            "documentation": {
              "id": 413,
              "nodeType": "StructuredDocumentation",
              "src": "13488:237:0",
              "text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
            },
            "id": 445,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionCallWithValue",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 415,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 445,
                  "src": "13761:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13761:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 417,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 445,
                  "src": "13777:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13777:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 445,
                  "src": "13796:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13796:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 421,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 445,
                  "src": "13811:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13811:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13760:78:0"
            },
            "returnParameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 424,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 445,
                  "src": "13857:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 423,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13857:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13856:14:0"
            },
            "scope": 496,
            "src": "13730:313:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 494,
              "nodeType": "Block",
              "src": "14193:814:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 460,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 447,
                            "src": "14222:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 459,
                          "name": "isContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 321,
                          "src": "14211:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14211:18:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14231:31:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                          "typeString": "literal_string \"Address: call to non-contract\""
                        },
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                          "typeString": "literal_string \"Address: call to non-contract\""
                        }
                      ],
                      "id": 458,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14203:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14203:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "14203:60:0"
                },
                {
                  "assignments": [
                    466,
                    468
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 466,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 494,
                      "src": "14334:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 465,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "14334:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 468,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 494,
                      "src": "14348:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 467,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "14348:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 475,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 473,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 449,
                        "src": "14406:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 469,
                          "name": "target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 447,
                          "src": "14375:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "14375:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "argumentTypes": null,
                          "id": 471,
                          "name": "weiValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 451,
                          "src": "14395:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "14375:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14375:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14333:78:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 476,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 466,
                    "src": "14425:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 492,
                    "nodeType": "Block",
                    "src": "14482:519:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 480,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 468,
                              "src": "14566:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "14566:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14586:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14566:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 490,
                          "nodeType": "Block",
                          "src": "14938:53:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 487,
                                    "name": "errorMessage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 453,
                                    "src": "14963:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 486,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "14956:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 488,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14956:20:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 489,
                              "nodeType": "ExpressionStatement",
                              "src": "14956:20:0"
                            }
                          ]
                        },
                        "id": 491,
                        "nodeType": "IfStatement",
                        "src": "14562:429:0",
                        "trueBody": {
                          "id": 485,
                          "nodeType": "Block",
                          "src": "14589:343:0",
                          "statements": [
                            {
                              "AST": {
                                "nodeType": "YulBlock",
                                "src": "14773:145:0",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "14795:40:0",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "returndata",
                                          "nodeType": "YulIdentifier",
                                          "src": "14824:10:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "14818:5:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14818:17:0"
                                    },
                                    "variables": [
                                      {
                                        "name": "returndata_size",
                                        "nodeType": "YulTypedName",
                                        "src": "14799:15:0",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "14867:2:0",
                                              "type": "",
                                              "value": "32"
                                            },
                                            {
                                              "name": "returndata",
                                              "nodeType": "YulIdentifier",
                                              "src": "14871:10:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "14863:3:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "14863:19:0"
                                        },
                                        {
                                          "name": "returndata_size",
                                          "nodeType": "YulIdentifier",
                                          "src": "14884:15:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "14856:6:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14856:44:0"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14856:44:0"
                                  }
                                ]
                              },
                              "evmVersion": "istanbul",
                              "externalReferences": [
                                {
                                  "declaration": 468,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "14824:10:0",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 468,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "14871:10:0",
                                  "valueSize": 1
                                }
                              ],
                              "id": 484,
                              "nodeType": "InlineAssembly",
                              "src": "14764:154:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 493,
                  "nodeType": "IfStatement",
                  "src": "14421:580:0",
                  "trueBody": {
                    "id": 479,
                    "nodeType": "Block",
                    "src": "14434:42:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 477,
                          "name": "returndata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 468,
                          "src": "14455:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 457,
                        "id": 478,
                        "nodeType": "Return",
                        "src": "14448:17:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 495,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_functionCallWithValue",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 447,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 495,
                  "src": "14081:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14081:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 449,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 495,
                  "src": "14097:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 448,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14097:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 451,
                  "mutability": "mutable",
                  "name": "weiValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 495,
                  "src": "14116:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 450,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14116:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 453,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 495,
                  "src": "14134:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14134:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14080:81:0"
            },
            "returnParameters": {
              "id": 457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 456,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 495,
                  "src": "14179:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 455,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14179:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14178:14:0"
            },
            "scope": 496,
            "src": "14049:958:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 1713,
        "src": "9056:5953:0"
      },
      {
        "id": 497,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "15066:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 499,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 22,
              "src": "16271:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$22",
                "typeString": "contract Context"
              }
            },
            "id": 500,
            "nodeType": "InheritanceSpecifier",
            "src": "16271:7:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 501,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 98,
              "src": "16280:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$98",
                "typeString": "contract IERC20"
              }
            },
            "id": 502,
            "nodeType": "InheritanceSpecifier",
            "src": "16280:6:0"
          }
        ],
        "contractDependencies": [
          22,
          98
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 498,
          "nodeType": "StructuredDocumentation",
          "src": "15090:1162:0",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 998,
        "linearizedBaseContracts": [
          998,
          98,
          22
        ],
        "name": "ERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 505,
            "libraryName": {
              "contractScope": null,
              "id": 503,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 293,
              "src": "16299:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$293",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "16293:27:0",
            "typeName": {
              "id": 504,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "16312:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 508,
            "libraryName": {
              "contractScope": null,
              "id": 506,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 496,
              "src": "16331:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$496",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "16325:26:0",
            "typeName": {
              "id": 507,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "16343:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "id": 512,
            "mutability": "mutable",
            "name": "_balances",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 998,
            "src": "16357:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 511,
              "keyType": {
                "id": 509,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "16366:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "16357:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 510,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "16377:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 518,
            "mutability": "mutable",
            "name": "_allowances",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 998,
            "src": "16410:69:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 517,
              "keyType": {
                "id": 513,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "16419:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "16410:49:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 516,
                "keyType": {
                  "id": 514,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "16439:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "16430:28:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 515,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "16450:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 520,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 998,
            "src": "16486:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 519,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "16486:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 522,
            "mutability": "mutable",
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 998,
            "src": "16521:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 521,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "16521:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 524,
            "mutability": "mutable",
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 998,
            "src": "16547:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 523,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "16547:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 526,
            "mutability": "mutable",
            "name": "_decimals",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 998,
            "src": "16575:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 525,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "16575:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 546,
              "nodeType": "Block",
              "src": "16983:79:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 534,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 522,
                      "src": "16993:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 535,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 529,
                      "src": "17001:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "16993:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 537,
                  "nodeType": "ExpressionStatement",
                  "src": "16993:12:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 538,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 524,
                      "src": "17015:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 539,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 531,
                      "src": "17025:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "17015:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 541,
                  "nodeType": "ExpressionStatement",
                  "src": "17015:16:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 542,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 526,
                      "src": "17041:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3138",
                      "id": 543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17053:2:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "17041:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 545,
                  "nodeType": "ExpressionStatement",
                  "src": "17041:14:0"
                }
              ]
            },
            "documentation": {
              "id": 527,
              "nodeType": "StructuredDocumentation",
              "src": "16605:311:0",
              "text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
            },
            "id": 547,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 529,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 547,
                  "src": "16934:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 528,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16934:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 531,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 547,
                  "src": "16954:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 530,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16954:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16933:42:0"
            },
            "returnParameters": {
              "id": 533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16983:0:0"
            },
            "scope": 998,
            "src": "16921:141:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 555,
              "nodeType": "Block",
              "src": "17179:29:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 553,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 522,
                    "src": "17196:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 552,
                  "id": 554,
                  "nodeType": "Return",
                  "src": "17189:12:0"
                }
              ]
            },
            "documentation": {
              "id": 548,
              "nodeType": "StructuredDocumentation",
              "src": "17068:54:0",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 556,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17140:2:0"
            },
            "returnParameters": {
              "id": 552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 551,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 556,
                  "src": "17164:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "17164:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17163:15:0"
            },
            "scope": 998,
            "src": "17127:81:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 564,
              "nodeType": "Block",
              "src": "17375:31:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 562,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 524,
                    "src": "17392:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 561,
                  "id": 563,
                  "nodeType": "Return",
                  "src": "17385:14:0"
                }
              ]
            },
            "documentation": {
              "id": 557,
              "nodeType": "StructuredDocumentation",
              "src": "17214:102:0",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 565,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17336:2:0"
            },
            "returnParameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 560,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 565,
                  "src": "17360:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 559,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "17360:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17359:15:0"
            },
            "scope": 998,
            "src": "17321:85:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 573,
              "nodeType": "Block",
              "src": "18077:33:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 571,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 526,
                    "src": "18094:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 570,
                  "id": 572,
                  "nodeType": "Return",
                  "src": "18087:16:0"
                }
              ]
            },
            "documentation": {
              "id": 566,
              "nodeType": "StructuredDocumentation",
              "src": "17412:612:0",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 574,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18046:2:0"
            },
            "returnParameters": {
              "id": 570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 569,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 574,
                  "src": "18070:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 568,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "18070:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18069:7:0"
            },
            "scope": 998,
            "src": "18029:81:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              29
            ],
            "body": {
              "id": 583,
              "nodeType": "Block",
              "src": "18232:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 581,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 520,
                    "src": "18249:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 580,
                  "id": 582,
                  "nodeType": "Return",
                  "src": "18242:19:0"
                }
              ]
            },
            "documentation": {
              "id": 575,
              "nodeType": "StructuredDocumentation",
              "src": "18116:49:0",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 584,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 577,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "18205:8:0"
            },
            "parameters": {
              "id": 576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18190:2:0"
            },
            "returnParameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 579,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 584,
                  "src": "18223:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 578,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18223:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18222:9:0"
            },
            "scope": 998,
            "src": "18170:98:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              37
            ],
            "body": {
              "id": 597,
              "nodeType": "Block",
              "src": "18401:42:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 593,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 512,
                      "src": "18418:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 595,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 594,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "18428:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "18418:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 592,
                  "id": 596,
                  "nodeType": "Return",
                  "src": "18411:25:0"
                }
              ]
            },
            "documentation": {
              "id": 585,
              "nodeType": "StructuredDocumentation",
              "src": "18274:47:0",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 598,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 589,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "18374:8:0"
            },
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 587,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 598,
                  "src": "18345:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18345:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18344:17:0"
            },
            "returnParameters": {
              "id": 592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 591,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 598,
                  "src": "18392:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18392:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18391:9:0"
            },
            "scope": 998,
            "src": "18326:117:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              47
            ],
            "body": {
              "id": 618,
              "nodeType": "Block",
              "src": "18738:80:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 610,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "18758:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18758:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 612,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "18772:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 613,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 603,
                        "src": "18783:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 609,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 819,
                      "src": "18748:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18748:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "18748:42:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "18807:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 608,
                  "id": 617,
                  "nodeType": "Return",
                  "src": "18800:11:0"
                }
              ]
            },
            "documentation": {
              "id": 599,
              "nodeType": "StructuredDocumentation",
              "src": "18449:192:0",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 619,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 605,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "18714:8:0"
            },
            "parameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 601,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 619,
                  "src": "18664:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18664:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 603,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 619,
                  "src": "18683:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18683:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18663:35:0"
            },
            "returnParameters": {
              "id": 608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 607,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 619,
                  "src": "18732:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 606,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "18732:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18731:6:0"
            },
            "scope": 998,
            "src": "18646:172:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              57
            ],
            "body": {
              "id": 636,
              "nodeType": "Block",
              "src": "18974:51:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 630,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 518,
                        "src": "18991:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 632,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 631,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 622,
                        "src": "19003:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "18991:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 634,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 633,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 624,
                      "src": "19010:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "18991:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 629,
                  "id": 635,
                  "nodeType": "Return",
                  "src": "18984:34:0"
                }
              ]
            },
            "documentation": {
              "id": 620,
              "nodeType": "StructuredDocumentation",
              "src": "18824:47:0",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 637,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 626,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "18947:8:0"
            },
            "parameters": {
              "id": 625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 622,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 637,
                  "src": "18895:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18895:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 624,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 637,
                  "src": "18910:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 623,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18910:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18894:32:0"
            },
            "returnParameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 628,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 637,
                  "src": "18965:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18965:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18964:9:0"
            },
            "scope": 998,
            "src": "18876:149:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              67
            ],
            "body": {
              "id": 657,
              "nodeType": "Block",
              "src": "19252:77:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 649,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "19271:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19271:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 651,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 640,
                        "src": "19285:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 652,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "19294:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 648,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 975,
                      "src": "19262:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19262:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 654,
                  "nodeType": "ExpressionStatement",
                  "src": "19262:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "19318:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 647,
                  "id": 656,
                  "nodeType": "Return",
                  "src": "19311:11:0"
                }
              ]
            },
            "documentation": {
              "id": 638,
              "nodeType": "StructuredDocumentation",
              "src": "19031:127:0",
              "text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 658,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 644,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "19228:8:0"
            },
            "parameters": {
              "id": 643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 640,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 658,
                  "src": "19180:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19180:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 642,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 658,
                  "src": "19197:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19197:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19179:33:0"
            },
            "returnParameters": {
              "id": 647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 646,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 658,
                  "src": "19246:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 645,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19246:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19245:6:0"
            },
            "scope": 998,
            "src": "19163:166:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              79
            ],
            "body": {
              "id": 695,
              "nodeType": "Block",
              "src": "19901:205:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 672,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 661,
                        "src": "19921:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 673,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 663,
                        "src": "19929:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 674,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 665,
                        "src": "19940:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 671,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 819,
                      "src": "19911:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19911:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 676,
                  "nodeType": "ExpressionStatement",
                  "src": "19911:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 678,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 661,
                        "src": "19966:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 679,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "19974:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19974:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 688,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 665,
                            "src": "20026:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                            "id": 689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20034:42:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                              "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                            },
                            "value": "ERC20: transfer amount exceeds allowance"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                              "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 681,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 518,
                                "src": "19988:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 683,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 682,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 661,
                                "src": "20000:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "19988:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 686,
                            "indexExpression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 684,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10,
                                "src": "20008:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20008:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "19988:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 171,
                          "src": "19988:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19988:89:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 677,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 975,
                      "src": "19957:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19957:121:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 692,
                  "nodeType": "ExpressionStatement",
                  "src": "19957:121:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "20095:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 670,
                  "id": 694,
                  "nodeType": "Return",
                  "src": "20088:11:0"
                }
              ]
            },
            "documentation": {
              "id": 659,
              "nodeType": "StructuredDocumentation",
              "src": "19335:449:0",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 696,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 667,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "19877:8:0"
            },
            "parameters": {
              "id": 666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 661,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 696,
                  "src": "19811:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 660,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19811:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 663,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 696,
                  "src": "19827:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19827:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 665,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 696,
                  "src": "19846:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19846:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19810:51:0"
            },
            "returnParameters": {
              "id": 670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 669,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 696,
                  "src": "19895:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 668,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19895:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19894:6:0"
            },
            "scope": 998,
            "src": "19789:317:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 723,
              "nodeType": "Block",
              "src": "20595:121:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 707,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "20614:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20614:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 709,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 699,
                        "src": "20628:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 717,
                            "name": "addedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 701,
                            "src": "20676:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 710,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 518,
                                "src": "20637:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 713,
                              "indexExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 711,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10,
                                  "src": "20649:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 712,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20649:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20637:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 715,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 714,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 699,
                              "src": "20663:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20637:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 126,
                          "src": "20637:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20637:50:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 706,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 975,
                      "src": "20605:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20605:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 720,
                  "nodeType": "ExpressionStatement",
                  "src": "20605:83:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "20705:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 705,
                  "id": 722,
                  "nodeType": "Return",
                  "src": "20698:11:0"
                }
              ]
            },
            "documentation": {
              "id": 697,
              "nodeType": "StructuredDocumentation",
              "src": "20112:384:0",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 724,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 699,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 724,
                  "src": "20528:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 698,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20528:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 701,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 724,
                  "src": "20545:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 700,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20545:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20527:37:0"
            },
            "returnParameters": {
              "id": 705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 704,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 724,
                  "src": "20589:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 703,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "20589:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20588:6:0"
            },
            "scope": 998,
            "src": "20501:215:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 752,
              "nodeType": "Block",
              "src": "21302:167:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 735,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "21321:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21321:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 737,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 727,
                        "src": "21335:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 745,
                            "name": "subtractedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 729,
                            "src": "21383:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                            "id": 746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21400:39:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                              "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                            },
                            "value": "ERC20: decreased allowance below zero"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                              "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 738,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 518,
                                "src": "21344:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 741,
                              "indexExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 739,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10,
                                  "src": "21356:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21356:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21344:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 743,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 742,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 727,
                              "src": "21370:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "21344:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 171,
                          "src": "21344:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21344:96:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 734,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 975,
                      "src": "21312:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21312:129:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 749,
                  "nodeType": "ExpressionStatement",
                  "src": "21312:129:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "21458:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 733,
                  "id": 751,
                  "nodeType": "Return",
                  "src": "21451:11:0"
                }
              ]
            },
            "documentation": {
              "id": 725,
              "nodeType": "StructuredDocumentation",
              "src": "20722:476:0",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 753,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 727,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 753,
                  "src": "21230:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 726,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21230:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 729,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 753,
                  "src": "21247:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 728,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21247:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21229:42:0"
            },
            "returnParameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 732,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 753,
                  "src": "21296:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 731,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "21296:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21295:6:0"
            },
            "scope": 998,
            "src": "21203:266:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 818,
              "nodeType": "Block",
              "src": "22030:443:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 764,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 756,
                          "src": "22048:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 767,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22066:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "22058:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 765,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "22058:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22058:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "22048:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22070:39:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 763,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22040:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22040:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 772,
                  "nodeType": "ExpressionStatement",
                  "src": "22040:70:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 774,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 758,
                          "src": "22128:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22149:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "22141:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 775,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "22141:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22141:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "22128:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22153:37:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 773,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22120:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22120:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 782,
                  "nodeType": "ExpressionStatement",
                  "src": "22120:71:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 784,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 756,
                        "src": "22223:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 785,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 758,
                        "src": "22231:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 786,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 760,
                        "src": "22242:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 783,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 997,
                      "src": "22202:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22202:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 788,
                  "nodeType": "ExpressionStatement",
                  "src": "22202:47:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 789,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 512,
                        "src": "22260:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 791,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 790,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 756,
                        "src": "22270:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "22260:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 796,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 760,
                          "src": "22302:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                          "id": 797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22310:40:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                            "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                          },
                          "value": "ERC20: transfer amount exceeds balance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                            "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 792,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "22280:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 794,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 793,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 756,
                            "src": "22290:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22280:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 171,
                        "src": "22280:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                        }
                      },
                      "id": 798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22280:71:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22260:91:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 800,
                  "nodeType": "ExpressionStatement",
                  "src": "22260:91:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 801,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 512,
                        "src": "22361:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 803,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 802,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 758,
                        "src": "22371:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "22361:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 808,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 760,
                          "src": "22409:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 804,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "22384:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 806,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 805,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 758,
                            "src": "22394:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22384:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 126,
                        "src": "22384:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22384:32:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22361:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 811,
                  "nodeType": "ExpressionStatement",
                  "src": "22361:55:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 813,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 756,
                        "src": "22440:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 814,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 758,
                        "src": "22448:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 815,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 760,
                        "src": "22459:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 812,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "22431:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22431:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 817,
                  "nodeType": "EmitStatement",
                  "src": "22426:40:0"
                }
              ]
            },
            "documentation": {
              "id": 754,
              "nodeType": "StructuredDocumentation",
              "src": "21475:463:0",
              "text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
            },
            "id": 819,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 756,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 819,
                  "src": "21962:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21962:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 758,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 819,
                  "src": "21978:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21978:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 760,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 819,
                  "src": "21997:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 759,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21997:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21961:51:0"
            },
            "returnParameters": {
              "id": 762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22030:0:0"
            },
            "scope": 998,
            "src": "21943:530:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 873,
              "nodeType": "Block",
              "src": "22808:305:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 828,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 822,
                          "src": "22826:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22845:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "22837:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 829,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "22837:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22837:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "22826:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22849:33:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 827,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22818:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22818:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 836,
                  "nodeType": "ExpressionStatement",
                  "src": "22818:65:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22923:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "22915:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 838,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "22915:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22915:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 842,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 822,
                        "src": "22927:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 843,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 824,
                        "src": "22936:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 837,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 997,
                      "src": "22894:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22894:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 845,
                  "nodeType": "ExpressionStatement",
                  "src": "22894:49:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 846,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 520,
                      "src": "22954:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 849,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 824,
                          "src": "22986:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 847,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 520,
                          "src": "22969:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 126,
                        "src": "22969:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22969:24:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22954:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 852,
                  "nodeType": "ExpressionStatement",
                  "src": "22954:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 853,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 512,
                        "src": "23003:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 855,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 854,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 822,
                        "src": "23013:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23003:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 860,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 824,
                          "src": "23047:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 856,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "23024:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 858,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 857,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 822,
                            "src": "23034:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "23024:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 126,
                        "src": "23024:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23024:30:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23003:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 863,
                  "nodeType": "ExpressionStatement",
                  "src": "23003:51:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23086:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "23078:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 865,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23078:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23078:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 869,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 822,
                        "src": "23090:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 870,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 824,
                        "src": "23099:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 864,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "23069:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23069:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 872,
                  "nodeType": "EmitStatement",
                  "src": "23064:42:0"
                }
              ]
            },
            "documentation": {
              "id": 820,
              "nodeType": "StructuredDocumentation",
              "src": "22479:259:0",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
            },
            "id": 874,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 822,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 874,
                  "src": "22758:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 821,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22758:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 824,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 874,
                  "src": "22775:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22775:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22757:33:0"
            },
            "returnParameters": {
              "id": 826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22808:0:0"
            },
            "scope": 998,
            "src": "22743:370:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 929,
              "nodeType": "Block",
              "src": "23497:345:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 883,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 877,
                          "src": "23515:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23534:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 885,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "23526:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 884,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "23526:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23526:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "23515:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23538:35:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 882,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23507:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23507:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 891,
                  "nodeType": "ExpressionStatement",
                  "src": "23507:67:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 893,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 877,
                        "src": "23606:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23623:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "23615:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 894,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23615:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23615:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 898,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 879,
                        "src": "23627:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 892,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 997,
                      "src": "23585:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23585:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 900,
                  "nodeType": "ExpressionStatement",
                  "src": "23585:49:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 901,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 512,
                        "src": "23645:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 903,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 902,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 877,
                        "src": "23655:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23645:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 908,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 879,
                          "src": "23689:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                          "id": 909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23697:36:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                            "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                          },
                          "value": "ERC20: burn amount exceeds balance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                            "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 904,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "23666:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 906,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 905,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 877,
                            "src": "23676:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "23666:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 171,
                        "src": "23666:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                        }
                      },
                      "id": 910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23666:68:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23645:89:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 912,
                  "nodeType": "ExpressionStatement",
                  "src": "23645:89:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 913,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 520,
                      "src": "23744:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 916,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 879,
                          "src": "23776:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 914,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 520,
                          "src": "23759:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 143,
                        "src": "23759:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23759:24:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23744:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 919,
                  "nodeType": "ExpressionStatement",
                  "src": "23744:39:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 921,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 877,
                        "src": "23807:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23824:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "23816:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 922,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23816:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23816:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 926,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 879,
                        "src": "23828:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 920,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "23798:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23798:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 928,
                  "nodeType": "EmitStatement",
                  "src": "23793:42:0"
                }
              ]
            },
            "documentation": {
              "id": 875,
              "nodeType": "StructuredDocumentation",
              "src": "23119:308:0",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 930,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 877,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 930,
                  "src": "23447:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 876,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23447:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 930,
                  "src": "23464:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23464:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23446:33:0"
            },
            "returnParameters": {
              "id": 881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23497:0:0"
            },
            "scope": 998,
            "src": "23432:410:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 974,
              "nodeType": "Block",
              "src": "24350:257:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 941,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 933,
                          "src": "24368:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 944,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "24385:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "24377:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 942,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "24377:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24377:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "24368:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24389:38:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 940,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24360:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24360:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 949,
                  "nodeType": "ExpressionStatement",
                  "src": "24360:68:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 951,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 935,
                          "src": "24446:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "24465:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 953,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "24457:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 952,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "24457:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24457:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "24446:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24469:36:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 950,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24438:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24438:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 959,
                  "nodeType": "ExpressionStatement",
                  "src": "24438:68:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 960,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 518,
                          "src": "24517:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 963,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 961,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 933,
                          "src": "24529:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "24517:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 964,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 962,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 935,
                        "src": "24536:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "24517:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 965,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 937,
                      "src": "24547:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24517:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 967,
                  "nodeType": "ExpressionStatement",
                  "src": "24517:36:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 969,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 933,
                        "src": "24577:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 970,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 935,
                        "src": "24584:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 971,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 937,
                        "src": "24593:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 968,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "24568:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24568:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 973,
                  "nodeType": "EmitStatement",
                  "src": "24563:37:0"
                }
              ]
            },
            "documentation": {
              "id": 931,
              "nodeType": "StructuredDocumentation",
              "src": "23848:414:0",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 975,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 933,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 975,
                  "src": "24285:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 932,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24285:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 935,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 975,
                  "src": "24300:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 934,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24300:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 937,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 975,
                  "src": "24317:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 936,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24317:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24284:48:0"
            },
            "returnParameters": {
              "id": 939,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24350:0:0"
            },
            "scope": 998,
            "src": "24267:340:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 985,
              "nodeType": "Block",
              "src": "24980:38:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 981,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 526,
                      "src": "24990:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 982,
                      "name": "decimals_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 978,
                      "src": "25002:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "24990:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 984,
                  "nodeType": "ExpressionStatement",
                  "src": "24990:21:0"
                }
              ]
            },
            "documentation": {
              "id": 976,
              "nodeType": "StructuredDocumentation",
              "src": "24613:312:0",
              "text": " @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."
            },
            "id": 986,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setupDecimals",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 978,
                  "mutability": "mutable",
                  "name": "decimals_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 986,
                  "src": "24954:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 977,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "24954:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24953:17:0"
            },
            "returnParameters": {
              "id": 980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24980:0:0"
            },
            "scope": 998,
            "src": "24930:88:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 996,
              "nodeType": "Block",
              "src": "25694:3:0",
              "statements": []
            },
            "documentation": {
              "id": 987,
              "nodeType": "StructuredDocumentation",
              "src": "25024:576:0",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 997,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 989,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 997,
                  "src": "25635:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25635:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 991,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 997,
                  "src": "25649:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 990,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25649:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 993,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 997,
                  "src": "25661:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 992,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25661:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25634:42:0"
            },
            "returnParameters": {
              "id": 995,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25694:0:0"
            },
            "scope": 998,
            "src": "25605:92:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1713,
        "src": "16253:9446:0"
      },
      {
        "id": 999,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "25701:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1578,
        "linearizedBaseContracts": [
          1578
        ],
        "name": "Multiownable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "2f4a81df",
            "id": 1001,
            "mutability": "mutable",
            "name": "howManyOwnersDecide",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1578,
            "src": "25754:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1000,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "25754:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "025e7c27",
            "id": 1004,
            "mutability": "mutable",
            "name": "owners",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1578,
            "src": "25794:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1002,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "25794:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1003,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "25794:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "431ab233",
            "id": 1007,
            "mutability": "mutable",
            "name": "allOperations",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1578,
            "src": "25823:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 1005,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "25823:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 1006,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "25823:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1009,
            "mutability": "mutable",
            "name": "insideCallSender",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1578,
            "src": "25859:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1008,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "25859:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1011,
            "mutability": "mutable",
            "name": "insideCallCount",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1578,
            "src": "25898:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1010,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "25898:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "cc047a04",
            "id": 1015,
            "mutability": "mutable",
            "name": "ownersIndices",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1578,
            "src": "25937:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1014,
              "keyType": {
                "id": 1012,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "25945:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "25937:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1013,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "25956:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ea1a2644",
            "id": 1019,
            "mutability": "mutable",
            "name": "allOperationsIndicies",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1578,
            "src": "26005:53:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 1018,
              "keyType": {
                "id": 1016,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "26013:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "26005:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 1017,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "26024:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "568b5915",
            "id": 1023,
            "mutability": "mutable",
            "name": "votesMaskByOperation",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1578,
            "src": "26065:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 1022,
              "keyType": {
                "id": 1020,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "26073:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "26065:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 1021,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "26084:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "90a53085",
            "id": 1027,
            "mutability": "mutable",
            "name": "votesCountByOperation",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1578,
            "src": "26126:56:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 1026,
              "keyType": {
                "id": 1024,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "26134:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "26126:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 1025,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "26145:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1037,
            "name": "OperationCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1029,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operation",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1037,
                  "src": "26212:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1028,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "26212:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1031,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "howMany",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1037,
                  "src": "26231:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1030,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "26231:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1033,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ownersCount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1037,
                  "src": "26245:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1032,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "26245:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1035,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "proposer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1037,
                  "src": "26263:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1034,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26263:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26211:69:0"
            },
            "src": "26189:92:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1049,
            "name": "OperationUpvoted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1039,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operation",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1049,
                  "src": "26309:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1038,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "26309:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1041,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "votes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1049,
                  "src": "26328:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1040,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "26328:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1043,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "howMany",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1049,
                  "src": "26340:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1042,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "26340:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1045,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ownersCount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1049,
                  "src": "26354:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1044,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "26354:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1047,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "upvoter",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1049,
                  "src": "26372:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1046,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26372:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26308:80:0"
            },
            "src": "26286:103:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1059,
            "name": "OperationPerformed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1051,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operation",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1059,
                  "src": "26419:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1050,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "26419:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1053,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "howMany",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1059,
                  "src": "26438:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1052,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "26438:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1055,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ownersCount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1059,
                  "src": "26452:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1054,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "26452:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1057,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "performer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1059,
                  "src": "26470:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1056,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26470:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26418:70:0"
            },
            "src": "26394:95:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1069,
            "name": "OperationDownvoted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1061,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operation",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1069,
                  "src": "26519:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1060,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "26519:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1063,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "votes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1069,
                  "src": "26538:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1062,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "26538:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1065,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ownersCount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1069,
                  "src": "26550:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1064,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "26550:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1067,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "downvoter",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1069,
                  "src": "26569:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1066,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26569:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26518:69:0"
            },
            "src": "26494:94:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1075,
            "name": "OperationCancelled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1071,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operation",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1075,
                  "src": "26618:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1070,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "26618:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1073,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lastCanceller",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1075,
                  "src": "26637:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1072,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26637:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26617:42:0"
            },
            "src": "26593:67:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1079,
            "name": "OwnershipRenounced",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1077,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previousOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1079,
                  "src": "26690:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26690:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26689:31:0"
            },
            "src": "26665:56:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1085,
            "name": "OwnershipTransferred",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1081,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previousOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1085,
                  "src": "26753:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1080,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26753:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1083,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1085,
                  "src": "26784:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1082,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26784:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26752:57:0"
            },
            "src": "26726:84:0"
          },
          {
            "body": {
              "id": 1098,
              "nodeType": "Block",
              "src": "26875:49:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1092,
                        "name": "ownersIndices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1015,
                        "src": "26892:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1094,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1093,
                        "name": "wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1087,
                        "src": "26906:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "26892:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "26916:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "26892:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1091,
                  "id": 1097,
                  "nodeType": "Return",
                  "src": "26885:32:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2f54bf6e",
            "id": 1099,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOwner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1087,
                  "mutability": "mutable",
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1099,
                  "src": "26833:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1086,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26833:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26832:16:0"
            },
            "returnParameters": {
              "id": 1091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1090,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1099,
                  "src": "26869:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1089,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "26869:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26868:6:0"
            },
            "scope": 1578,
            "src": "26816:108:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1107,
              "nodeType": "Block",
              "src": "26979:37:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1104,
                      "name": "owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1004,
                      "src": "26996:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 1105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "26996:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1103,
                  "id": 1106,
                  "nodeType": "Return",
                  "src": "26989:20:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b9488546",
            "id": 1108,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownersCount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26950:2:0"
            },
            "returnParameters": {
              "id": 1103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1102,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1108,
                  "src": "26973:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1101,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "26973:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26972:6:0"
            },
            "scope": 1578,
            "src": "26930:86:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1116,
              "nodeType": "Block",
              "src": "27079:44:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1113,
                      "name": "allOperations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1007,
                      "src": "27096:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "id": 1114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "27096:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1112,
                  "id": 1115,
                  "nodeType": "Return",
                  "src": "27089:27:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "22f2f89a",
            "id": 1117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allOperationsCount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27049:2:0"
            },
            "returnParameters": {
              "id": 1112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1111,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1117,
                  "src": "27073:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1110,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "27073:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "27072:6:0"
            },
            "scope": 1578,
            "src": "27022:101:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1161,
              "nodeType": "Block",
              "src": "27151:377:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27184:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 1119,
                      "name": "checkHowManyOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1360,
                      "src": "27165:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27165:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1160,
                  "nodeType": "IfStatement",
                  "src": "27161:361:0",
                  "trueBody": {
                    "id": 1159,
                    "nodeType": "Block",
                    "src": "27188:334:0",
                    "statements": [
                      {
                        "assignments": [
                          1123
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1123,
                            "mutability": "mutable",
                            "name": "update",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1159,
                            "src": "27202:11:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1122,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "27202:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1131,
                        "initialValue": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1124,
                                "name": "insideCallSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1009,
                                "src": "27217:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 1127,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "27245:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1126,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "27237:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1125,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "27237:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 1128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "27237:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "27217:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 1130,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "27216:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27202:46:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 1132,
                          "name": "update",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1123,
                          "src": "27266:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1143,
                        "nodeType": "IfStatement",
                        "src": "27262:111:0",
                        "trueBody": {
                          "id": 1142,
                          "nodeType": "Block",
                          "src": "27274:99:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1136,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1133,
                                  "name": "insideCallSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1009,
                                  "src": "27292:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1134,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "27311:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1135,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "27311:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "27292:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1137,
                              "nodeType": "ExpressionStatement",
                              "src": "27292:29:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1140,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1138,
                                  "name": "insideCallCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1011,
                                  "src": "27339:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 1139,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "27357:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "27339:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1141,
                              "nodeType": "ExpressionStatement",
                              "src": "27339:19:0"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1144,
                        "nodeType": "PlaceholderStatement",
                        "src": "27386:1:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 1145,
                          "name": "update",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1123,
                          "src": "27405:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1158,
                        "nodeType": "IfStatement",
                        "src": "27401:111:0",
                        "trueBody": {
                          "id": 1157,
                          "nodeType": "Block",
                          "src": "27413:99:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1151,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1146,
                                  "name": "insideCallSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1009,
                                  "src": "27431:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 1149,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "27458:1:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 1148,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "27450:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1147,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "27450:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 1150,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "27450:10:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "27431:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1152,
                              "nodeType": "ExpressionStatement",
                              "src": "27431:29:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1155,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1153,
                                  "name": "insideCallCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1011,
                                  "src": "27478:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 1154,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "27496:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "27478:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1156,
                              "nodeType": "ExpressionStatement",
                              "src": "27478:19:0"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1162,
            "name": "onlyAnyOwner",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 1118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27151:0:0"
            },
            "src": "27129:399:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1206,
              "nodeType": "Block",
              "src": "27558:413:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1165,
                        "name": "howManyOwnersDecide",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1001,
                        "src": "27591:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1164,
                      "name": "checkHowManyOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1360,
                      "src": "27572:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 1166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27572:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1205,
                  "nodeType": "IfStatement",
                  "src": "27568:397:0",
                  "trueBody": {
                    "id": 1204,
                    "nodeType": "Block",
                    "src": "27613:352:0",
                    "statements": [
                      {
                        "assignments": [
                          1168
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1168,
                            "mutability": "mutable",
                            "name": "update",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1204,
                            "src": "27627:11:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1167,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "27627:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1176,
                        "initialValue": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1169,
                                "name": "insideCallSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1009,
                                "src": "27642:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 1172,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "27670:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1171,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "27662:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1170,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "27662:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 1173,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "27662:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "27642:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 1175,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "27641:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27627:46:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 1177,
                          "name": "update",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1168,
                          "src": "27691:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1188,
                        "nodeType": "IfStatement",
                        "src": "27687:129:0",
                        "trueBody": {
                          "id": 1187,
                          "nodeType": "Block",
                          "src": "27699:117:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1181,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1178,
                                  "name": "insideCallSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1009,
                                  "src": "27717:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1179,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "27736:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1180,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "27736:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "27717:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1182,
                              "nodeType": "ExpressionStatement",
                              "src": "27717:29:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1185,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1183,
                                  "name": "insideCallCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1011,
                                  "src": "27764:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 1184,
                                  "name": "howManyOwnersDecide",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1001,
                                  "src": "27782:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "27764:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1186,
                              "nodeType": "ExpressionStatement",
                              "src": "27764:37:0"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1189,
                        "nodeType": "PlaceholderStatement",
                        "src": "27829:1:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 1190,
                          "name": "update",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1168,
                          "src": "27848:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1203,
                        "nodeType": "IfStatement",
                        "src": "27844:111:0",
                        "trueBody": {
                          "id": 1202,
                          "nodeType": "Block",
                          "src": "27856:99:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1196,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1191,
                                  "name": "insideCallSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1009,
                                  "src": "27874:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 1194,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "27901:1:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 1193,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "27893:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1192,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "27893:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 1195,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "27893:10:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "27874:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1197,
                              "nodeType": "ExpressionStatement",
                              "src": "27874:29:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1200,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1198,
                                  "name": "insideCallCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1011,
                                  "src": "27921:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 1199,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "27939:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "27921:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1201,
                              "nodeType": "ExpressionStatement",
                              "src": "27921:19:0"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1207,
            "name": "onlyManyOwners",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 1163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27558:0:0"
            },
            "src": "27534:437:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1210,
              "nodeType": "Block",
              "src": "27998:4:0",
              "statements": []
            },
            "documentation": null,
            "id": 1211,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27988:2:0"
            },
            "returnParameters": {
              "id": 1209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27998:0:0"
            },
            "scope": 1578,
            "src": "27977:25:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1359,
              "nodeType": "Block",
              "src": "28073:1409:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1218,
                      "name": "insideCallSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1009,
                      "src": "28087:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1219,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "28107:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "28107:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "28087:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1232,
                  "nodeType": "IfStatement",
                  "src": "28083:193:0",
                  "trueBody": {
                    "id": 1231,
                    "nodeType": "Block",
                    "src": "28119:157:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1223,
                                "name": "howMany",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1213,
                                "src": "28141:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1224,
                                "name": "insideCallCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1011,
                                "src": "28152:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "28141:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "636865636b486f774d616e794f776e6572733a206e6573746564206f776e657273206d6f64696669657220636865636b2072657175697265206d6f7265206f776e657273",
                              "id": 1226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28169:70:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_63711350c0ea392ecde6e7030edd9f6c70d0a48e61bd02370cbc686d6fcc1cd7",
                                "typeString": "literal_string \"checkHowManyOwners: nested owners modifier check require more owners\""
                              },
                              "value": "checkHowManyOwners: nested owners modifier check require more owners"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_63711350c0ea392ecde6e7030edd9f6c70d0a48e61bd02370cbc686d6fcc1cd7",
                                "typeString": "literal_string \"checkHowManyOwners: nested owners modifier check require more owners\""
                              }
                            ],
                            "id": 1222,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "28133:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28133:107:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1228,
                        "nodeType": "ExpressionStatement",
                        "src": "28133:107:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "28261:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1217,
                        "id": 1230,
                        "nodeType": "Return",
                        "src": "28254:11:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1234
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1234,
                      "mutability": "mutable",
                      "name": "ownerIndex",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1359,
                      "src": "28286:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1233,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "28286:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1241,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1235,
                        "name": "ownersIndices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1015,
                        "src": "28304:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1238,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1236,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "28318:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "28318:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "28304:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28332:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "28304:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28286:47:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1243,
                          "name": "ownerIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1234,
                          "src": "28351:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1244,
                            "name": "owners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1004,
                            "src": "28364:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "28364:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "28351:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "636865636b486f774d616e794f776e6572733a206d73672e73656e646572206973206e6f7420616e206f776e6572",
                        "id": 1247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28379:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_85be1f0a5de459a6fea7fcbd524fb26f01d3c47d444523e5fce5f8f02f07d98a",
                          "typeString": "literal_string \"checkHowManyOwners: msg.sender is not an owner\""
                        },
                        "value": "checkHowManyOwners: msg.sender is not an owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_85be1f0a5de459a6fea7fcbd524fb26f01d3c47d444523e5fce5f8f02f07d98a",
                          "typeString": "literal_string \"checkHowManyOwners: msg.sender is not an owner\""
                        }
                      ],
                      "id": 1242,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "28343:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28343:85:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1249,
                  "nodeType": "ExpressionStatement",
                  "src": "28343:85:0"
                },
                {
                  "assignments": [
                    1251
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1251,
                      "mutability": "mutable",
                      "name": "operation",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1359,
                      "src": "28438:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1250,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "28438:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1259,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1255,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "28485:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "data",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "28485:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1253,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "28468:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "28468:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28468:26:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1252,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "28458:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28458:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28438:57:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1261,
                                  "name": "votesMaskByOperation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1023,
                                  "src": "28515:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                    "typeString": "mapping(bytes32 => uint256)"
                                  }
                                },
                                "id": 1263,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1262,
                                  "name": "operation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1251,
                                  "src": "28536:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "28515:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&",
                              "rightExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1266,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "32",
                                      "id": 1264,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "28550:1:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "**",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "id": 1265,
                                      "name": "ownerIndex",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1234,
                                      "src": "28555:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "28550:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1267,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "28549:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "28515:51:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1269,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "28514:53:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "28571:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "28514:58:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "636865636b486f774d616e794f776e6572733a206f776e657220616c726561647920766f74656420666f7220746865206f7065726174696f6e",
                        "id": 1272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28574:59:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d339c9d9d095308bc4ae4e80c8641fc085c2747ed5362a483c7738c54d667a57",
                          "typeString": "literal_string \"checkHowManyOwners: owner already voted for the operation\""
                        },
                        "value": "checkHowManyOwners: owner already voted for the operation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d339c9d9d095308bc4ae4e80c8641fc085c2747ed5362a483c7738c54d667a57",
                          "typeString": "literal_string \"checkHowManyOwners: owner already voted for the operation\""
                        }
                      ],
                      "id": 1260,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "28506:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28506:128:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1274,
                  "nodeType": "ExpressionStatement",
                  "src": "28506:128:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1275,
                        "name": "votesMaskByOperation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1023,
                        "src": "28644:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 1277,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1276,
                        "name": "operation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1251,
                        "src": "28665:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "28644:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "|=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 1278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28680:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1279,
                            "name": "ownerIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1234,
                            "src": "28685:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "28680:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1281,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "28679:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28644:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1283,
                  "nodeType": "ExpressionStatement",
                  "src": "28644:52:0"
                },
                {
                  "assignments": [
                    1285
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1285,
                      "mutability": "mutable",
                      "name": "operationVotesCount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1359,
                      "src": "28706:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1284,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "28706:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1291,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1286,
                        "name": "votesCountByOperation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1027,
                        "src": "28733:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 1288,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1287,
                        "name": "operation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1251,
                        "src": "28755:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "28733:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28768:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "28733:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28706:63:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1292,
                        "name": "votesCountByOperation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1027,
                        "src": "28779:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 1294,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1293,
                        "name": "operation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1251,
                        "src": "28801:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "28779:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1295,
                      "name": "operationVotesCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1285,
                      "src": "28814:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28779:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1297,
                  "nodeType": "ExpressionStatement",
                  "src": "28779:54:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1298,
                      "name": "operationVotesCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1285,
                      "src": "28847:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28870:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "28847:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1324,
                  "nodeType": "IfStatement",
                  "src": "28843:235:0",
                  "trueBody": {
                    "id": 1323,
                    "nodeType": "Block",
                    "src": "28873:205:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1301,
                              "name": "allOperationsIndicies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1019,
                              "src": "28887:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                "typeString": "mapping(bytes32 => uint256)"
                              }
                            },
                            "id": 1303,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1302,
                              "name": "operation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1251,
                              "src": "28909:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "28887:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1304,
                              "name": "allOperations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1007,
                              "src": "28922:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            },
                            "id": 1305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "28922:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "28887:55:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1307,
                        "nodeType": "ExpressionStatement",
                        "src": "28887:55:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1311,
                              "name": "operation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1251,
                              "src": "28975:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1308,
                              "name": "allOperations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1007,
                              "src": "28956:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            },
                            "id": 1310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "28956:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 1312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28956:29:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1313,
                        "nodeType": "ExpressionStatement",
                        "src": "28956:29:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1315,
                              "name": "operation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1251,
                              "src": "29021:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1316,
                              "name": "howMany",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1213,
                              "src": "29032:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1317,
                                "name": "owners",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1004,
                                "src": "29041:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "29041:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1319,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "29056:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1320,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "29056:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 1314,
                            "name": "OperationCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1037,
                            "src": "29004:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,uint256,uint256,address)"
                            }
                          },
                          "id": 1321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29004:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1322,
                        "nodeType": "EmitStatement",
                        "src": "28999:68:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1326,
                        "name": "operation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1251,
                        "src": "29109:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1327,
                        "name": "operationVotesCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1285,
                        "src": "29120:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1328,
                        "name": "howMany",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1213,
                        "src": "29141:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1329,
                          "name": "owners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1004,
                          "src": "29150:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 1330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "29150:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1331,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "29165:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "29165:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1325,
                      "name": "OperationUpvoted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1049,
                      "src": "29092:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,uint256,uint256,uint256,address)"
                      }
                    },
                    "id": 1333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29092:84:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1334,
                  "nodeType": "EmitStatement",
                  "src": "29087:89:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1335,
                        "name": "votesCountByOperation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1027,
                        "src": "29248:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 1337,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1336,
                        "name": "operation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1251,
                        "src": "29270:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "29248:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1338,
                      "name": "howMany",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1213,
                      "src": "29284:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "29248:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1356,
                  "nodeType": "IfStatement",
                  "src": "29244:209:0",
                  "trueBody": {
                    "id": 1355,
                    "nodeType": "Block",
                    "src": "29293:160:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1341,
                              "name": "operation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1251,
                              "src": "29323:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1340,
                            "name": "deleteOperation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1419,
                            "src": "29307:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 1342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29307:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1343,
                        "nodeType": "ExpressionStatement",
                        "src": "29307:26:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1345,
                              "name": "operation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1251,
                              "src": "29371:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1346,
                              "name": "howMany",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1213,
                              "src": "29382:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1347,
                                "name": "owners",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1004,
                                "src": "29391:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "29391:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1349,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "29406:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "29406:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 1344,
                            "name": "OperationPerformed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1059,
                            "src": "29352:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,uint256,uint256,address)"
                            }
                          },
                          "id": 1351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29352:65:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1352,
                        "nodeType": "EmitStatement",
                        "src": "29347:70:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "29438:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1217,
                        "id": 1354,
                        "nodeType": "Return",
                        "src": "29431:11:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 1357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "29470:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 1217,
                  "id": 1358,
                  "nodeType": "Return",
                  "src": "29463:12:0"
                }
              ]
            },
            "documentation": null,
            "id": 1360,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkHowManyOwners",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1213,
                  "mutability": "mutable",
                  "name": "howMany",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1360,
                  "src": "28036:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1212,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "28036:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "28035:14:0"
            },
            "returnParameters": {
              "id": 1217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1216,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1360,
                  "src": "28067:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1215,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "28067:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "28066:6:0"
            },
            "scope": 1578,
            "src": "28008:1474:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1418,
              "nodeType": "Block",
              "src": "29541:449:0",
              "statements": [
                {
                  "assignments": [
                    1366
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1366,
                      "mutability": "mutable",
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1418,
                      "src": "29551:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1365,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "29551:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1370,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1367,
                      "name": "allOperationsIndicies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1019,
                      "src": "29564:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 1369,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1368,
                      "name": "operation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1362,
                      "src": "29586:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "29564:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29551:45:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1371,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1366,
                      "src": "29610:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1372,
                          "name": "allOperations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1007,
                          "src": "29618:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                            "typeString": "bytes32[] storage ref"
                          }
                        },
                        "id": 1373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "29618:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29641:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "29618:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "29610:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1397,
                  "nodeType": "IfStatement",
                  "src": "29606:202:0",
                  "trueBody": {
                    "id": 1396,
                    "nodeType": "Block",
                    "src": "29644:164:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1377,
                              "name": "allOperations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1007,
                              "src": "29670:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            },
                            "id": 1379,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1378,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1366,
                              "src": "29684:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "29670:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1380,
                              "name": "allOperations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1007,
                              "src": "29693:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            },
                            "id": 1385,
                            "indexExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1381,
                                  "name": "allOperations",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1007,
                                  "src": "29707:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                    "typeString": "bytes32[] storage ref"
                                  }
                                },
                                "id": 1382,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "29707:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 1383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "29730:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "29707:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "29693:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "29670:62:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 1387,
                        "nodeType": "ExpressionStatement",
                        "src": "29670:62:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1388,
                              "name": "allOperationsIndicies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1019,
                              "src": "29746:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                "typeString": "mapping(bytes32 => uint256)"
                              }
                            },
                            "id": 1392,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1389,
                                "name": "allOperations",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1007,
                                "src": "29768:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                  "typeString": "bytes32[] storage ref"
                                }
                              },
                              "id": 1391,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1390,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1366,
                                "src": "29782:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "29768:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "29746:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1393,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1366,
                            "src": "29792:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "29746:51:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1395,
                        "nodeType": "ExpressionStatement",
                        "src": "29746:51:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1398,
                        "name": "allOperations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1007,
                        "src": "29817:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 1400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pop",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "29817:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29817:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1402,
                  "nodeType": "ExpressionStatement",
                  "src": "29817:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "29847:38:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1403,
                        "name": "votesMaskByOperation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1023,
                        "src": "29854:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 1405,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1404,
                        "name": "operation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1362,
                        "src": "29875:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "29854:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1407,
                  "nodeType": "ExpressionStatement",
                  "src": "29847:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "29895:39:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1408,
                        "name": "votesCountByOperation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1027,
                        "src": "29902:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 1410,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1409,
                        "name": "operation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1362,
                        "src": "29924:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "29902:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1412,
                  "nodeType": "ExpressionStatement",
                  "src": "29895:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "29944:39:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1413,
                        "name": "allOperationsIndicies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1019,
                        "src": "29951:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 1415,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1414,
                        "name": "operation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1362,
                        "src": "29973:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "29951:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1417,
                  "nodeType": "ExpressionStatement",
                  "src": "29944:39:0"
                }
              ]
            },
            "documentation": null,
            "id": 1419,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deleteOperation",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1362,
                  "mutability": "mutable",
                  "name": "operation",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1419,
                  "src": "29513:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1361,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "29513:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "29512:19:0"
            },
            "returnParameters": {
              "id": 1364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29541:0:0"
            },
            "scope": 1578,
            "src": "29488:502:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1498,
              "nodeType": "Block",
              "src": "30058:635:0",
              "statements": [
                {
                  "assignments": [
                    1427
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1427,
                      "mutability": "mutable",
                      "name": "ownerIndex",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1498,
                      "src": "30068:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1426,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "30068:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1434,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1428,
                        "name": "ownersIndices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1015,
                        "src": "30086:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1431,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1429,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "30100:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "30100:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "30086:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "30114:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "30086:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30068:47:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1436,
                                  "name": "votesMaskByOperation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1023,
                                  "src": "30134:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                    "typeString": "mapping(bytes32 => uint256)"
                                  }
                                },
                                "id": 1438,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1437,
                                  "name": "operation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1421,
                                  "src": "30155:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "30134:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&",
                              "rightExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1441,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "32",
                                      "id": 1439,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "30169:1:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "**",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "id": 1440,
                                      "name": "ownerIndex",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1427,
                                      "src": "30174:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "30169:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1442,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "30168:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "30134:51:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1444,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "30133:53:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "30190:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "30133:58:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63616e63656c50656e64696e673a206f7065726174696f6e206e6f7420666f756e6420666f7220746869732075736572",
                        "id": 1447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30193:50:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94d980e34a3c9f8cc40bc3859eed4e29f071f1092496e348f9589e8006651394",
                          "typeString": "literal_string \"cancelPending: operation not found for this user\""
                        },
                        "value": "cancelPending: operation not found for this user"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94d980e34a3c9f8cc40bc3859eed4e29f071f1092496e348f9589e8006651394",
                          "typeString": "literal_string \"cancelPending: operation not found for this user\""
                        }
                      ],
                      "id": 1435,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "30125:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30125:119:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1449,
                  "nodeType": "ExpressionStatement",
                  "src": "30125:119:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1450,
                        "name": "votesMaskByOperation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1023,
                        "src": "30254:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 1452,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1451,
                        "name": "operation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1421,
                        "src": "30275:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "30254:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "&=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "~",
                      "prefix": true,
                      "src": "30289:18:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "30291:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1454,
                              "name": "ownerIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1427,
                              "src": "30296:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "30291:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1456,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "30290:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "30254:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1459,
                  "nodeType": "ExpressionStatement",
                  "src": "30254:53:0"
                },
                {
                  "assignments": [
                    1461
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1461,
                      "mutability": "mutable",
                      "name": "operationVotesCount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1498,
                      "src": "30317:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1460,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "30317:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1467,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1462,
                        "name": "votesCountByOperation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1027,
                        "src": "30344:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 1464,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1463,
                        "name": "operation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1421,
                        "src": "30366:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "30344:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "30379:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "30344:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30317:63:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1468,
                        "name": "votesCountByOperation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1027,
                        "src": "30390:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 1470,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1469,
                        "name": "operation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1421,
                        "src": "30412:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "30390:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1471,
                      "name": "operationVotesCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1461,
                      "src": "30425:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "30390:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1473,
                  "nodeType": "ExpressionStatement",
                  "src": "30390:54:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1475,
                        "name": "operation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1421,
                        "src": "30478:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1476,
                        "name": "operationVotesCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1461,
                        "src": "30489:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1477,
                          "name": "owners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1004,
                          "src": "30510:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 1478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "30510:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1479,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "30525:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "30525:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1474,
                      "name": "OperationDownvoted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1069,
                      "src": "30459:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,uint256,uint256,address)"
                      }
                    },
                    "id": 1481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30459:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1482,
                  "nodeType": "EmitStatement",
                  "src": "30454:82:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1483,
                      "name": "operationVotesCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1461,
                      "src": "30550:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "30573:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "30550:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1497,
                  "nodeType": "IfStatement",
                  "src": "30546:141:0",
                  "trueBody": {
                    "id": 1496,
                    "nodeType": "Block",
                    "src": "30576:111:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1487,
                              "name": "operation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1421,
                              "src": "30606:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1486,
                            "name": "deleteOperation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1419,
                            "src": "30590:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 1488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "30590:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1489,
                        "nodeType": "ExpressionStatement",
                        "src": "30590:26:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1491,
                              "name": "operation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1421,
                              "src": "30654:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1492,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "30665:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "30665:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 1490,
                            "name": "OperationCancelled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1075,
                            "src": "30635:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address)"
                            }
                          },
                          "id": 1494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "30635:41:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1495,
                        "nodeType": "EmitStatement",
                        "src": "30630:46:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "893372ca",
            "id": 1499,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1424,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1423,
                  "name": "onlyAnyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1162,
                  "src": "30045:12:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "30045:12:0"
              }
            ],
            "name": "cancelPending",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1421,
                  "mutability": "mutable",
                  "name": "operation",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1499,
                  "src": "30019:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1420,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "30019:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "30018:19:0"
            },
            "returnParameters": {
              "id": 1425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30058:0:0"
            },
            "scope": 1578,
            "src": "29996:697:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1513,
              "nodeType": "Block",
              "src": "30786:57:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1509,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1501,
                        "src": "30815:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1510,
                        "name": "_oldOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1503,
                        "src": "30826:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1508,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1577,
                      "src": "30796:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30796:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1512,
                  "nodeType": "ExpressionStatement",
                  "src": "30796:40:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6d435421",
            "id": 1514,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1506,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1505,
                  "name": "onlyManyOwners",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1207,
                  "src": "30771:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "30771:14:0"
              }
            ],
            "name": "transferOwnership",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1501,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1514,
                  "src": "30726:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1500,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "30726:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1503,
                  "mutability": "mutable",
                  "name": "_oldOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1514,
                  "src": "30745:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "30745:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "30725:38:0"
            },
            "returnParameters": {
              "id": 1507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30786:0:0"
            },
            "scope": 1578,
            "src": "30699:144:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1576,
              "nodeType": "Block",
              "src": "30924:403:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1522,
                          "name": "_newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1516,
                          "src": "30942:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "30963:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "30955:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1523,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "30955:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "30955:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "30942:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1521,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "30934:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30934:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1529,
                  "nodeType": "ExpressionStatement",
                  "src": "30934:32:0"
                },
                {
                  "body": {
                    "id": 1569,
                    "nodeType": "Block",
                    "src": "31020:244:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1541,
                            "name": "_oldOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1518,
                            "src": "31038:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1542,
                              "name": "owners",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1004,
                              "src": "31051:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1544,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1543,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1531,
                              "src": "31058:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "31051:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "31038:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1568,
                        "nodeType": "IfStatement",
                        "src": "31034:220:0",
                        "trueBody": {
                          "id": 1567,
                          "nodeType": "Block",
                          "src": "31062:192:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1550,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1546,
                                    "name": "owners",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1004,
                                    "src": "31080:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1548,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1547,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1531,
                                    "src": "31087:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "31080:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 1549,
                                  "name": "_newOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1516,
                                  "src": "31092:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "31080:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1551,
                              "nodeType": "ExpressionStatement",
                              "src": "31080:21:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1552,
                                    "name": "ownersIndices",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1015,
                                    "src": "31119:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1554,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1553,
                                    "name": "_newOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1516,
                                    "src": "31133:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "31119:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1555,
                                    "name": "ownersIndices",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1015,
                                    "src": "31146:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1557,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1556,
                                    "name": "_oldOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1518,
                                    "src": "31160:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "31146:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "31119:51:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1559,
                              "nodeType": "ExpressionStatement",
                              "src": "31119:51:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1564,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1560,
                                    "name": "ownersIndices",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1015,
                                    "src": "31188:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1562,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1561,
                                    "name": "_oldOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1518,
                                    "src": "31202:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "31188:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 1563,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "31215:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "31188:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1565,
                              "nodeType": "ExpressionStatement",
                              "src": "31188:28:0"
                            },
                            {
                              "id": 1566,
                              "nodeType": "Break",
                              "src": "31234:5:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1534,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1531,
                      "src": "30996:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1535,
                        "name": "owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1004,
                        "src": "31000:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "31000:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "30996:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1570,
                  "initializationExpression": {
                    "assignments": [
                      1531
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1531,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1570,
                        "src": "30981:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1530,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "30981:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1533,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "30993:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "30981:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "31015:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1538,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1531,
                        "src": "31015:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1540,
                    "nodeType": "ExpressionStatement",
                    "src": "31015:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "30977:287:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1572,
                        "name": "_oldOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1518,
                        "src": "31299:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1573,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1516,
                        "src": "31310:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1571,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1085,
                      "src": "31278:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31278:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1575,
                  "nodeType": "EmitStatement",
                  "src": "31273:47:0"
                }
              ]
            },
            "documentation": null,
            "id": 1577,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferOwnership",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1516,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1577,
                  "src": "30877:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "30877:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1518,
                  "mutability": "mutable",
                  "name": "_oldOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1577,
                  "src": "30896:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "30896:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "30876:38:0"
            },
            "returnParameters": {
              "id": 1520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30924:0:0"
            },
            "scope": 1578,
            "src": "30849:478:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1713,
        "src": "25725:5605:0"
      },
      {
        "id": 1579,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "31332:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "argumentTypes": null,
                "hexValue": "5374616e64617264546f6b656e",
                "id": 1581,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "31389:15:0",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_e3a49bb0224352f8f14ca1dea07ee4b4a6a60e74304f26ef6ee7fa36a830bdd7",
                  "typeString": "literal_string \"StandardToken\""
                },
                "value": "StandardToken"
              },
              {
                "argumentTypes": null,
                "hexValue": "53545244",
                "id": 1582,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "31406:6:0",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_2f9fc5077b44c1f29e44a67a8fa3a60f9162bec2139461b1d1c514de4aeaf123",
                  "typeString": "literal_string \"STRD\""
                },
                "value": "STRD"
              }
            ],
            "baseName": {
              "contractScope": null,
              "id": 1580,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 998,
              "src": "31383:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$998",
                "typeString": "contract ERC20"
              }
            },
            "id": 1583,
            "nodeType": "InheritanceSpecifier",
            "src": "31383:30:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1584,
              "name": "Multiownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1578,
              "src": "31415:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Multiownable_$1578",
                "typeString": "contract Multiownable"
              }
            },
            "id": 1585,
            "nodeType": "InheritanceSpecifier",
            "src": "31415:12:0"
          }
        ],
        "contractDependencies": [
          22,
          98,
          998,
          1578
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1712,
        "linearizedBaseContracts": [
          1712,
          1578,
          998,
          98,
          22
        ],
        "name": "StandardToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1587,
            "mutability": "mutable",
            "name": "_totalBurned",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1712,
            "src": "31435:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1586,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "31435:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "b36c1284",
            "id": 1590,
            "mutability": "mutable",
            "name": "MaxSupply",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1712,
            "src": "31470:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1588,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "31470:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31653237",
              "id": 1589,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "31497:4:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000000000"
              },
              "value": "1e27"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1644,
              "nodeType": "Block",
              "src": "31586:291:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1602,
                        "name": "_firstOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1592,
                        "src": "31608:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1599,
                        "name": "owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1004,
                        "src": "31596:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "31596:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31596:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1604,
                  "nodeType": "ExpressionStatement",
                  "src": "31596:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1608,
                        "name": "_secondOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1594,
                        "src": "31642:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1605,
                        "name": "owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1004,
                        "src": "31630:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "31630:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31630:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1610,
                  "nodeType": "ExpressionStatement",
                  "src": "31630:25:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1614,
                        "name": "_third",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "31677:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1611,
                        "name": "owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1004,
                        "src": "31665:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "31665:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31665:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1616,
                  "nodeType": "ExpressionStatement",
                  "src": "31665:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1617,
                        "name": "ownersIndices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1015,
                        "src": "31695:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1619,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1618,
                        "name": "_firstOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1592,
                        "src": "31709:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "31695:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "31724:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "31695:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1622,
                  "nodeType": "ExpressionStatement",
                  "src": "31695:30:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1623,
                        "name": "ownersIndices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1015,
                        "src": "31735:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1625,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1624,
                        "name": "_secondOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1594,
                        "src": "31749:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "31735:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 1626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "31765:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "31735:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1628,
                  "nodeType": "ExpressionStatement",
                  "src": "31735:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1629,
                        "name": "ownersIndices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1015,
                        "src": "31776:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1631,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1630,
                        "name": "_third",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "31790:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "31776:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 1632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "31800:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "31776:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1634,
                  "nodeType": "ExpressionStatement",
                  "src": "31776:25:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1635,
                      "name": "howManyOwnersDecide",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1001,
                      "src": "31812:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 1636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "31834:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "31812:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1638,
                  "nodeType": "ExpressionStatement",
                  "src": "31812:23:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1640,
                        "name": "_third",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "31851:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1641,
                        "name": "MaxSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1590,
                        "src": "31859:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1639,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 874,
                      "src": "31845:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31845:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1643,
                  "nodeType": "ExpressionStatement",
                  "src": "31845:24:0"
                }
              ]
            },
            "documentation": null,
            "id": 1645,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1592,
                  "mutability": "mutable",
                  "name": "_firstOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1645,
                  "src": "31520:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "31520:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1594,
                  "mutability": "mutable",
                  "name": "_secondOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1645,
                  "src": "31541:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1593,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "31541:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1596,
                  "mutability": "mutable",
                  "name": "_third",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1645,
                  "src": "31563:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1595,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "31563:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "31519:59:0"
            },
            "returnParameters": {
              "id": 1598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31586:0:0"
            },
            "scope": 1712,
            "src": "31508:369:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1653,
              "nodeType": "Block",
              "src": "31990:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1651,
                    "name": "_totalBurned",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1587,
                    "src": "32007:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1650,
                  "id": 1652,
                  "nodeType": "Return",
                  "src": "32000:19:0"
                }
              ]
            },
            "documentation": {
              "id": 1646,
              "nodeType": "StructuredDocumentation",
              "src": "31883:49:0",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "d89135cd",
            "id": 1654,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalBurned",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31957:2:0"
            },
            "returnParameters": {
              "id": 1650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1649,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1654,
                  "src": "31981:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1648,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "31981:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "31980:9:0"
            },
            "scope": 1712,
            "src": "31937:89:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1683,
              "nodeType": "Block",
              "src": "32223:116:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1670,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1659,
                              "src": "32259:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1667,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 584,
                                "src": "32241:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 1668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "32241:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 126,
                            "src": "32241:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32241:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1672,
                          "name": "MaxSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1590,
                          "src": "32271:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "32241:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1666,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "32233:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32233:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1675,
                  "nodeType": "ExpressionStatement",
                  "src": "32233:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1677,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1657,
                        "src": "32297:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1678,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1659,
                        "src": "32302:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1676,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 874,
                      "src": "32291:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32291:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1680,
                  "nodeType": "ExpressionStatement",
                  "src": "32291:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "32328:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1665,
                  "id": 1682,
                  "nodeType": "Return",
                  "src": "32321:11:0"
                }
              ]
            },
            "documentation": {
              "id": 1655,
              "nodeType": "StructuredDocumentation",
              "src": "32033:94:0",
              "text": "@notice Creates `_amount` token to `_to`. Must only be called by the  Governance Contracts"
            },
            "functionSelector": "40c10f19",
            "id": 1684,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1662,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1661,
                  "name": "onlyManyOwners",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1207,
                  "src": "32183:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "32183:16:0"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1657,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1684,
                  "src": "32146:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1656,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "32146:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1659,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1684,
                  "src": "32159:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1658,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32159:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "32145:30:0"
            },
            "returnParameters": {
              "id": 1665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1664,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1684,
                  "src": "32217:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1663,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "32217:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "32216:6:0"
            },
            "scope": 1712,
            "src": "32132:207:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1710,
              "nodeType": "Block",
              "src": "32534:108:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1697,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1687,
                        "src": "32550:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1698,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1689,
                        "src": "32555:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1696,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 930,
                      "src": "32544:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32544:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1700,
                  "nodeType": "ExpressionStatement",
                  "src": "32544:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1701,
                      "name": "_totalBurned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1587,
                      "src": "32573:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1704,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1689,
                          "src": "32605:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1702,
                          "name": "_totalBurned",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1587,
                          "src": "32588:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 126,
                        "src": "32588:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "32588:25:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "32573:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1707,
                  "nodeType": "ExpressionStatement",
                  "src": "32573:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "32631:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1695,
                  "id": 1709,
                  "nodeType": "Return",
                  "src": "32624:11:0"
                }
              ]
            },
            "documentation": {
              "id": 1685,
              "nodeType": "StructuredDocumentation",
              "src": "32345:93:0",
              "text": "@notice Creates `_amount` token to `_to`. Must only be called by the Governance Contracts"
            },
            "functionSelector": "9dc29fac",
            "id": 1711,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1692,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1691,
                  "name": "onlyManyOwners",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1207,
                  "src": "32494:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "32494:16:0"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1687,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1711,
                  "src": "32457:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1686,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "32457:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1689,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1711,
                  "src": "32470:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1688,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32470:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "32456:30:0"
            },
            "returnParameters": {
              "id": 1695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1694,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1711,
                  "src": "32528:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1693,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "32528:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "32527:6:0"
            },
            "scope": 1712,
            "src": "32443:199:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 1713,
        "src": "31357:1288:0"
      }
    ],
    "src": "99:32546:0"
  },
  "bytecode": "60806040526b033b2e3c9fd0803ce80000006010553480156200002157600080fd5b5060405162001c0f38038062001c0f833981810160405260608110156200004757600080fd5b50805160208083015160409384015184518086018652600d81526c29ba30b73230b9322a37b5b2b760991b8185019081528651808801909752600487526314d5149160e21b948701949094528051949592949193909291620000ac9160039162000309565b508051620000c290600490602084019062000309565b50506005805460ff191660121790555060078054600181810183557fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68891820180546001600160a01b038089166001600160a01b0319928316811790935585548085018755850180548983169084168117909155865480860190975595909401805494871694909116841790556000908152600b602052604080822092909255928352808320600290819055918352909120600390556006556010546200018a90829062000193565b505050620003a5565b6001600160a01b038216620001ef576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b620001fd60008383620002a2565b6200021981600254620002a760201b62000bf91790919060201c565b6002556001600160a01b038216600090815260208181526040909120546200024c91839062000bf9620002a7821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b60008282018381101562000302576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200034c57805160ff19168380011785556200037c565b828001600101855582156200037c579182015b828111156200037c5782518255916020019190600101906200035f565b506200038a9291506200038e565b5090565b5b808211156200038a57600081556001016200038f565b61185a80620003b56000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636d435421116100f9578063a9059cbb11610097578063cc047a0411610071578063cc047a0414610506578063d89135cd1461052c578063dd62ed3e14610534578063ea1a264414610562576101a9565b8063a9059cbb146104ca578063b36c1284146104f6578063b9488546146104fe576101a9565b806390a53085116100d357806390a530851461044d57806395d89b411461046a5780639dc29fac14610472578063a457c2d71461049e576101a9565b80636d435421146103da57806370a082311461040a578063893372ca14610430576101a9565b80632f4a81df116101665780633950935111610140578063395093511461034857806340c10f1914610374578063431ab233146103a0578063568b5915146103bd576101a9565b80632f4a81df146102fc5780632f54bf6e14610304578063313ce5671461032a576101a9565b8063025e7c27146101ae57806306fdde03146101e7578063095ea7b31461026457806318160ddd146102a457806322f2f89a146102be57806323b872dd146102c6575b600080fd5b6101cb600480360360208110156101c457600080fd5b503561057f565b604080516001600160a01b039092168252519081900360200190f35b6101ef6105a6565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610229578181015183820152602001610211565b50505050905090810190601f1680156102565780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102906004803603604081101561027a57600080fd5b506001600160a01b03813516906020013561063c565b604080519115158252519081900360200190f35b6102ac61065a565b60408051918252519081900360200190f35b6102ac610660565b610290600480360360608110156102dc57600080fd5b506001600160a01b03813581169160208101359091169060400135610666565b6102ac6106ed565b6102906004803603602081101561031a57600080fd5b50356001600160a01b03166106f3565b610332610714565b6040805160ff9092168252519081900360200190f35b6102906004803603604081101561035e57600080fd5b506001600160a01b03813516906020013561071d565b6102906004803603604081101561038a57600080fd5b506001600160a01b03813516906020013561076b565b6102ac600480360360208110156103b657600080fd5b50356107fa565b6102ac600480360360208110156103d357600080fd5b5035610818565b610408600480360360408110156103f057600080fd5b506001600160a01b038135811691602001351661082a565b005b6102ac6004803603602081101561042057600080fd5b50356001600160a01b0316610892565b6104086004803603602081101561044657600080fd5b50356108ad565b6102ac6004803603602081101561046357600080fd5b5035610a2b565b6101ef610a3d565b6102906004803603604081101561048857600080fd5b506001600160a01b038135169060200135610a9e565b610290600480360360408110156104b457600080fd5b506001600160a01b038135169060200135610b1c565b610290600480360360408110156104e057600080fd5b506001600160a01b038135169060200135610b84565b6102ac610b98565b6102ac610b9e565b6102ac6004803603602081101561051c57600080fd5b50356001600160a01b0316610ba4565b6102ac610bb6565b6102ac6004803603604081101561054a57600080fd5b506001600160a01b0381358116916020013516610bbc565b6102ac6004803603602081101561057857600080fd5b5035610be7565b6007818154811061058c57fe5b6000918252602090912001546001600160a01b0316905081565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106325780601f1061060757610100808354040283529160200191610632565b820191906000526020600020905b81548152906001019060200180831161061557829003601f168201915b5050505050905090565b6000610650610649610c5a565b8484610c5e565b5060015b92915050565b60025490565b60085490565b6000610673848484610d4a565b6106e38461067f610c5a565b6106de85604051806060016040528060288152602001611735602891396001600160a01b038a166000908152600160205260408120906106bd610c5a565b6001600160a01b031681526020810191909152604001600020549190610ea5565b610c5e565b5060019392505050565b60065481565b6001600160a01b0381166000908152600b602052604090205415155b919050565b60055460ff1690565b600061065061072a610c5a565b846106de856001600061073b610c5a565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610bf9565b6000610778600654610f3c565b15610654576009546001600160a01b03161580156107a957600980546001600160a01b03191633179055600654600a555b6010546107be846107b861065a565b90610bf9565b11156107c957600080fd5b6107d3848461120e565b6001915080156107f357600980546001600160a01b03191690556000600a555b5092915050565b6008818154811061080757fe5b600091825260209091200154905081565b600d6020526000908152604090205481565b610835600654610f3c565b1561088e576009546001600160a01b031615801561086657600980546001600160a01b03191633179055600654600a555b61087083836112fe565b801561088c57600980546001600160a01b03191690556000600a555b505b5050565b6001600160a01b031660009081526020819052604090205490565b6108b76001610f3c565b15610a28576009546001600160a01b03161580156108e757600980546001600160a01b031916331790556001600a555b336000908152600b6020908152604080832054858452600d9092529091205460001990910190600282900a1661094e5760405162461bcd60e51b81526004018080602001828103825260308152602001806117056030913960400191505060405180910390fd5b6000838152600d602090815260408083208054600286900a19169055600e8252918290208054600019019081905560075483518781529283018290528284015233606083015291517f3e0a7036018b5a2a3c5d0afa14e51998ef3cf98c38e4289a8897222b3acf75a79181900360800190a180610a09576109ce846113f4565b6040805185815233602082015281517f55e0dd61c29aac6fc36807628300ad3e3ec68655ae76ae4002f7fb101496fa9f929181900390910190a15b5050801561088e57600980546001600160a01b03191690556000600a55505b50565b600e6020526000908152604090205481565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106325780601f1061060757610100808354040283529160200191610632565b6000610aab600654610f3c565b15610654576009546001600160a01b0316158015610adc57600980546001600160a01b03191633179055600654600a555b610ae684846114c7565b600f54610af39084610bf9565b600f556001915080156107f357600980546001600160a01b03191690556000600a555092915050565b6000610650610b29610c5a565b846106de856040518060600160405280602581526020016118006025913960016000610b53610c5a565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610ea5565b6000610650610b91610c5a565b8484610d4a565b60105481565b60075490565b600b6020526000908152604090205481565b600f5490565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600c6020526000908152604090205481565b600082820183811015610c53576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b038316610ca35760405162461bcd60e51b81526004018080602001828103825260248152602001806117a36024913960400191505060405180910390fd5b6001600160a01b038216610ce85760405162461bcd60e51b815260040180806020018281038252602281526020018061164b6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610d8f5760405162461bcd60e51b815260040180806020018281038252602581526020018061177e6025913960400191505060405180910390fd5b6001600160a01b038216610dd45760405162461bcd60e51b81526004018080602001828103825260238152602001806116066023913960400191505060405180910390fd5b610ddf83838361088c565b610e1c8160405180606001604052806026815260200161166d602691396001600160a01b0386166000908152602081905260409020549190610ea5565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610e4b9082610bf9565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610f345760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ef9578181015183820152602001610ee1565b50505050905090810190601f168015610f265780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6009546000906001600160a01b0316331415610f9b57600a54821115610f935760405162461bcd60e51b81526004018080602001828103825260448152602001806116936044913960600191505060405180910390fd5b50600161070f565b336000908152600b6020526040902054600754600019909101908110610ff25760405162461bcd60e51b815260040180806020018281038252602e8152602001806116d7602e913960400191505060405180910390fd5b600080366040516020018083838082843780830192505050925050506040516020818303038152906040528051906020012090508160020a600d6000838152602001908152602001600020541660001461107d5760405162461bcd60e51b81526004018080602001828103825260398152602001806117c76039913960400191505060405180910390fd5b6000818152600d602090815260408083208054600287900a179055600e9091529020805460019081019182905581141561113f57600880546000848152600c60209081526040808320849055600184018555939091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee390910184905560075482518581529182018890528183015233606082015290517f6bab0114f9524353d2d33e64edd3ebbd16e21edd57de2226ba76c310a7ce22659181900360800190a15b60075460408051848152602081018490528082018890526060810192909252336080830152517f8dd9582c6577aea81973b5adeb6c135f6e18565d99578b7ba0c9377437ec02219181900360a00190a16000828152600e6020526040902054851415611203576111ae826113f4565b600754604080518481526020810188905280820192909252336060830152517f8a11c8ca99994c292318ce367f65bf6ff61d390bc814b3588496f6fbcc32807a9181900360800190a16001935050505061070f565b506000949350505050565b6001600160a01b038216611269576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6112756000838361088c565b6002546112829082610bf9565b6002556001600160a01b0382166000908152602081905260409020546112a89082610bf9565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b03821661131157600080fd5b60005b6007548110156113af576007818154811061132b57fe5b6000918252602090912001546001600160a01b03838116911614156113a757826007828154811061135857fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055848316808352600b90915260408083208054948816845290832093909355815290556113af565b600101611314565b50816001600160a01b0316816001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000818152600c6020526040902054600854600019018110156114795760088054600019810190811061142357fe5b90600052602060002001546008828154811061143b57fe5b906000526020600020018190555080600c60006008848154811061145b57fe5b90600052602060002001548152602001908152602001600020819055505b600880548061148457fe5b600082815260208082208301600019908101839055909201909255928152600d83526040808220829055600e8452808220829055600c9093529182209190915550565b6001600160a01b03821661150c5760405162461bcd60e51b815260040180806020018281038252602181526020018061175d6021913960400191505060405180910390fd5b6115188260008361088c565b61155581604051806060016040528060228152602001611629602291396001600160a01b0385166000908152602081905260409020549190610ea5565b6001600160a01b03831660009081526020819052604090205560025461157b90826115c3565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6000610c5383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ea556fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365636865636b486f774d616e794f776e6572733a206e6573746564206f776e657273206d6f64696669657220636865636b2072657175697265206d6f7265206f776e657273636865636b486f774d616e794f776e6572733a206d73672e73656e646572206973206e6f7420616e206f776e657263616e63656c50656e64696e673a206f7065726174696f6e206e6f7420666f756e6420666f722074686973207573657245524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373636865636b486f774d616e794f776e6572733a206f776e657220616c726561647920766f74656420666f7220746865206f7065726174696f6e45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220275a648d9edc525bef2974ba3df0343f5c41504879ddbaf2808a62cd8188ab2c64736f6c634300060c0033",
  "bytecodeSha1": "adea5d2d8795c2d6263c518d25573c99b2287f7e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "StandardToken",
  "coverageMap": {
    "branches": {
      "0": {
        "ERC20._approve": {
          "88": [
            24368,
            24387,
            true
          ],
          "89": [
            24446,
            24467,
            true
          ]
        },
        "ERC20._burn": {
          "103": [
            23515,
            23536,
            true
          ]
        },
        "ERC20._mint": {
          "99": [
            22826,
            22847,
            true
          ]
        },
        "ERC20._transfer": {
          "90": [
            22048,
            22068,
            true
          ],
          "91": [
            22128,
            22151,
            true
          ]
        },
        "Multiownable._transferOwnership": {
          "100": [
            30942,
            30965,
            true
          ],
          "101": [
            31038,
            31060,
            false
          ]
        },
        "Multiownable.cancelPending": {
          "84": [
            27165,
            27186,
            false
          ],
          "85": [
            30550,
            30574,
            false
          ]
        },
        "Multiownable.checkHowManyOwners": {
          "93": [
            28087,
            28117,
            false
          ],
          "94": [
            28141,
            28167,
            true
          ],
          "95": [
            28351,
            28377,
            true
          ],
          "96": [
            28514,
            28572,
            true
          ],
          "97": [
            28847,
            28871,
            false
          ],
          "98": [
            29248,
            29291,
            false
          ]
        },
        "Multiownable.deleteOperation": {
          "102": [
            29610,
            29642,
            false
          ]
        },
        "SafeMath.add": {
          "87": [
            4697,
            4703,
            true
          ]
        },
        "SafeMath.sub": {
          "92": [
            5570,
            5576,
            true
          ]
        },
        "StandardToken.burn": {
          "86": [
            27572,
            27611,
            false
          ]
        },
        "StandardToken.mint": {
          "83": [
            32241,
            32280,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "33": [
            735,
            752
          ]
        },
        "ERC20._approve": {
          "34": [
            24360,
            24428
          ],
          "35": [
            24438,
            24506
          ],
          "36": [
            24517,
            24553
          ],
          "37": [
            24563,
            24600
          ]
        },
        "ERC20._burn": {
          "77": [
            23507,
            23574
          ],
          "78": [
            23585,
            23634
          ],
          "79": [
            23645,
            23734
          ],
          "80": [
            23744,
            23783
          ],
          "81": [
            23793,
            23835
          ]
        },
        "ERC20._mint": {
          "59": [
            22818,
            22883
          ],
          "60": [
            22894,
            22943
          ],
          "61": [
            22954,
            22993
          ],
          "62": [
            23003,
            23054
          ],
          "63": [
            23064,
            23106
          ]
        },
        "ERC20._transfer": {
          "38": [
            22040,
            22110
          ],
          "39": [
            22120,
            22191
          ],
          "40": [
            22202,
            22249
          ],
          "41": [
            22260,
            22351
          ],
          "42": [
            22361,
            22416
          ],
          "43": [
            22426,
            22466
          ]
        },
        "ERC20.allowance": {
          "30": [
            18984,
            19018
          ]
        },
        "ERC20.approve": {
          "1": [
            19262,
            19301
          ],
          "2": [
            19311,
            19322
          ]
        },
        "ERC20.balanceOf": {
          "15": [
            18411,
            18436
          ]
        },
        "ERC20.decimals": {
          "9": [
            18087,
            18103
          ]
        },
        "ERC20.decreaseAllowance": {
          "26": [
            21312,
            21441
          ]
        },
        "ERC20.increaseAllowance": {
          "10": [
            20605,
            20688
          ]
        },
        "ERC20.name": {
          "0": [
            17189,
            17201
          ]
        },
        "ERC20.symbol": {
          "22": [
            17385,
            17399
          ]
        },
        "ERC20.totalSupply": {
          "3": [
            18242,
            18261
          ]
        },
        "ERC20.transfer": {
          "27": [
            18748,
            18790
          ]
        },
        "ERC20.transferFrom": {
          "5": [
            19911,
            19947
          ],
          "6": [
            19957,
            20078
          ],
          "7": [
            20088,
            20099
          ]
        },
        "Multiownable._transferOwnership": {
          "64": [
            30934,
            30966
          ],
          "65": [
            31080,
            31101
          ],
          "66": [
            31119,
            31170
          ],
          "67": [
            31188,
            31216
          ],
          "68": [
            31234,
            31239
          ],
          "69": [
            31015,
            31018
          ],
          "70": [
            31273,
            31320
          ]
        },
        "Multiownable.allOperationsCount": {
          "4": [
            27089,
            27116
          ]
        },
        "Multiownable.cancelPending": {
          "16": [
            30125,
            30244
          ],
          "17": [
            30254,
            30307
          ],
          "18": [
            30390,
            30444
          ],
          "19": [
            30454,
            30536
          ],
          "20": [
            30590,
            30616
          ],
          "21": [
            30630,
            30676
          ]
        },
        "Multiownable.checkHowManyOwners": {
          "45": [
            28133,
            28240
          ],
          "46": [
            28254,
            28265
          ],
          "47": [
            28343,
            28428
          ],
          "48": [
            28506,
            28634
          ],
          "49": [
            28644,
            28696
          ],
          "50": [
            28779,
            28833
          ],
          "51": [
            28887,
            28942
          ],
          "52": [
            28956,
            28985
          ],
          "53": [
            28999,
            29067
          ],
          "54": [
            29087,
            29176
          ],
          "55": [
            29307,
            29333
          ],
          "56": [
            29347,
            29417
          ],
          "57": [
            29431,
            29442
          ],
          "58": [
            29463,
            29475
          ]
        },
        "Multiownable.deleteOperation": {
          "71": [
            29670,
            29732
          ],
          "72": [
            29746,
            29797
          ],
          "73": [
            29817,
            29836
          ],
          "74": [
            29847,
            29885
          ],
          "75": [
            29895,
            29934
          ],
          "76": [
            29944,
            29983
          ]
        },
        "Multiownable.isOwner": {
          "8": [
            26885,
            26917
          ]
        },
        "Multiownable.ownersCount": {
          "28": [
            26989,
            27009
          ]
        },
        "Multiownable.transferOwnership": {
          "14": [
            30796,
            30836
          ]
        },
        "SafeMath.add": {
          "31": [
            4689,
            4735
          ],
          "32": [
            4746,
            4754
          ]
        },
        "SafeMath.sub": {
          "44": [
            5562,
            5591
          ],
          "82": [
            5109,
            5159
          ]
        },
        "StandardToken.burn": {
          "23": [
            32544,
            32563
          ],
          "24": [
            32573,
            32613
          ],
          "25": [
            32624,
            32635
          ]
        },
        "StandardToken.mint": {
          "11": [
            32233,
            32281
          ],
          "12": [
            32291,
            32310
          ],
          "13": [
            32321,
            32332
          ]
        },
        "StandardToken.totalBurned": {
          "29": [
            32000,
            32019
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "ERC20",
    "IERC20",
    "Multiownable",
    "SafeMath"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "31357:1288:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25794:23;;;;;;;;;;;;;;;;-1:-1:-1;25794:23:0;;:::i;:::-;;;;-1:-1:-1;;;;;25794:23:0;;;;;;;;;;;;;;17127:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19163:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;19163:166:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;18170:98;;;:::i;:::-;;;;;;;;;;;;;;;;27022:101;;;:::i;19789:317::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;19789:317:0;;;;;;;;;;;;;;;;;:::i;25754:34::-;;;:::i;26816:108::-;;;;;;;;;;;;;;;;-1:-1:-1;26816:108:0;-1:-1:-1;;;;;26816:108:0;;:::i;18029:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;20501:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;20501:215:0;;;;;;;;:::i;32132:207::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;32132:207:0;;;;;;;;:::i;25823:30::-;;;;;;;;;;;;;;;;-1:-1:-1;25823:30:0;;:::i;26065:55::-;;;;;;;;;;;;;;;;-1:-1:-1;26065:55:0;;:::i;30699:144::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;30699:144:0;;;;;;;;;;:::i;:::-;;18326:117;;;;;;;;;;;;;;;;-1:-1:-1;18326:117:0;-1:-1:-1;;;;;18326:117:0;;:::i;29996:697::-;;;;;;;;;;;;;;;;-1:-1:-1;29996:697:0;;:::i;26126:56::-;;;;;;;;;;;;;;;;-1:-1:-1;26126:56:0;;:::i;17321:85::-;;;:::i;32443:199::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;32443:199:0;;;;;;;;:::i;21203:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;21203:266:0;;;;;;;;:::i;18646:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;18646:172:0;;;;;;;;:::i;31470:31::-;;;:::i;26930:86::-;;;:::i;25937:45::-;;;;;;;;;;;;;;;;-1:-1:-1;25937:45:0;-1:-1:-1;;;;;25937:45:0;;:::i;31937:89::-;;;:::i;18876:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;18876:149:0;;;;;;;;;;:::i;26005:53::-;;;;;;;;;;;;;;;;-1:-1:-1;26005:53:0;;:::i;25794:23::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25794:23:0;;-1:-1:-1;25794:23:0;:::o;17127:81::-;17196:5;17189:12;;;;;;;;-1:-1:-1;;17189:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17164:13;;17189:12;;17196:5;;17189:12;;17196:5;17189:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17127:81;:::o;19163:166::-;19246:4;19262:39;19271:12;:10;:12::i;:::-;19285:7;19294:6;19262:8;:39::i;:::-;-1:-1:-1;19318:4:0;19163:166;;;;;:::o;18170:98::-;18249:12;;18170:98;:::o;27022:101::-;27096:13;:20;27022:101;:::o;19789:317::-;19895:4;19911:36;19921:6;19929:9;19940:6;19911:9;:36::i;:::-;19957:121;19966:6;19974:12;:10;:12::i;:::-;19988:89;20026:6;19988:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19988:19:0;;;;;;:11;:19;;;;;;20008:12;:10;:12::i;:::-;-1:-1:-1;;;;;19988:33:0;;;;;;;;;;;;-1:-1:-1;19988:33:0;;;:89;:37;:89::i;:::-;19957:8;:121::i;:::-;-1:-1:-1;20095:4:0;19789:317;;;;;:::o;25754:34::-;;;;:::o;26816:108::-;-1:-1:-1;;;;;26892:21:0;;26869:4;26892:21;;;:13;:21;;;;;;:25;;26816:108;;;;:::o;18029:81::-;18094:9;;;;18029:81;:::o;20501:215::-;20589:4;20605:83;20614:12;:10;:12::i;:::-;20628:7;20637:50;20676:10;20637:11;:25;20649:12;:10;:12::i;:::-;-1:-1:-1;;;;;20637:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;20637:25:0;;;:34;;;;;;;;;;;:38;:50::i;32132:207::-;32217:4;27572:39;27591:19;;27572:18;:39::i;:::-;27568:397;;;27642:16;;-1:-1:-1;;;;;27642:16:0;:30;27687:129;;;;27717:16;:29;;-1:-1:-1;;;;;;27717:29:0;27736:10;27717:29;;;27782:19;;27764:15;:37;27687:129;32271:9:::1;;32241:26;32259:7;32241:13;:11;:13::i;:::-;:17:::0;::::1;:26::i;:::-;:39;;32233:48;;;::::0;::::1;;32291:19;32297:3;32302:7;32291:5;:19::i;:::-;32328:4;32321:11;;27848:6:::0;27844:111;;;27874:16;:29;;-1:-1:-1;;;;;;27874:29:0;;;27901:1;27921:15;:19;27844:111;27568:397;32132:207;;;;:::o;25823:30::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25823:30:0;:::o;26065:55::-;;;;;;;;;;;;;:::o;30699:144::-;27572:39;27591:19;;27572:18;:39::i;:::-;27568:397;;;27642:16;;-1:-1:-1;;;;;27642:16:0;:30;27687:129;;;;27717:16;:29;;-1:-1:-1;;;;;;27717:29:0;27736:10;27717:29;;;27782:19;;27764:15;:37;27687:129;30796:40:::1;30815:9;30826;30796:18;:40::i;:::-;27848:6:::0;27844:111;;;27874:16;:29;;-1:-1:-1;;;;;;27874:29:0;;;27901:1;27921:15;:19;27844:111;27568:397;;30699:144;;:::o;18326:117::-;-1:-1:-1;;;;;18418:18:0;18392:7;18418:18;;;;;;;;;;;;18326:117::o;29996:697::-;27165:21;27184:1;27165:18;:21::i;:::-;27161:361;;;27217:16;;-1:-1:-1;;;;;27217:16:0;:30;27262:111;;;;27292:16;:29;;-1:-1:-1;;;;;;27292:29:0;27311:10;27292:29;;;;27339:15;:19;27262:111;30100:10:::1;30068:15;30086:25:::0;;;:13:::1;:25;::::0;;;;;;;;30134:31;;;:20:::1;:31:::0;;;;;;;-1:-1:-1;;30086:29:0;;;;30169:1:::1;:15:::0;;::::1;30134:51;30125:119;;;;-1:-1:-1::0;;;30125:119:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30254:31;::::0;;;:20:::1;:31;::::0;;;;;;;:53;;30291:1:::1;:15:::0;;::::1;30289:18;30254:53;::::0;;30344:21:::1;:32:::0;;;;;;;;-1:-1:-1;;30344:36:0;30390:54;;;;30510:6:::1;:13:::0;30459:77;;;;;;;::::1;::::0;;;;;;;30525:10:::1;30459:77:::0;;;;;;::::1;::::0;;;;;;;::::1;30550:24:::0;30546:141:::1;;30590:26;30606:9;30590:15;:26::i;:::-;30635:41;::::0;;;;;30665:10:::1;30635:41;::::0;::::1;::::0;;;::::1;::::0;;;;;;;;;::::1;30546:141;27386:1;;27405:6:::0;27401:111;;;27431:16;:29;;-1:-1:-1;;;;;;27431:29:0;;;27458:1;27478:15;:19;27161:361;;29996:697;:::o;26126:56::-;;;;;;;;;;;;;:::o;17321:85::-;17392:7;17385:14;;;;;;;;-1:-1:-1;;17385:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17360:13;;17385:14;;17392:7;;17385:14;;17392:7;17385:14;;;;;;;;;;;;;;;;;;;;;;;;32443:199;32528:4;27572:39;27591:19;;27572:18;:39::i;:::-;27568:397;;;27642:16;;-1:-1:-1;;;;;27642:16:0;:30;27687:129;;;;27717:16;:29;;-1:-1:-1;;;;;;27717:29:0;27736:10;27717:29;;;27782:19;;27764:15;:37;27687:129;32544:19:::1;32550:3;32555:7;32544:5;:19::i;:::-;32588:12;::::0;:25:::1;::::0;32605:7;32588:16:::1;:25::i;:::-;32573:12;:40:::0;32631:4:::1;::::0;-1:-1:-1;27848:6:0;27844:111;;;27874:16;:29;;-1:-1:-1;;;;;;27874:29:0;;;27901:1;27921:15;:19;27568:397;32443:199;;;;:::o;21203:266::-;21296:4;21312:129;21321:12;:10;:12::i;:::-;21335:7;21344:96;21383:15;21344:96;;;;;;;;;;;;;;;;;:11;:25;21356:12;:10;:12::i;:::-;-1:-1:-1;;;;;21344:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;21344:25:0;;;:34;;;;;;;;;;;:96;:38;:96::i;18646:172::-;18732:4;18748:42;18758:12;:10;:12::i;:::-;18772:9;18783:6;18748:9;:42::i;31470:31::-;;;;:::o;26930:86::-;26996:6;:13;26930:86;:::o;25937:45::-;;;;;;;;;;;;;:::o;31937:89::-;32007:12;;31937:89;:::o;18876:149::-;-1:-1:-1;;;;;18991:18:0;;;18965:7;18991:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;18876:149::o;26005:53::-;;;;;;;;;;;;;:::o;4585:176::-;4643:7;4674:5;;;4697:6;;;;4689:46;;;;;-1:-1:-1;;;4689:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4753:1;4585:176;-1:-1:-1;;;4585:176:0:o;655:104::-;742:10;655:104;:::o;24267:340::-;-1:-1:-1;;;;;24368:19:0;;24360:68;;;;-1:-1:-1;;;24360:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;24446:21:0;;24438:68;;;;-1:-1:-1;;;24438:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;24517:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;24568:32;;;;;;;;;;;;;;;;;24267:340;;;:::o;21943:530::-;-1:-1:-1;;;;;22048:20:0;;22040:70;;;;-1:-1:-1;;;22040:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;22128:23:0;;22120:71;;;;-1:-1:-1;;;22120:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22202:47;22223:6;22231:9;22242:6;22202:20;:47::i;:::-;22280:71;22302:6;22280:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;22280:17:0;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;22260:17:0;;;:9;:17;;;;;;;;;;;:91;;;;22384:20;;;;;;;:32;;22409:6;22384:24;:32::i;:::-;-1:-1:-1;;;;;22361:20:0;;;:9;:20;;;;;;;;;;;;:55;;;;22431:35;;;;;;;22361:20;;22431:35;;;;;;;;;;;;;21943:530;;;:::o;5457:187::-;5543:7;5578:12;5570:6;;;;5562:29;;;;-1:-1:-1;;;5562:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5613:5:0;;;5457:187::o;28008:1474::-;28087:16;;28067:4;;-1:-1:-1;;;;;28087:16:0;28107:10;28087:30;28083:193;;;28152:15;;28141:7;:26;;28133:107;;;;-1:-1:-1;;;28133:107:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28261:4:0;28254:11;;28083:193;28318:10;28286:15;28304:25;;;:13;:25;;;;;;28364:6;:13;-1:-1:-1;;28304:29:0;;;;28351:26;;28343:85;;;;-1:-1:-1;;;28343:85:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28438:17;28485:8;;28468:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28458:37;;;;;;28438:57;;28555:10;28550:1;:15;28515:20;:31;28536:9;28515:31;;;;;;;;;;;;:51;28571:1;28514:58;28506:128;;;;-1:-1:-1;;;28506:128:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28644:31;;;;:20;:31;;;;;;;;:52;;28680:1;:15;;;28644:52;;;28733:21;:32;;;;;;;-1:-1:-1;28733:36:0;;;28779:54;;;;28847:24;;28843:235;;;28922:13;:20;;28887:32;;;;:21;:32;;;;;;;;:55;;;28956:29;;;;;;;;;;;;;;;;29041:6;:13;29004:63;;;;;;;;;;;;;;;29056:10;29004:63;;;;;;;;;;;;;;;28843:235;29150:6;:13;29092:84;;;;;;;;;;;;;;;;;;;;;;;;;29165:10;29092:84;;;;;;;;;;;;;;29248:32;;;;:21;:32;;;;;;:43;;29244:209;;;29307:26;29323:9;29307:15;:26::i;:::-;29391:6;:13;29352:65;;;;;;;;;;;;;;;;;;;29406:10;29352:65;;;;;;;;;;;;;;29438:4;29431:11;;;;;;;29244:209;-1:-1:-1;29470:5:0;;28008:1474;-1:-1:-1;;;;28008:1474:0:o;22743:370::-;-1:-1:-1;;;;;22826:21:0;;22818:65;;;;;-1:-1:-1;;;22818:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;22894:49;22923:1;22927:7;22936:6;22894:20;:49::i;:::-;22969:12;;:24;;22986:6;22969:16;:24::i;:::-;22954:12;:39;-1:-1:-1;;;;;23024:18:0;;:9;:18;;;;;;;;;;;:30;;23047:6;23024:22;:30::i;:::-;-1:-1:-1;;;;;23003:18:0;;:9;:18;;;;;;;;;;;:51;;;;23069:37;;;;;;;23003:18;;:9;;23069:37;;;;;;;;;;22743:370;;:::o;30849:478::-;-1:-1:-1;;;;;30942:23:0;;30934:32;;;;;;30981:9;30977:287;31000:6;:13;30996:17;;30977:287;;;31051:6;31058:1;31051:9;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;31038:22:0;;;31051:9;;31038:22;31034:220;;;31092:9;31080:6;31087:1;31080:9;;;;;;;;;;;;;;;;;;;;:21;;-1:-1:-1;;;;;;31080:21:0;-1:-1:-1;;;;;31080:21:0;;;;;;31146:24;;;;;;:13;:24;;;;;;;;;31119;;;;;;;;:51;;;;31188:24;;:28;;31234:5;;31034:220;31015:3;;30977:287;;;;31310:9;-1:-1:-1;;;;;31278:42:0;31299:9;-1:-1:-1;;;;;31278:42:0;;;;;;;;;;;30849:478;;:::o;29488:502::-;29551:10;29564:32;;;:21;:32;;;;;;29618:13;:20;-1:-1:-1;;29618:24:0;29610:32;;29606:202;;;29693:13;29707:20;;-1:-1:-1;;29707:24:0;;;29693:39;;;;;;;;;;;;;;29670:13;29684:5;29670:20;;;;;;;;;;;;;;;:62;;;;29792:5;29746:21;:43;29768:13;29782:5;29768:20;;;;;;;;;;;;;;;;29746:43;;;;;;;;;;;:51;;;;29606:202;29817:13;:19;;;;;;;;;;;;;;;;;-1:-1:-1;;29817:19:0;;;;;;;;;;;;29854:31;;;:20;:31;;;;;;29847:38;;;29902:21;:32;;;;;29895:39;;;29951:21;:32;;;;;;29944:39;;;;-1:-1:-1;29488:502:0:o;23432:410::-;-1:-1:-1;;;;;23515:21:0;;23507:67;;;;-1:-1:-1;;;23507:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23585:49;23606:7;23623:1;23627:6;23585:20;:49::i;:::-;23666:68;23689:6;23666:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23666:18:0;;:9;:18;;;;;;;;;;;;:68;:22;:68::i;:::-;-1:-1:-1;;;;;23645:18:0;;:9;:18;;;;;;;;;;:89;23759:12;;:24;;23776:6;23759:16;:24::i;:::-;23744:12;:39;23798:37;;;;;;;;23824:1;;-1:-1:-1;;;;;23798:37:0;;;;;;;;;;;;23432:410;;:::o;5032:134::-;5090:7;5116:43;5120:1;5123;5116:43;;;;;;;;;;;;;;;;;:3;:43::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(address,uint256)": {
        "notice": "Creates `_amount` token to `_to`. Must only be called by the Governance Contracts"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "notice": "Creates `_amount` token to `_to`. Must only be called by the  Governance Contracts"
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalBurned()": {
        "details": "See {IERC20-totalSupply}."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    31357,
    32645
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D435421 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xCC047A04 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCC047A04 EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0xD89135CD EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0xEA1A2644 EQ PUSH2 0x562 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0xB36C1284 EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0xB9488546 EQ PUSH2 0x4FE JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x90A53085 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x90A53085 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x49E JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x6D435421 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x893372CA EQ PUSH2 0x430 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x2F4A81DF GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x39509351 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x431AB233 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x568B5915 EQ PUSH2 0x3BD JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x2F4A81DF EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x2F54BF6E EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x32A JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x25E7C27 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x22F2F89A EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2C6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x229 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x211 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x256 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x63C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH2 0x660 JUMP JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x666 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x6ED JUMP JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x332 PUSH2 0x714 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x71D JUMP JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x76B JUMP JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x7FA JUMP JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x818 JUMP JUMPDEST PUSH2 0x408 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x82A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x892 JUMP JUMPDEST PUSH2 0x408 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x8AD JUMP JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xA2B JUMP JUMPDEST PUSH2 0x1EF PUSH2 0xA3D JUMP JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA9E JUMP JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xB1C JUMP JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xB84 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0xB98 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0xB9E JUMP JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBA4 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0xBB6 JUMP JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x54A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xBBC JUMP JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x58C JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x632 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x607 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x632 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x615 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x650 PUSH2 0x649 PUSH2 0xC5A JUMP JUMPDEST DUP5 DUP5 PUSH2 0xC5E JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x673 DUP5 DUP5 DUP5 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0x6E3 DUP5 PUSH2 0x67F PUSH2 0xC5A JUMP JUMPDEST PUSH2 0x6DE DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1735 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x6BD PUSH2 0xC5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xEA5 JUMP JUMPDEST PUSH2 0xC5E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x650 PUSH2 0x72A PUSH2 0xC5A JUMP JUMPDEST DUP5 PUSH2 0x6DE DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x73B PUSH2 0xC5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x778 PUSH1 0x6 SLOAD PUSH2 0xF3C JUMP JUMPDEST ISZERO PUSH2 0x654 JUMPI PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO PUSH2 0x7A9 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH1 0xA SSTORE JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x7BE DUP5 PUSH2 0x7B8 PUSH2 0x65A JUMP JUMPDEST SWAP1 PUSH2 0xBF9 JUMP JUMPDEST GT ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D3 DUP5 DUP5 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP DUP1 ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0xA SSTORE JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x807 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x835 PUSH1 0x6 SLOAD PUSH2 0xF3C JUMP JUMPDEST ISZERO PUSH2 0x88E JUMPI PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO PUSH2 0x866 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH1 0xA SSTORE JUMPDEST PUSH2 0x870 DUP4 DUP4 PUSH2 0x12FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x88C JUMPI PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0xA SSTORE JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8B7 PUSH1 0x1 PUSH2 0xF3C JUMP JUMPDEST ISZERO PUSH2 0xA28 JUMPI PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO PUSH2 0x8E7 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0xA SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP6 DUP5 MSTORE PUSH1 0xD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0x0 NOT SWAP1 SWAP2 ADD SWAP1 PUSH1 0x2 DUP3 SWAP1 EXP AND PUSH2 0x94E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1705 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP7 SWAP1 EXP NOT AND SWAP1 SSTORE PUSH1 0xE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x7 SLOAD DUP4 MLOAD DUP8 DUP2 MSTORE SWAP3 DUP4 ADD DUP3 SWAP1 MSTORE DUP3 DUP5 ADD MSTORE CALLER PUSH1 0x60 DUP4 ADD MSTORE SWAP2 MLOAD PUSH32 0x3E0A7036018B5A2A3C5D0AFA14E51998EF3CF98C38E4289A8897222B3ACF75A7 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 DUP1 PUSH2 0xA09 JUMPI PUSH2 0x9CE DUP5 PUSH2 0x13F4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x55E0DD61C29AAC6FC36807628300AD3E3EC68655AE76AE4002F7FB101496FA9F SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 JUMPDEST POP POP DUP1 ISZERO PUSH2 0x88E JUMPI PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0xA SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x632 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x607 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x632 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAB PUSH1 0x6 SLOAD PUSH2 0xF3C JUMP JUMPDEST ISZERO PUSH2 0x654 JUMPI PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO PUSH2 0xADC JUMPI PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH1 0xA SSTORE JUMPDEST PUSH2 0xAE6 DUP5 DUP5 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0xAF3 SWAP1 DUP5 PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0xF SSTORE PUSH1 0x1 SWAP2 POP DUP1 ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0xA SSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x650 PUSH2 0xB29 PUSH2 0xC5A JUMP JUMPDEST DUP5 PUSH2 0x6DE DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1800 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0xB53 PUSH2 0xC5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xEA5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x650 PUSH2 0xB91 PUSH2 0xC5A JUMP JUMPDEST DUP5 DUP5 PUSH2 0xD4A JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xC53 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17A3 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x164B PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x177E PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1606 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDDF DUP4 DUP4 DUP4 PUSH2 0x88C JUMP JUMPDEST PUSH2 0xE1C DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166D PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xEA5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xE4B SWAP1 DUP3 PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xF34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEF9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xEE1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xF26 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0xF9B JUMPI PUSH1 0xA SLOAD DUP3 GT ISZERO PUSH2 0xF93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x44 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1693 PUSH1 0x44 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH2 0x70F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x7 SLOAD PUSH1 0x0 NOT SWAP1 SWAP2 ADD SWAP1 DUP2 LT PUSH2 0xFF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x16D7 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP2 PUSH1 0x2 EXP PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x107D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17C7 PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP8 SWAP1 EXP OR SWAP1 SSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP2 DUP3 SWAP1 SSTORE DUP2 EQ ISZERO PUSH2 0x113F JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 DUP5 ADD DUP6 SSTORE SWAP4 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP1 SWAP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x7 SLOAD DUP3 MLOAD DUP6 DUP2 MSTORE SWAP2 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 DUP4 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0x6BAB0114F9524353D2D33E64EDD3EBBD16E21EDD57DE2226BA76C310A7CE2265 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP1 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER PUSH1 0x80 DUP4 ADD MSTORE MLOAD PUSH32 0x8DD9582C6577AEA81973B5ADEB6C135F6E18565D99578B7BA0C9377437EC0221 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP6 EQ ISZERO PUSH2 0x1203 JUMPI PUSH2 0x11AE DUP3 PUSH2 0x13F4 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER PUSH1 0x60 DUP4 ADD MSTORE MLOAD PUSH32 0x8A11C8CA99994C292318CE367F65BF6FF61D390BC814B3588496F6FBCC32807A SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x70F JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1269 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1275 PUSH1 0x0 DUP4 DUP4 PUSH2 0x88C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1282 SWAP1 DUP3 PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x12A8 SWAP1 DUP3 PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x13AF JUMPI PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x132B JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x13A7 JUMPI DUP3 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1358 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE DUP5 DUP4 AND DUP1 DUP4 MSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP5 DUP9 AND DUP5 MSTORE SWAP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP2 MSTORE SWAP1 SSTORE PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1314 JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x8 SLOAD PUSH1 0x0 NOT ADD DUP2 LT ISZERO PUSH2 0x1479 JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x1423 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x143B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xC PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x145B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x1484 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP4 SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE SWAP3 DUP2 MSTORE PUSH1 0xD DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0xE DUP5 MSTORE DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0xC SWAP1 SWAP4 MSTORE SWAP2 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x150C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x175D PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1518 DUP3 PUSH1 0x0 DUP4 PUSH2 0x88C JUMP JUMPDEST PUSH2 0x1555 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1629 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xEA5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x157B SWAP1 DUP3 PUSH2 0x15C3 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC53 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xEA5 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636563686563 PUSH12 0x486F774D616E794F776E6572 PUSH20 0x3A206E6573746564206F776E657273206D6F6469 PUSH7 0x69657220636865 PUSH4 0x6B207265 PUSH18 0x75697265206D6F7265206F776E6572736368 PUSH6 0x636B486F774D PUSH2 0x6E79 0x4F PUSH24 0x6E6572733A206D73672E73656E646572206973206E6F7420 PUSH2 0x6E20 PUSH16 0x776E657263616E63656C50656E64696E PUSH8 0x3A206F7065726174 PUSH10 0x6F6E206E6F7420666F75 PUSH15 0x6420666F7220746869732075736572 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20627572 PUSH15 0x2066726F6D20746865207A65726F20 PUSH2 0x6464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 PUSH4 0x6865636B 0x48 PUSH16 0x774D616E794F776E6572733A206F776E PUSH6 0x7220616C7265 PUSH2 0x6479 KECCAK256 PUSH23 0x6F74656420666F7220746865206F7065726174696F6E45 MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220275A PUSH5 0x8D9EDC525B 0xEF 0x29 PUSH21 0xBA3DF0343F5C41504879DDBAF2808A62CD8188AB2C PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A9"
    },
    "25": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6D435421"
    },
    "38": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF9"
    },
    "42": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "49": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "GT",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97"
    },
    "53": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCC047A04"
    },
    "60": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "GT",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCC047A04"
    },
    "71": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x506"
    },
    "75": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD89135CD"
    },
    "82": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x52C"
    },
    "86": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x534"
    },
    "97": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xEA1A2644"
    },
    "104": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "105": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x562"
    },
    "108": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A9"
    },
    "112": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMP",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "120": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4CA"
    },
    "124": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB36C1284"
    },
    "131": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F6"
    },
    "135": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB9488546"
    },
    "142": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4FE"
    },
    "146": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A9"
    },
    "150": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMP",
      "path": "0"
    },
    "151": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "153": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x90A53085"
    },
    "158": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "GT",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x90A53085"
    },
    "169": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44D"
    },
    "173": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "174": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "175": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "180": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46A"
    },
    "184": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "185": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9DC29FAC"
    },
    "191": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x472"
    },
    "195": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA457C2D7"
    },
    "202": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x49E"
    },
    "206": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A9"
    },
    "210": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMP",
      "path": "0"
    },
    "211": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "212": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "213": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6D435421"
    },
    "218": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "219": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DA"
    },
    "222": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "223": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "224": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "229": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "230": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40A"
    },
    "233": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "234": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "235": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x893372CA"
    },
    "240": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "241": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x430"
    },
    "244": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "245": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A9"
    },
    "248": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMP",
      "path": "0"
    },
    "249": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "250": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "251": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2F4A81DF"
    },
    "256": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "GT",
      "path": "0"
    },
    "257": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x166"
    },
    "260": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "261": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "262": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x39509351"
    },
    "267": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "GT",
      "path": "0"
    },
    "268": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "271": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "272": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "273": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x39509351"
    },
    "278": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "279": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x348"
    },
    "282": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "283": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "284": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x40C10F19"
    },
    "289": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "290": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x374"
    },
    "293": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "294": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "295": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x431AB233"
    },
    "300": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "301": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A0"
    },
    "304": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "305": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "306": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x568B5915"
    },
    "311": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "312": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BD"
    },
    "315": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "316": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A9"
    },
    "319": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMP",
      "path": "0"
    },
    "320": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "321": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "322": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2F4A81DF"
    },
    "327": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "328": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FC"
    },
    "331": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "332": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "333": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2F54BF6E"
    },
    "338": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "339": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x304"
    },
    "342": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "343": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "344": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "349": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "350": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32A"
    },
    "353": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "354": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A9"
    },
    "357": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMP",
      "path": "0"
    },
    "358": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "359": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "360": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x25E7C27"
    },
    "365": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "366": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AE"
    },
    "369": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "370": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "371": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "376": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "377": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E7"
    },
    "380": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "381": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "382": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "387": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "388": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x264"
    },
    "391": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "392": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "393": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "398": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "399": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A4"
    },
    "402": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "403": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "404": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x22F2F89A"
    },
    "409": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "410": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BE"
    },
    "413": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "414": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "415": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "420": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "EQ",
      "path": "0"
    },
    "421": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C6"
    },
    "424": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "425": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "426": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "428": {
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "429": {
      "first_revert": true,
      "fn": null,
      "offset": [
        31357,
        32645
      ],
      "op": "REVERT",
      "path": "0"
    },
    "430": {
      "offset": [
        25794,
        25817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "431": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CB"
    },
    "434": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "436": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "437": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "438": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "SUB",
      "path": "0"
    },
    "439": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "441": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "442": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "LT",
      "path": "0"
    },
    "443": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "444": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C4"
    },
    "447": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "448": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "450": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "451": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "REVERT",
      "path": "0"
    },
    "452": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "453": {
      "op": "POP"
    },
    "454": {
      "offset": [
        25794,
        25817
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "455": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57F"
    },
    "458": {
      "fn": null,
      "jump": "i",
      "offset": [
        25794,
        25817
      ],
      "op": "JUMP",
      "path": "0"
    },
    "459": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "460": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "462": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "463": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "470": {
      "op": "SHL"
    },
    "471": {
      "op": "SUB"
    },
    "472": {
      "offset": [
        25794,
        25817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "473": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "474": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "AND",
      "path": "0"
    },
    "475": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "DUP3",
      "path": "0"
    },
    "476": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "477": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "478": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "479": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "480": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "481": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "SUB",
      "path": "0"
    },
    "482": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "484": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "ADD",
      "path": "0"
    },
    "485": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "486": {
      "fn": null,
      "offset": [
        25794,
        25817
      ],
      "op": "RETURN",
      "path": "0"
    },
    "487": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "488": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EF"
    },
    "491": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A6"
    },
    "494": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        17127,
        17208
      ],
      "op": "JUMP",
      "path": "0"
    },
    "495": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "496": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "498": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP1",
      "path": "0"
    },
    "499": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "500": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "502": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP1",
      "path": "0"
    },
    "503": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP3",
      "path": "0"
    },
    "504": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "505": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP4",
      "path": "0"
    },
    "506": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "507": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP2",
      "path": "0"
    },
    "508": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP4",
      "path": "0"
    },
    "509": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "ADD",
      "path": "0"
    },
    "510": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "511": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP4",
      "path": "0"
    },
    "512": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "513": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "514": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "515": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP4",
      "path": "0"
    },
    "516": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "517": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "518": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP4",
      "path": "0"
    },
    "519": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "ADD",
      "path": "0"
    },
    "520": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "521": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP6",
      "path": "0"
    },
    "522": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "ADD",
      "path": "0"
    },
    "523": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "524": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP1",
      "path": "0"
    },
    "525": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP4",
      "path": "0"
    },
    "526": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP4",
      "path": "0"
    },
    "527": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "529": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "530": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP4",
      "path": "0"
    },
    "531": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP2",
      "path": "0"
    },
    "532": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "LT",
      "path": "0"
    },
    "533": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "534": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x229"
    },
    "537": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "538": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP2",
      "path": "0"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP2",
      "path": "0"
    },
    "540": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "ADD",
      "path": "0"
    },
    "541": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "542": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP4",
      "path": "0"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP3",
      "path": "0"
    },
    "544": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "ADD",
      "path": "0"
    },
    "545": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "546": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "548": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "ADD",
      "path": "0"
    },
    "549": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x211"
    },
    "552": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "JUMP",
      "path": "0"
    },
    "553": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "554": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "POP",
      "path": "0"
    },
    "555": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "POP",
      "path": "0"
    },
    "556": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "POP",
      "path": "0"
    },
    "557": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "POP",
      "path": "0"
    },
    "558": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "559": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "POP",
      "path": "0"
    },
    "560": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "561": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP2",
      "path": "0"
    },
    "562": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "ADD",
      "path": "0"
    },
    "563": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "564": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "566": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "AND",
      "path": "0"
    },
    "567": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP1",
      "path": "0"
    },
    "568": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "569": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x256"
    },
    "572": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "573": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP1",
      "path": "0"
    },
    "574": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP3",
      "path": "0"
    },
    "575": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "SUB",
      "path": "0"
    },
    "576": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP1",
      "path": "0"
    },
    "577": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "578": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "580": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP4",
      "path": "0"
    },
    "581": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "583": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "SUB",
      "path": "0"
    },
    "584": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "587": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "EXP",
      "path": "0"
    },
    "588": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "SUB",
      "path": "0"
    },
    "589": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "NOT",
      "path": "0"
    },
    "590": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "AND",
      "path": "0"
    },
    "591": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP2",
      "path": "0"
    },
    "592": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "593": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "595": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "ADD",
      "path": "0"
    },
    "596": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "597": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "POP",
      "path": "0"
    },
    "598": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "599": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "POP",
      "path": "0"
    },
    "600": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "601": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "POP",
      "path": "0"
    },
    "602": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "POP",
      "path": "0"
    },
    "603": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "POP",
      "path": "0"
    },
    "604": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "606": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "607": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "DUP1",
      "path": "0"
    },
    "608": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "609": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "SUB",
      "path": "0"
    },
    "610": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "611": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "RETURN",
      "path": "0"
    },
    "612": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "613": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x290"
    },
    "616": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "618": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "DUP1",
      "path": "0"
    },
    "619": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "620": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "SUB",
      "path": "0"
    },
    "621": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "623": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "DUP2",
      "path": "0"
    },
    "624": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "LT",
      "path": "0"
    },
    "625": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "626": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27A"
    },
    "629": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "630": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "632": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "DUP1",
      "path": "0"
    },
    "633": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "REVERT",
      "path": "0"
    },
    "634": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "635": {
      "op": "POP"
    },
    "636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "642": {
      "op": "SHL"
    },
    "643": {
      "op": "SUB"
    },
    "644": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "DUP2",
      "path": "0"
    },
    "645": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "646": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "AND",
      "path": "0"
    },
    "647": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "648": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "650": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "ADD",
      "path": "0"
    },
    "651": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "652": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63C"
    },
    "655": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        19163,
        19329
      ],
      "op": "JUMP",
      "path": "0"
    },
    "656": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "657": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "659": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "DUP1",
      "path": "0"
    },
    "660": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "661": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "662": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "663": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "664": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "DUP3",
      "path": "0"
    },
    "665": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "666": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "667": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "668": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "DUP2",
      "path": "0"
    },
    "669": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "670": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "SUB",
      "path": "0"
    },
    "671": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "673": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "ADD",
      "path": "0"
    },
    "674": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "675": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "RETURN",
      "path": "0"
    },
    "676": {
      "fn": "ERC20.totalSupply",
      "offset": [
        18170,
        18268
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "677": {
      "fn": "ERC20.totalSupply",
      "offset": [
        18170,
        18268
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AC"
    },
    "680": {
      "fn": "ERC20.totalSupply",
      "offset": [
        18170,
        18268
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x65A"
    },
    "683": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        18170,
        18268
      ],
      "op": "JUMP",
      "path": "0"
    },
    "684": {
      "fn": "ERC20.totalSupply",
      "offset": [
        18170,
        18268
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "685": {
      "fn": "ERC20.totalSupply",
      "offset": [
        18170,
        18268
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "687": {
      "fn": "ERC20.totalSupply",
      "offset": [
        18170,
        18268
      ],
      "op": "DUP1",
      "path": "0"
    },
    "688": {
      "fn": "ERC20.totalSupply",
      "offset": [
        18170,
        18268
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "689": {
      "fn": "ERC20.totalSupply",
      "offset": [
        18170,
        18268
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "690": {
      "fn": "ERC20.totalSupply",
      "offset": [
        18170,
        18268
      ],
      "op": "DUP3",
      "path": "0"
    },
    "691": {
      "fn": "ERC20.totalSupply",
      "offset": [
        18170,
        18268
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "692": {
      "fn": "ERC20.totalSupply",
      "offset": [
        18170,
        18268
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "693": {
      "fn": "ERC20.totalSupply",
      "offset": [
        18170,
        18268
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "694": {
      "fn": "ERC20.totalSupply",
      "offset": [
        18170,
        18268
      ],
      "op": "DUP2",
      "path": "0"
    },
    "695": {
      "fn": "ERC20.totalSupply",
      "offset": [
        18170,
        18268
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "696": {
      "fn": "ERC20.totalSupply",
      "offset": [
        18170,
        18268
      ],
      "op": "SUB",
      "path": "0"
    },
    "697": {
      "fn": "ERC20.totalSupply",
      "offset": [
        18170,
        18268
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "699": {
      "fn": "ERC20.totalSupply",
      "offset": [
        18170,
        18268
      ],
      "op": "ADD",
      "path": "0"
    },
    "700": {
      "fn": "ERC20.totalSupply",
      "offset": [
        18170,
        18268
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "701": {
      "fn": "ERC20.totalSupply",
      "offset": [
        18170,
        18268
      ],
      "op": "RETURN",
      "path": "0"
    },
    "702": {
      "fn": "Multiownable.allOperationsCount",
      "offset": [
        27022,
        27123
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "703": {
      "fn": "Multiownable.allOperationsCount",
      "offset": [
        27022,
        27123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AC"
    },
    "706": {
      "fn": "Multiownable.allOperationsCount",
      "offset": [
        27022,
        27123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x660"
    },
    "709": {
      "fn": "Multiownable.allOperationsCount",
      "jump": "i",
      "offset": [
        27022,
        27123
      ],
      "op": "JUMP",
      "path": "0"
    },
    "710": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "711": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x290"
    },
    "714": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "716": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "DUP1",
      "path": "0"
    },
    "717": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "718": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "SUB",
      "path": "0"
    },
    "719": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "721": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "DUP2",
      "path": "0"
    },
    "722": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "LT",
      "path": "0"
    },
    "723": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "724": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DC"
    },
    "727": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "728": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "730": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "DUP1",
      "path": "0"
    },
    "731": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "REVERT",
      "path": "0"
    },
    "732": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "733": {
      "op": "POP"
    },
    "734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "740": {
      "op": "SHL"
    },
    "741": {
      "op": "SUB"
    },
    "742": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "DUP2",
      "path": "0"
    },
    "743": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "744": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "DUP2",
      "path": "0"
    },
    "745": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "AND",
      "path": "0"
    },
    "746": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "747": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "749": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "DUP2",
      "path": "0"
    },
    "750": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "ADD",
      "path": "0"
    },
    "751": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "752": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "753": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "754": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "AND",
      "path": "0"
    },
    "755": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "756": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "758": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "ADD",
      "path": "0"
    },
    "759": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "760": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x666"
    },
    "763": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        19789,
        20106
      ],
      "op": "JUMP",
      "path": "0"
    },
    "764": {
      "offset": [
        25754,
        25788
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "765": {
      "fn": "ERC20.transferFrom",
      "offset": [
        25754,
        25788
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AC"
    },
    "768": {
      "fn": "ERC20.transferFrom",
      "offset": [
        25754,
        25788
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6ED"
    },
    "771": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        25754,
        25788
      ],
      "op": "JUMP",
      "path": "0"
    },
    "772": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26816,
        26924
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "773": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26816,
        26924
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x290"
    },
    "776": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26816,
        26924
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "778": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26816,
        26924
      ],
      "op": "DUP1",
      "path": "0"
    },
    "779": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26816,
        26924
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "780": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26816,
        26924
      ],
      "op": "SUB",
      "path": "0"
    },
    "781": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26816,
        26924
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "783": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26816,
        26924
      ],
      "op": "DUP2",
      "path": "0"
    },
    "784": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26816,
        26924
      ],
      "op": "LT",
      "path": "0"
    },
    "785": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26816,
        26924
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "786": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26816,
        26924
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31A"
    },
    "789": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26816,
        26924
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "790": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26816,
        26924
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "792": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26816,
        26924
      ],
      "op": "DUP1",
      "path": "0"
    },
    "793": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26816,
        26924
      ],
      "op": "REVERT",
      "path": "0"
    },
    "794": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26816,
        26924
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "795": {
      "op": "POP"
    },
    "796": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26816,
        26924
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "801": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "803": {
      "op": "SHL"
    },
    "804": {
      "op": "SUB"
    },
    "805": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26816,
        26924
      ],
      "op": "AND",
      "path": "0"
    },
    "806": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26816,
        26924
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F3"
    },
    "809": {
      "fn": "Multiownable.isOwner",
      "jump": "i",
      "offset": [
        26816,
        26924
      ],
      "op": "JUMP",
      "path": "0"
    },
    "810": {
      "fn": "ERC20.decimals",
      "offset": [
        18029,
        18110
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "811": {
      "fn": "ERC20.decimals",
      "offset": [
        18029,
        18110
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "814": {
      "fn": "ERC20.decimals",
      "offset": [
        18029,
        18110
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x714"
    },
    "817": {
      "fn": "ERC20.decimals",
      "jump": "i",
      "offset": [
        18029,
        18110
      ],
      "op": "JUMP",
      "path": "0"
    },
    "818": {
      "fn": "ERC20.decimals",
      "offset": [
        18029,
        18110
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "819": {
      "fn": "ERC20.decimals",
      "offset": [
        18029,
        18110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "821": {
      "fn": "ERC20.decimals",
      "offset": [
        18029,
        18110
      ],
      "op": "DUP1",
      "path": "0"
    },
    "822": {
      "fn": "ERC20.decimals",
      "offset": [
        18029,
        18110
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "823": {
      "fn": "ERC20.decimals",
      "offset": [
        18029,
        18110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "825": {
      "fn": "ERC20.decimals",
      "offset": [
        18029,
        18110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "826": {
      "fn": "ERC20.decimals",
      "offset": [
        18029,
        18110
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "827": {
      "fn": "ERC20.decimals",
      "offset": [
        18029,
        18110
      ],
      "op": "AND",
      "path": "0"
    },
    "828": {
      "fn": "ERC20.decimals",
      "offset": [
        18029,
        18110
      ],
      "op": "DUP3",
      "path": "0"
    },
    "829": {
      "fn": "ERC20.decimals",
      "offset": [
        18029,
        18110
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "830": {
      "fn": "ERC20.decimals",
      "offset": [
        18029,
        18110
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "831": {
      "fn": "ERC20.decimals",
      "offset": [
        18029,
        18110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "832": {
      "fn": "ERC20.decimals",
      "offset": [
        18029,
        18110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "833": {
      "fn": "ERC20.decimals",
      "offset": [
        18029,
        18110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "834": {
      "fn": "ERC20.decimals",
      "offset": [
        18029,
        18110
      ],
      "op": "SUB",
      "path": "0"
    },
    "835": {
      "fn": "ERC20.decimals",
      "offset": [
        18029,
        18110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "837": {
      "fn": "ERC20.decimals",
      "offset": [
        18029,
        18110
      ],
      "op": "ADD",
      "path": "0"
    },
    "838": {
      "fn": "ERC20.decimals",
      "offset": [
        18029,
        18110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "839": {
      "fn": "ERC20.decimals",
      "offset": [
        18029,
        18110
      ],
      "op": "RETURN",
      "path": "0"
    },
    "840": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20501,
        20716
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "841": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20501,
        20716
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x290"
    },
    "844": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20501,
        20716
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "846": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20501,
        20716
      ],
      "op": "DUP1",
      "path": "0"
    },
    "847": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20501,
        20716
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "848": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20501,
        20716
      ],
      "op": "SUB",
      "path": "0"
    },
    "849": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20501,
        20716
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "851": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20501,
        20716
      ],
      "op": "DUP2",
      "path": "0"
    },
    "852": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20501,
        20716
      ],
      "op": "LT",
      "path": "0"
    },
    "853": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20501,
        20716
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "854": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20501,
        20716
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35E"
    },
    "857": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20501,
        20716
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "858": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20501,
        20716
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "860": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20501,
        20716
      ],
      "op": "DUP1",
      "path": "0"
    },
    "861": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20501,
        20716
      ],
      "op": "REVERT",
      "path": "0"
    },
    "862": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20501,
        20716
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "863": {
      "op": "POP"
    },
    "864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "870": {
      "op": "SHL"
    },
    "871": {
      "op": "SUB"
    },
    "872": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20501,
        20716
      ],
      "op": "DUP2",
      "path": "0"
    },
    "873": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20501,
        20716
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "874": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20501,
        20716
      ],
      "op": "AND",
      "path": "0"
    },
    "875": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20501,
        20716
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "876": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20501,
        20716
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "878": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20501,
        20716
      ],
      "op": "ADD",
      "path": "0"
    },
    "879": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20501,
        20716
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "880": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20501,
        20716
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71D"
    },
    "883": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        20501,
        20716
      ],
      "op": "JUMP",
      "path": "0"
    },
    "884": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "885": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x290"
    },
    "888": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "890": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "DUP1",
      "path": "0"
    },
    "891": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "892": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "SUB",
      "path": "0"
    },
    "893": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "895": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "DUP2",
      "path": "0"
    },
    "896": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "LT",
      "path": "0"
    },
    "897": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "898": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38A"
    },
    "901": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "902": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "904": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "DUP1",
      "path": "0"
    },
    "905": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "REVERT",
      "path": "0"
    },
    "906": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "907": {
      "op": "POP"
    },
    "908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "914": {
      "op": "SHL"
    },
    "915": {
      "op": "SUB"
    },
    "916": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "DUP2",
      "path": "0"
    },
    "917": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "918": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "AND",
      "path": "0"
    },
    "919": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "920": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "922": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "ADD",
      "path": "0"
    },
    "923": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "924": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76B"
    },
    "927": {
      "fn": "StandardToken.mint",
      "jump": "i",
      "offset": [
        32132,
        32339
      ],
      "op": "JUMP",
      "path": "0"
    },
    "928": {
      "offset": [
        25823,
        25853
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "929": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AC"
    },
    "932": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "934": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "DUP1",
      "path": "0"
    },
    "935": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "936": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "SUB",
      "path": "0"
    },
    "937": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "939": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "DUP2",
      "path": "0"
    },
    "940": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "LT",
      "path": "0"
    },
    "941": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "942": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B6"
    },
    "945": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "946": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "948": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "DUP1",
      "path": "0"
    },
    "949": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "REVERT",
      "path": "0"
    },
    "950": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "951": {
      "op": "POP"
    },
    "952": {
      "offset": [
        25823,
        25853
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "953": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7FA"
    },
    "956": {
      "fn": "StandardToken.mint",
      "jump": "i",
      "offset": [
        25823,
        25853
      ],
      "op": "JUMP",
      "path": "0"
    },
    "957": {
      "offset": [
        26065,
        26120
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "958": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AC"
    },
    "961": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "963": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "964": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "965": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "SUB",
      "path": "0"
    },
    "966": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "968": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "DUP2",
      "path": "0"
    },
    "969": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "LT",
      "path": "0"
    },
    "970": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "971": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D3"
    },
    "974": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "975": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "977": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "978": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "REVERT",
      "path": "0"
    },
    "979": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "980": {
      "op": "POP"
    },
    "981": {
      "offset": [
        26065,
        26120
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "982": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x818"
    },
    "985": {
      "fn": "StandardToken.mint",
      "jump": "i",
      "offset": [
        26065,
        26120
      ],
      "op": "JUMP",
      "path": "0"
    },
    "986": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "987": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x408"
    },
    "990": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "992": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "993": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "994": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "SUB",
      "path": "0"
    },
    "995": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "997": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "998": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "LT",
      "path": "0"
    },
    "999": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1000": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F0"
    },
    "1003": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1004": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1006": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1007": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1008": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1009": {
      "op": "POP"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1016": {
      "op": "SHL"
    },
    "1017": {
      "op": "SUB"
    },
    "1018": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1019": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1020": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1021": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "AND",
      "path": "0"
    },
    "1022": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1023": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1025": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "ADD",
      "path": "0"
    },
    "1026": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1027": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "AND",
      "path": "0"
    },
    "1028": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82A"
    },
    "1031": {
      "fn": "Multiownable.transferOwnership",
      "jump": "i",
      "offset": [
        30699,
        30843
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1032": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1033": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "STOP",
      "path": "0"
    },
    "1034": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18326,
        18443
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1035": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18326,
        18443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AC"
    },
    "1038": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18326,
        18443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1040": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18326,
        18443
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1041": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18326,
        18443
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1042": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18326,
        18443
      ],
      "op": "SUB",
      "path": "0"
    },
    "1043": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18326,
        18443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1045": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18326,
        18443
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1046": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18326,
        18443
      ],
      "op": "LT",
      "path": "0"
    },
    "1047": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18326,
        18443
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1048": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18326,
        18443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x420"
    },
    "1051": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18326,
        18443
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1052": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18326,
        18443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1054": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18326,
        18443
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1055": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18326,
        18443
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1056": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18326,
        18443
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1057": {
      "op": "POP"
    },
    "1058": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18326,
        18443
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1065": {
      "op": "SHL"
    },
    "1066": {
      "op": "SUB"
    },
    "1067": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18326,
        18443
      ],
      "op": "AND",
      "path": "0"
    },
    "1068": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18326,
        18443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x892"
    },
    "1071": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        18326,
        18443
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1072": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        29996,
        30693
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1073": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        29996,
        30693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x408"
    },
    "1076": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        29996,
        30693
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1078": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        29996,
        30693
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1079": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        29996,
        30693
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1080": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        29996,
        30693
      ],
      "op": "SUB",
      "path": "0"
    },
    "1081": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        29996,
        30693
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1083": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        29996,
        30693
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1084": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        29996,
        30693
      ],
      "op": "LT",
      "path": "0"
    },
    "1085": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        29996,
        30693
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1086": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        29996,
        30693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x446"
    },
    "1089": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        29996,
        30693
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1090": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        29996,
        30693
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1092": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        29996,
        30693
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1093": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        29996,
        30693
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1094": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        29996,
        30693
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1095": {
      "op": "POP"
    },
    "1096": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        29996,
        30693
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1097": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        29996,
        30693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AD"
    },
    "1100": {
      "fn": "Multiownable.cancelPending",
      "jump": "i",
      "offset": [
        29996,
        30693
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1101": {
      "offset": [
        26126,
        26182
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1102": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AC"
    },
    "1105": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1107": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1108": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1109": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "SUB",
      "path": "0"
    },
    "1110": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1112": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1113": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "LT",
      "path": "0"
    },
    "1114": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1115": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x463"
    },
    "1118": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1119": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1121": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1122": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1123": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1124": {
      "op": "POP"
    },
    "1125": {
      "offset": [
        26126,
        26182
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1126": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA2B"
    },
    "1129": {
      "fn": "Multiownable.cancelPending",
      "jump": "i",
      "offset": [
        26126,
        26182
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1130": {
      "fn": "ERC20.symbol",
      "offset": [
        17321,
        17406
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1131": {
      "fn": "ERC20.symbol",
      "offset": [
        17321,
        17406
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EF"
    },
    "1134": {
      "fn": "ERC20.symbol",
      "offset": [
        17321,
        17406
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3D"
    },
    "1137": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        17321,
        17406
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1138": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1139": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x290"
    },
    "1142": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1144": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1145": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1146": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "SUB",
      "path": "0"
    },
    "1147": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1149": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1150": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "LT",
      "path": "0"
    },
    "1151": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1152": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x488"
    },
    "1155": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1156": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1158": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1159": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1160": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1161": {
      "op": "POP"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1168": {
      "op": "SHL"
    },
    "1169": {
      "op": "SUB"
    },
    "1170": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1171": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1172": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "AND",
      "path": "0"
    },
    "1173": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1174": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1176": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "ADD",
      "path": "0"
    },
    "1177": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1178": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9E"
    },
    "1181": {
      "fn": "StandardToken.burn",
      "jump": "i",
      "offset": [
        32443,
        32642
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1182": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21203,
        21469
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1183": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21203,
        21469
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x290"
    },
    "1186": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21203,
        21469
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1188": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21203,
        21469
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1189": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21203,
        21469
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1190": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21203,
        21469
      ],
      "op": "SUB",
      "path": "0"
    },
    "1191": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21203,
        21469
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1193": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21203,
        21469
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1194": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21203,
        21469
      ],
      "op": "LT",
      "path": "0"
    },
    "1195": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21203,
        21469
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1196": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21203,
        21469
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B4"
    },
    "1199": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21203,
        21469
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1200": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21203,
        21469
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1202": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21203,
        21469
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1203": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21203,
        21469
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1204": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21203,
        21469
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1205": {
      "op": "POP"
    },
    "1206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1212": {
      "op": "SHL"
    },
    "1213": {
      "op": "SUB"
    },
    "1214": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21203,
        21469
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1215": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21203,
        21469
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1216": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21203,
        21469
      ],
      "op": "AND",
      "path": "0"
    },
    "1217": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21203,
        21469
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1218": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21203,
        21469
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1220": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21203,
        21469
      ],
      "op": "ADD",
      "path": "0"
    },
    "1221": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21203,
        21469
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1222": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21203,
        21469
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB1C"
    },
    "1225": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        21203,
        21469
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1226": {
      "fn": "ERC20.transfer",
      "offset": [
        18646,
        18818
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1227": {
      "fn": "ERC20.transfer",
      "offset": [
        18646,
        18818
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x290"
    },
    "1230": {
      "fn": "ERC20.transfer",
      "offset": [
        18646,
        18818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1232": {
      "fn": "ERC20.transfer",
      "offset": [
        18646,
        18818
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1233": {
      "fn": "ERC20.transfer",
      "offset": [
        18646,
        18818
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1234": {
      "fn": "ERC20.transfer",
      "offset": [
        18646,
        18818
      ],
      "op": "SUB",
      "path": "0"
    },
    "1235": {
      "fn": "ERC20.transfer",
      "offset": [
        18646,
        18818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1237": {
      "fn": "ERC20.transfer",
      "offset": [
        18646,
        18818
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1238": {
      "fn": "ERC20.transfer",
      "offset": [
        18646,
        18818
      ],
      "op": "LT",
      "path": "0"
    },
    "1239": {
      "fn": "ERC20.transfer",
      "offset": [
        18646,
        18818
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1240": {
      "fn": "ERC20.transfer",
      "offset": [
        18646,
        18818
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E0"
    },
    "1243": {
      "fn": "ERC20.transfer",
      "offset": [
        18646,
        18818
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1244": {
      "fn": "ERC20.transfer",
      "offset": [
        18646,
        18818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1246": {
      "fn": "ERC20.transfer",
      "offset": [
        18646,
        18818
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1247": {
      "fn": "ERC20.transfer",
      "offset": [
        18646,
        18818
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1248": {
      "fn": "ERC20.transfer",
      "offset": [
        18646,
        18818
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1249": {
      "op": "POP"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1256": {
      "op": "SHL"
    },
    "1257": {
      "op": "SUB"
    },
    "1258": {
      "fn": "ERC20.transfer",
      "offset": [
        18646,
        18818
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1259": {
      "fn": "ERC20.transfer",
      "offset": [
        18646,
        18818
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1260": {
      "fn": "ERC20.transfer",
      "offset": [
        18646,
        18818
      ],
      "op": "AND",
      "path": "0"
    },
    "1261": {
      "fn": "ERC20.transfer",
      "offset": [
        18646,
        18818
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1262": {
      "fn": "ERC20.transfer",
      "offset": [
        18646,
        18818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1264": {
      "fn": "ERC20.transfer",
      "offset": [
        18646,
        18818
      ],
      "op": "ADD",
      "path": "0"
    },
    "1265": {
      "fn": "ERC20.transfer",
      "offset": [
        18646,
        18818
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1266": {
      "fn": "ERC20.transfer",
      "offset": [
        18646,
        18818
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB84"
    },
    "1269": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        18646,
        18818
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1270": {
      "offset": [
        31470,
        31501
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1271": {
      "fn": "ERC20.transfer",
      "offset": [
        31470,
        31501
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AC"
    },
    "1274": {
      "fn": "ERC20.transfer",
      "offset": [
        31470,
        31501
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB98"
    },
    "1277": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        31470,
        31501
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1278": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        26930,
        27016
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1279": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        26930,
        27016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AC"
    },
    "1282": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        26930,
        27016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB9E"
    },
    "1285": {
      "fn": "Multiownable.ownersCount",
      "jump": "i",
      "offset": [
        26930,
        27016
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1286": {
      "offset": [
        25937,
        25982
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1287": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AC"
    },
    "1290": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1292": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1293": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1294": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "SUB",
      "path": "0"
    },
    "1295": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1297": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1298": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "LT",
      "path": "0"
    },
    "1299": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1300": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51C"
    },
    "1303": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1304": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1306": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1307": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1308": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1309": {
      "op": "POP"
    },
    "1310": {
      "offset": [
        25937,
        25982
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1317": {
      "op": "SHL"
    },
    "1318": {
      "op": "SUB"
    },
    "1319": {
      "offset": [
        25937,
        25982
      ],
      "op": "AND",
      "path": "0"
    },
    "1320": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA4"
    },
    "1323": {
      "fn": "Multiownable.ownersCount",
      "jump": "i",
      "offset": [
        25937,
        25982
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1324": {
      "fn": "StandardToken.totalBurned",
      "offset": [
        31937,
        32026
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1325": {
      "fn": "StandardToken.totalBurned",
      "offset": [
        31937,
        32026
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AC"
    },
    "1328": {
      "fn": "StandardToken.totalBurned",
      "offset": [
        31937,
        32026
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBB6"
    },
    "1331": {
      "fn": "StandardToken.totalBurned",
      "jump": "i",
      "offset": [
        31937,
        32026
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1332": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1333": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AC"
    },
    "1336": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1338": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1339": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1340": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "SUB",
      "path": "0"
    },
    "1341": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1343": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1344": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "LT",
      "path": "0"
    },
    "1345": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1346": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x54A"
    },
    "1349": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1350": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1352": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1353": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1354": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1355": {
      "op": "POP"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1362": {
      "op": "SHL"
    },
    "1363": {
      "op": "SUB"
    },
    "1364": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1365": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1366": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1367": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "AND",
      "path": "0"
    },
    "1368": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1369": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1371": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "ADD",
      "path": "0"
    },
    "1372": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1373": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "AND",
      "path": "0"
    },
    "1374": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBBC"
    },
    "1377": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        18876,
        19025
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1378": {
      "offset": [
        26005,
        26058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1379": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AC"
    },
    "1382": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1384": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1385": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1386": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "SUB",
      "path": "0"
    },
    "1387": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1389": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1390": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "LT",
      "path": "0"
    },
    "1391": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1392": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x578"
    },
    "1395": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1396": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1398": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1399": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1400": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1401": {
      "op": "POP"
    },
    "1402": {
      "offset": [
        26005,
        26058
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1403": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBE7"
    },
    "1406": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        26005,
        26058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1407": {
      "offset": [
        25794,
        25817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1408": {
      "fn": "ERC20.allowance",
      "offset": [
        25794,
        25817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "1410": {
      "fn": "ERC20.allowance",
      "offset": [
        25794,
        25817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1411": {
      "fn": "ERC20.allowance",
      "offset": [
        25794,
        25817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1412": {
      "fn": "ERC20.allowance",
      "offset": [
        25794,
        25817
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1413": {
      "fn": "ERC20.allowance",
      "offset": [
        25794,
        25817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1414": {
      "fn": "ERC20.allowance",
      "offset": [
        25794,
        25817
      ],
      "op": "LT",
      "path": "0"
    },
    "1415": {
      "fn": "ERC20.allowance",
      "offset": [
        25794,
        25817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58C"
    },
    "1418": {
      "fn": "ERC20.allowance",
      "offset": [
        25794,
        25817
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1419": {
      "fn": "ERC20.allowance",
      "offset": [
        25794,
        25817
      ],
      "op": "INVALID",
      "path": "0"
    },
    "1420": {
      "fn": "ERC20.allowance",
      "offset": [
        25794,
        25817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1421": {
      "fn": "ERC20.allowance",
      "offset": [
        25794,
        25817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1423": {
      "fn": "ERC20.allowance",
      "offset": [
        25794,
        25817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1424": {
      "fn": "ERC20.allowance",
      "offset": [
        25794,
        25817
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1425": {
      "fn": "ERC20.allowance",
      "offset": [
        25794,
        25817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1426": {
      "fn": "ERC20.allowance",
      "offset": [
        25794,
        25817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1428": {
      "fn": "ERC20.allowance",
      "offset": [
        25794,
        25817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1429": {
      "fn": "ERC20.allowance",
      "offset": [
        25794,
        25817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1430": {
      "fn": "ERC20.allowance",
      "offset": [
        25794,
        25817
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1431": {
      "fn": "ERC20.allowance",
      "offset": [
        25794,
        25817
      ],
      "op": "ADD",
      "path": "0"
    },
    "1432": {
      "fn": "ERC20.allowance",
      "offset": [
        25794,
        25817
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1439": {
      "op": "SHL"
    },
    "1440": {
      "op": "SUB"
    },
    "1441": {
      "offset": [
        25794,
        25817
      ],
      "op": "AND",
      "path": "0"
    },
    "1442": {
      "fn": "ERC20.allowance",
      "offset": [
        25794,
        25817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1443": {
      "op": "POP"
    },
    "1444": {
      "offset": [
        25794,
        25817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1445": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        25794,
        25817
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1446": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1447": {
      "fn": "ERC20.name",
      "offset": [
        17196,
        17201
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x3"
    },
    "1449": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1450": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1451": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1453": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1454": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1455": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1457": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1459": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1463": {
      "op": "NOT"
    },
    "1464": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1467": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1469": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1470": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "AND",
      "path": "0"
    },
    "1471": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1472": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "MUL",
      "path": "0"
    },
    "1473": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "ADD",
      "path": "0"
    },
    "1474": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1475": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1476": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "AND",
      "path": "0"
    },
    "1477": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1478": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1479": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1480": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DIV",
      "path": "0"
    },
    "1481": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1482": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1483": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "ADD",
      "path": "0"
    },
    "1484": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1485": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1486": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DIV",
      "path": "0"
    },
    "1487": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1488": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "MUL",
      "path": "0"
    },
    "1489": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1490": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "ADD",
      "path": "0"
    },
    "1491": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1492": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "ADD",
      "path": "0"
    },
    "1493": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1494": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1495": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1496": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1497": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1498": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1499": {
      "fn": "ERC20.name",
      "offset": [
        17164,
        17177
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1501": {
      "fn": "ERC20.name",
      "offset": [
        17164,
        17177
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1502": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1503": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1504": {
      "fn": "ERC20.name",
      "offset": [
        17196,
        17201
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1505": {
      "fn": "ERC20.name",
      "offset": [
        17196,
        17201
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1506": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1507": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "ADD",
      "path": "0"
    },
    "1508": {
      "fn": "ERC20.name",
      "offset": [
        17196,
        17201
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1509": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1510": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1511": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1512": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x632"
    },
    "1515": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1516": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1517": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1519": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "LT",
      "path": "0"
    },
    "1520": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x607"
    },
    "1523": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1524": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1527": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1528": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1529": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1530": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DIV",
      "path": "0"
    },
    "1531": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "MUL",
      "path": "0"
    },
    "1532": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1533": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1534": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1535": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1537": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "ADD",
      "path": "0"
    },
    "1538": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1539": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x632"
    },
    "1542": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1543": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1544": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1545": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "ADD",
      "path": "0"
    },
    "1546": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1547": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1548": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1550": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1551": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1553": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1555": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1556": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1557": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1558": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1559": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1560": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1561": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1562": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1563": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1565": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "ADD",
      "path": "0"
    },
    "1566": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1567": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1569": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "ADD",
      "path": "0"
    },
    "1570": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1571": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1572": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "GT",
      "path": "0"
    },
    "1573": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x615"
    },
    "1576": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1577": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1578": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1579": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "SUB",
      "path": "0"
    },
    "1580": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1582": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "AND",
      "path": "0"
    },
    "1583": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1584": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "ADD",
      "path": "0"
    },
    "1585": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1586": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1587": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "POP",
      "path": "0"
    },
    "1588": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "POP",
      "path": "0"
    },
    "1589": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "POP",
      "path": "0"
    },
    "1590": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "POP",
      "path": "0"
    },
    "1591": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "POP",
      "path": "0"
    },
    "1592": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1593": {
      "fn": "ERC20.name",
      "offset": [
        17189,
        17201
      ],
      "op": "POP",
      "path": "0"
    },
    "1594": {
      "fn": "ERC20.name",
      "offset": [
        17127,
        17208
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1595": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        17127,
        17208
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1596": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1597": {
      "fn": "ERC20.approve",
      "offset": [
        19246,
        19250
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1599": {
      "fn": "ERC20.approve",
      "offset": [
        19262,
        19301
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 1,
      "value": "0x650"
    },
    "1602": {
      "fn": "ERC20.approve",
      "offset": [
        19271,
        19283
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x649"
    },
    "1605": {
      "fn": "ERC20.approve",
      "offset": [
        19271,
        19281
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC5A"
    },
    "1608": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        19271,
        19283
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1609": {
      "fn": "ERC20.approve",
      "offset": [
        19271,
        19283
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1610": {
      "fn": "ERC20.approve",
      "offset": [
        19285,
        19292
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1611": {
      "fn": "ERC20.approve",
      "offset": [
        19294,
        19300
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1612": {
      "fn": "ERC20.approve",
      "offset": [
        19262,
        19270
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC5E"
    },
    "1615": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        19262,
        19301
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1616": {
      "fn": "ERC20.approve",
      "offset": [
        19262,
        19301
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1617": {
      "op": "POP"
    },
    "1618": {
      "fn": "ERC20.approve",
      "offset": [
        19318,
        19322
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x1"
    },
    "1620": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1621": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1622": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1623": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "POP",
      "path": "0"
    },
    "1624": {
      "fn": "ERC20.approve",
      "offset": [
        19163,
        19329
      ],
      "op": "POP",
      "path": "0"
    },
    "1625": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        19163,
        19329
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1626": {
      "fn": "ERC20.totalSupply",
      "offset": [
        18170,
        18268
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1627": {
      "fn": "ERC20.totalSupply",
      "offset": [
        18249,
        18261
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x2"
    },
    "1629": {
      "fn": "ERC20.totalSupply",
      "offset": [
        18249,
        18261
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1630": {
      "fn": "ERC20.totalSupply",
      "offset": [
        18170,
        18268
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1631": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        18170,
        18268
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1632": {
      "fn": "Multiownable.allOperationsCount",
      "offset": [
        27022,
        27123
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1633": {
      "fn": "Multiownable.allOperationsCount",
      "offset": [
        27096,
        27109
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x8"
    },
    "1635": {
      "fn": "Multiownable.allOperationsCount",
      "offset": [
        27096,
        27116
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1636": {
      "fn": "Multiownable.allOperationsCount",
      "offset": [
        27022,
        27123
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1637": {
      "fn": "Multiownable.allOperationsCount",
      "jump": "o",
      "offset": [
        27022,
        27123
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1638": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1639": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19895,
        19899
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1641": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19911,
        19947
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x673"
    },
    "1644": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19921,
        19927
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1645": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19929,
        19938
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1646": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19940,
        19946
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1647": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19911,
        19920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD4A"
    },
    "1650": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        19911,
        19947
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1651": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19911,
        19947
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1652": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19957,
        20078
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 6,
      "value": "0x6E3"
    },
    "1655": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19966,
        19972
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1656": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19974,
        19986
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x67F"
    },
    "1659": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19974,
        19984
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC5A"
    },
    "1662": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        19974,
        19986
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1663": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19974,
        19986
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1664": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20077
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DE"
    },
    "1667": {
      "fn": "ERC20.transferFrom",
      "offset": [
        20026,
        20032
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1668": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1670": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20077
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1671": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20077
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1672": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1674": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20077
      ],
      "op": "ADD",
      "path": "0"
    },
    "1675": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1677": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20077
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1678": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20077
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1679": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x28"
    },
    "1681": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20077
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1682": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20077
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1683": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1685": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20077
      ],
      "op": "ADD",
      "path": "0"
    },
    "1686": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20077
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1735"
    },
    "1689": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x28"
    },
    "1691": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20077
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1692": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20077
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1699": {
      "op": "SHL"
    },
    "1700": {
      "op": "SUB"
    },
    "1701": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20007
      ],
      "op": "DUP11",
      "path": "0"
    },
    "1702": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20007
      ],
      "op": "AND",
      "path": "0"
    },
    "1703": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1705": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20007
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1706": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20007
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1707": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20007
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1708": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        19999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1710": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1712": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20007
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1713": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1715": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20007
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1716": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20007
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1717": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20007
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1718": {
      "fn": "ERC20.transferFrom",
      "offset": [
        20008,
        20020
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6BD"
    },
    "1721": {
      "fn": "ERC20.transferFrom",
      "offset": [
        20008,
        20018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC5A"
    },
    "1724": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        20008,
        20020
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1725": {
      "fn": "ERC20.transferFrom",
      "offset": [
        20008,
        20020
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1732": {
      "op": "SHL"
    },
    "1733": {
      "op": "SUB"
    },
    "1734": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20021
      ],
      "op": "AND",
      "path": "0"
    },
    "1735": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20021
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1736": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20021
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1737": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1739": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20021
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1740": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20021
      ],
      "op": "ADD",
      "path": "0"
    },
    "1741": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20021
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1742": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20021
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1743": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20021
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1744": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20021
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1745": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1747": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20021
      ],
      "op": "ADD",
      "path": "0"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1750": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20021
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1751": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20021
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1752": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20021
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1753": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20077
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1754": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA5"
    },
    "1757": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        19988,
        20077
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1758": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19988,
        20077
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1759": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19957,
        19965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC5E"
    },
    "1762": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        19957,
        20078
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1763": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19957,
        20078
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1764": {
      "op": "POP"
    },
    "1765": {
      "fn": "ERC20.transferFrom",
      "offset": [
        20095,
        20099
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x1"
    },
    "1767": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1768": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1769": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "POP",
      "path": "0"
    },
    "1770": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "POP",
      "path": "0"
    },
    "1771": {
      "fn": "ERC20.transferFrom",
      "offset": [
        19789,
        20106
      ],
      "op": "POP",
      "path": "0"
    },
    "1772": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        19789,
        20106
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1773": {
      "offset": [
        25754,
        25788
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1774": {
      "fn": "ERC20.transferFrom",
      "offset": [
        25754,
        25788
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1776": {
      "fn": "ERC20.transferFrom",
      "offset": [
        25754,
        25788
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1777": {
      "fn": "ERC20.transferFrom",
      "offset": [
        25754,
        25788
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1778": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        25754,
        25788
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1779": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26816,
        26924
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1786": {
      "op": "SHL"
    },
    "1787": {
      "op": "SUB"
    },
    "1788": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26892,
        26913
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 8
    },
    "1789": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26892,
        26913
      ],
      "op": "AND",
      "path": "0"
    },
    "1790": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26869,
        26873
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1792": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26892,
        26913
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1793": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26892,
        26913
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1794": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26892,
        26913
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1795": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26892,
        26905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "1797": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26892,
        26913
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1799": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26892,
        26913
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1800": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26892,
        26913
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1802": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26892,
        26913
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1803": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26892,
        26913
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1804": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26892,
        26913
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1805": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26892,
        26917
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1806": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26892,
        26917
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1807": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26816,
        26924
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1808": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26816,
        26924
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1809": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26816,
        26924
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1810": {
      "fn": "Multiownable.isOwner",
      "offset": [
        26816,
        26924
      ],
      "op": "POP",
      "path": "0"
    },
    "1811": {
      "fn": "Multiownable.isOwner",
      "jump": "o",
      "offset": [
        26816,
        26924
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1812": {
      "fn": "ERC20.decimals",
      "offset": [
        18029,
        18110
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1813": {
      "fn": "ERC20.decimals",
      "offset": [
        18094,
        18103
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x5"
    },
    "1815": {
      "fn": "ERC20.decimals",
      "offset": [
        18094,
        18103
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1816": {
      "fn": "ERC20.decimals",
      "offset": [
        18094,
        18103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1818": {
      "fn": "ERC20.decimals",
      "offset": [
        18094,
        18103
      ],
      "op": "AND",
      "path": "0"
    },
    "1819": {
      "fn": "ERC20.decimals",
      "offset": [
        18029,
        18110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1820": {
      "fn": "ERC20.decimals",
      "jump": "o",
      "offset": [
        18029,
        18110
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1821": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20501,
        20716
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1822": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20589,
        20593
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1824": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20605,
        20688
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 10,
      "value": "0x650"
    },
    "1827": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20614,
        20626
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x72A"
    },
    "1830": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20614,
        20624
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC5A"
    },
    "1833": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        20614,
        20626
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1834": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20614,
        20626
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1835": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20628,
        20635
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1836": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20687
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DE"
    },
    "1839": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20676,
        20686
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1840": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1842": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1844": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20649,
        20661
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x73B"
    },
    "1847": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20649,
        20659
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC5A"
    },
    "1850": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        20649,
        20661
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1851": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20649,
        20661
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1858": {
      "op": "SHL"
    },
    "1859": {
      "op": "SUB"
    },
    "1860": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20662
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1861": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20662
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1862": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20662
      ],
      "op": "AND",
      "path": "0"
    },
    "1863": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20662
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1864": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20662
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1865": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1867": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20662
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1868": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20662
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1869": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20662
      ],
      "op": "ADD",
      "path": "0"
    },
    "1870": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20662
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1871": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20662
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1872": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20662
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1873": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20662
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1874": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1876": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20662
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1877": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20662
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1878": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20662
      ],
      "op": "ADD",
      "path": "0"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1881": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20662
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1882": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20662
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1883": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20662
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1884": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20671
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1885": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20671
      ],
      "op": "DUP13",
      "path": "0"
    },
    "1886": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20671
      ],
      "op": "AND",
      "path": "0"
    },
    "1887": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20671
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1888": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20671
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1889": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20671
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1890": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20671
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1891": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20671
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1892": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20671
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1893": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20671
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1894": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20671
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1895": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        20637,
        20675
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF9"
    },
    "1898": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        20637,
        20687
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1899": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1900": {
      "fn": "StandardToken.mint",
      "offset": [
        32217,
        32221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1902": {
      "offset": [
        27572,
        27611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x778"
    },
    "1905": {
      "offset": [
        27591,
        27610
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1907": {
      "fn": "StandardToken.mint",
      "offset": [
        27591,
        27610
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1908": {
      "offset": [
        27572,
        27590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF3C"
    },
    "1911": {
      "jump": "i",
      "offset": [
        27572,
        27611
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1912": {
      "fn": "StandardToken.mint",
      "offset": [
        27572,
        27611
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1913": {
      "offset": [
        27568,
        27965
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1914": {
      "fn": "StandardToken.mint",
      "offset": [
        27568,
        27965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x654"
    },
    "1917": {
      "offset": [
        27568,
        27965
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1918": {
      "offset": [
        27642,
        27658
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "1920": {
      "fn": "StandardToken.mint",
      "offset": [
        27642,
        27658
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1927": {
      "op": "SHL"
    },
    "1928": {
      "op": "SUB"
    },
    "1929": {
      "offset": [
        27642,
        27658
      ],
      "op": "AND",
      "path": "0"
    },
    "1930": {
      "offset": [
        27642,
        27672
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1931": {
      "offset": [
        27687,
        27816
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1932": {
      "fn": "StandardToken.mint",
      "offset": [
        27687,
        27816
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1933": {
      "fn": "StandardToken.mint",
      "offset": [
        27687,
        27816
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A9"
    },
    "1936": {
      "fn": "StandardToken.mint",
      "offset": [
        27687,
        27816
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1937": {
      "offset": [
        27717,
        27733
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "1939": {
      "offset": [
        27717,
        27746
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1940": {
      "fn": "StandardToken.mint",
      "offset": [
        27717,
        27746
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1947": {
      "op": "SHL"
    },
    "1948": {
      "op": "SUB"
    },
    "1949": {
      "op": "NOT"
    },
    "1950": {
      "offset": [
        27717,
        27746
      ],
      "op": "AND",
      "path": "0"
    },
    "1951": {
      "offset": [
        27736,
        27746
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1952": {
      "offset": [
        27717,
        27746
      ],
      "op": "OR",
      "path": "0"
    },
    "1953": {
      "fn": "StandardToken.mint",
      "offset": [
        27717,
        27746
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1954": {
      "fn": "StandardToken.mint",
      "offset": [
        27717,
        27746
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1955": {
      "offset": [
        27782,
        27801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1957": {
      "fn": "StandardToken.mint",
      "offset": [
        27782,
        27801
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1958": {
      "offset": [
        27764,
        27779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "1960": {
      "offset": [
        27764,
        27801
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1961": {
      "offset": [
        27687,
        27816
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1962": {
      "fn": "StandardToken.mint",
      "offset": [
        32271,
        32280
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x10"
    },
    "1964": {
      "fn": "StandardToken.mint",
      "offset": [
        32271,
        32280
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1965": {
      "fn": "StandardToken.mint",
      "offset": [
        32241,
        32267
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7BE"
    },
    "1968": {
      "fn": "StandardToken.mint",
      "offset": [
        32259,
        32266
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1969": {
      "fn": "StandardToken.mint",
      "offset": [
        32241,
        32254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B8"
    },
    "1972": {
      "fn": "StandardToken.mint",
      "offset": [
        32241,
        32252
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x65A"
    },
    "1975": {
      "fn": "StandardToken.mint",
      "jump": "i",
      "offset": [
        32241,
        32254
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1976": {
      "fn": "StandardToken.mint",
      "offset": [
        32241,
        32254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1977": {
      "fn": "StandardToken.mint",
      "offset": [
        32241,
        32258
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1978": {
      "fn": "StandardToken.mint",
      "offset": [
        32241,
        32258
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF9"
    },
    "1981": {
      "fn": "StandardToken.mint",
      "jump": "i",
      "offset": [
        32241,
        32267
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1982": {
      "fn": "StandardToken.mint",
      "offset": [
        32241,
        32267
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1983": {
      "fn": "StandardToken.mint",
      "offset": [
        32241,
        32280
      ],
      "op": "GT",
      "path": "0"
    },
    "1984": {
      "branch": 83,
      "fn": "StandardToken.mint",
      "offset": [
        32241,
        32280
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1985": {
      "fn": "StandardToken.mint",
      "offset": [
        32233,
        32281
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C9"
    },
    "1988": {
      "branch": 83,
      "fn": "StandardToken.mint",
      "offset": [
        32233,
        32281
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1989": {
      "fn": "StandardToken.mint",
      "offset": [
        32233,
        32281
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1991": {
      "fn": "StandardToken.mint",
      "offset": [
        32233,
        32281
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1992": {
      "fn": "StandardToken.mint",
      "offset": [
        32233,
        32281
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1993": {
      "fn": "StandardToken.mint",
      "offset": [
        32233,
        32281
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1994": {
      "fn": "StandardToken.mint",
      "offset": [
        32291,
        32310
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 12,
      "value": "0x7D3"
    },
    "1997": {
      "fn": "StandardToken.mint",
      "offset": [
        32297,
        32300
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1998": {
      "fn": "StandardToken.mint",
      "offset": [
        32302,
        32309
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1999": {
      "fn": "StandardToken.mint",
      "offset": [
        32291,
        32296
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120E"
    },
    "2002": {
      "fn": "StandardToken.mint",
      "jump": "i",
      "offset": [
        32291,
        32310
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2003": {
      "fn": "StandardToken.mint",
      "offset": [
        32291,
        32310
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2004": {
      "fn": "StandardToken.mint",
      "offset": [
        32328,
        32332
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x1"
    },
    "2006": {
      "fn": "StandardToken.mint",
      "offset": [
        32321,
        32332
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2007": {
      "fn": "StandardToken.mint",
      "offset": [
        32321,
        32332
      ],
      "op": "POP",
      "path": "0"
    },
    "2008": {
      "offset": [
        27848,
        27854
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2009": {
      "offset": [
        27844,
        27955
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2010": {
      "fn": "StandardToken.mint",
      "offset": [
        27844,
        27955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F3"
    },
    "2013": {
      "offset": [
        27844,
        27955
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2014": {
      "offset": [
        27874,
        27890
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "2016": {
      "offset": [
        27874,
        27903
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2017": {
      "fn": "StandardToken.mint",
      "offset": [
        27874,
        27903
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2024": {
      "op": "SHL"
    },
    "2025": {
      "op": "SUB"
    },
    "2026": {
      "op": "NOT"
    },
    "2027": {
      "offset": [
        27874,
        27903
      ],
      "op": "AND",
      "path": "0"
    },
    "2028": {
      "fn": "StandardToken.mint",
      "offset": [
        27874,
        27903
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2029": {
      "fn": "StandardToken.mint",
      "offset": [
        27874,
        27903
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2030": {
      "offset": [
        27901,
        27902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2032": {
      "offset": [
        27921,
        27936
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2034": {
      "offset": [
        27921,
        27940
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2035": {
      "offset": [
        27844,
        27955
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2036": {
      "offset": [
        27568,
        27965
      ],
      "op": "POP",
      "path": "0"
    },
    "2037": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2038": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2039": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "POP",
      "path": "0"
    },
    "2040": {
      "fn": "StandardToken.mint",
      "offset": [
        32132,
        32339
      ],
      "op": "POP",
      "path": "0"
    },
    "2041": {
      "fn": "StandardToken.mint",
      "jump": "o",
      "offset": [
        32132,
        32339
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2042": {
      "offset": [
        25823,
        25853
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2043": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "2045": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2046": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2047": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2048": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2049": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "LT",
      "path": "0"
    },
    "2050": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x807"
    },
    "2053": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2054": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "INVALID",
      "path": "0"
    },
    "2055": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2056": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2058": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2059": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2060": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2061": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2063": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2064": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2065": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2066": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "ADD",
      "path": "0"
    },
    "2067": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2068": {
      "fn": "StandardToken.mint",
      "offset": [
        25823,
        25853
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2069": {
      "op": "POP"
    },
    "2070": {
      "offset": [
        25823,
        25853
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2071": {
      "fn": "StandardToken.mint",
      "jump": "o",
      "offset": [
        25823,
        25853
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2072": {
      "offset": [
        26065,
        26120
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2073": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "2075": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2077": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2078": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2080": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2081": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2082": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2083": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2085": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2086": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2087": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2088": {
      "fn": "StandardToken.mint",
      "offset": [
        26065,
        26120
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2089": {
      "fn": "StandardToken.mint",
      "jump": "o",
      "offset": [
        26065,
        26120
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2090": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2091": {
      "offset": [
        27572,
        27611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x835"
    },
    "2094": {
      "offset": [
        27591,
        27610
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2096": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        27591,
        27610
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2097": {
      "offset": [
        27572,
        27590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF3C"
    },
    "2100": {
      "jump": "i",
      "offset": [
        27572,
        27611
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2101": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        27572,
        27611
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2102": {
      "offset": [
        27568,
        27965
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2103": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        27568,
        27965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88E"
    },
    "2106": {
      "offset": [
        27568,
        27965
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2107": {
      "offset": [
        27642,
        27658
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "2109": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        27642,
        27658
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2116": {
      "op": "SHL"
    },
    "2117": {
      "op": "SUB"
    },
    "2118": {
      "offset": [
        27642,
        27658
      ],
      "op": "AND",
      "path": "0"
    },
    "2119": {
      "offset": [
        27642,
        27672
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2120": {
      "offset": [
        27687,
        27816
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2121": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        27687,
        27816
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2122": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        27687,
        27816
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x866"
    },
    "2125": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        27687,
        27816
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2126": {
      "offset": [
        27717,
        27733
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "2128": {
      "offset": [
        27717,
        27746
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2129": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        27717,
        27746
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2136": {
      "op": "SHL"
    },
    "2137": {
      "op": "SUB"
    },
    "2138": {
      "op": "NOT"
    },
    "2139": {
      "offset": [
        27717,
        27746
      ],
      "op": "AND",
      "path": "0"
    },
    "2140": {
      "offset": [
        27736,
        27746
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2141": {
      "offset": [
        27717,
        27746
      ],
      "op": "OR",
      "path": "0"
    },
    "2142": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        27717,
        27746
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2143": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        27717,
        27746
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2144": {
      "offset": [
        27782,
        27801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2146": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        27782,
        27801
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2147": {
      "offset": [
        27764,
        27779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2149": {
      "offset": [
        27764,
        27801
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2150": {
      "offset": [
        27687,
        27816
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2151": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30796,
        30836
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 14,
      "value": "0x870"
    },
    "2154": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30815,
        30824
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2155": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30826,
        30835
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2156": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30796,
        30814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12FE"
    },
    "2159": {
      "fn": "Multiownable.transferOwnership",
      "jump": "i",
      "offset": [
        30796,
        30836
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2160": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30796,
        30836
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2161": {
      "offset": [
        27848,
        27854
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2162": {
      "offset": [
        27844,
        27955
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2163": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        27844,
        27955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88C"
    },
    "2166": {
      "offset": [
        27844,
        27955
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2167": {
      "offset": [
        27874,
        27890
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "2169": {
      "offset": [
        27874,
        27903
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2170": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        27874,
        27903
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2177": {
      "op": "SHL"
    },
    "2178": {
      "op": "SUB"
    },
    "2179": {
      "op": "NOT"
    },
    "2180": {
      "offset": [
        27874,
        27903
      ],
      "op": "AND",
      "path": "0"
    },
    "2181": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        27874,
        27903
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2182": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        27874,
        27903
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2183": {
      "offset": [
        27901,
        27902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2185": {
      "offset": [
        27921,
        27936
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2187": {
      "offset": [
        27921,
        27940
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2188": {
      "offset": [
        27844,
        27955
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2189": {
      "offset": [
        27568,
        27965
      ],
      "op": "POP",
      "path": "0"
    },
    "2190": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        27568,
        27965
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2191": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "POP",
      "path": "0"
    },
    "2192": {
      "fn": "Multiownable.transferOwnership",
      "offset": [
        30699,
        30843
      ],
      "op": "POP",
      "path": "0"
    },
    "2193": {
      "fn": "Multiownable.transferOwnership",
      "jump": "o",
      "offset": [
        30699,
        30843
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2194": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18326,
        18443
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2201": {
      "op": "SHL"
    },
    "2202": {
      "op": "SUB"
    },
    "2203": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18418,
        18436
      ],
      "op": "AND",
      "path": "0",
      "statement": 15
    },
    "2204": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18392,
        18399
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2206": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18418,
        18436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2207": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18418,
        18436
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2208": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18418,
        18436
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2209": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18418,
        18436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2211": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18418,
        18436
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2212": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18418,
        18436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2213": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18418,
        18436
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2214": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18418,
        18436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2216": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18418,
        18436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2217": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18418,
        18436
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2218": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18418,
        18436
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2219": {
      "fn": "ERC20.balanceOf",
      "offset": [
        18418,
        18436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2220": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        18326,
        18443
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2221": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        29996,
        30693
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2222": {
      "offset": [
        27165,
        27186
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8B7"
    },
    "2225": {
      "offset": [
        27184,
        27185
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2227": {
      "offset": [
        27165,
        27183
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF3C"
    },
    "2230": {
      "jump": "i",
      "offset": [
        27165,
        27186
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2231": {
      "branch": 84,
      "fn": "Multiownable.cancelPending",
      "offset": [
        27165,
        27186
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2232": {
      "offset": [
        27161,
        27522
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2233": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        27161,
        27522
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA28"
    },
    "2236": {
      "branch": 84,
      "offset": [
        27161,
        27522
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2237": {
      "offset": [
        27217,
        27233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "2239": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        27217,
        27233
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2246": {
      "op": "SHL"
    },
    "2247": {
      "op": "SUB"
    },
    "2248": {
      "offset": [
        27217,
        27233
      ],
      "op": "AND",
      "path": "0"
    },
    "2249": {
      "offset": [
        27217,
        27247
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2250": {
      "offset": [
        27262,
        27373
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2251": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        27262,
        27373
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2252": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        27262,
        27373
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8E7"
    },
    "2255": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        27262,
        27373
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2256": {
      "offset": [
        27292,
        27308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "2258": {
      "offset": [
        27292,
        27321
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2259": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        27292,
        27321
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2266": {
      "op": "SHL"
    },
    "2267": {
      "op": "SUB"
    },
    "2268": {
      "op": "NOT"
    },
    "2269": {
      "offset": [
        27292,
        27321
      ],
      "op": "AND",
      "path": "0"
    },
    "2270": {
      "offset": [
        27311,
        27321
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2271": {
      "offset": [
        27292,
        27321
      ],
      "op": "OR",
      "path": "0"
    },
    "2272": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        27292,
        27321
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2273": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        27292,
        27321
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2274": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        27292,
        27321
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2276": {
      "offset": [
        27339,
        27354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2278": {
      "offset": [
        27339,
        27358
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2279": {
      "offset": [
        27262,
        27373
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2280": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30100,
        30110
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2281": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30068,
        30083
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2283": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30086,
        30111
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2284": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30086,
        30111
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2285": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30086,
        30111
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2286": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30086,
        30099
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "2288": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30086,
        30111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2290": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30086,
        30111
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2291": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30086,
        30111
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2292": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30086,
        30111
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2293": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30086,
        30111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2295": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30086,
        30111
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2296": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30086,
        30111
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2297": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30086,
        30111
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2298": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30086,
        30111
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2299": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30134,
        30165
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 16
    },
    "2300": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30134,
        30165
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2301": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30134,
        30165
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2302": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30134,
        30154
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "2304": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30134,
        30165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2305": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30134,
        30165
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2306": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30134,
        30165
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2307": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30134,
        30165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2308": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30134,
        30165
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2309": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30134,
        30165
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2310": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30134,
        30165
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2313": {
      "op": "NOT"
    },
    "2314": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30086,
        30115
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2315": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30086,
        30115
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2316": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30086,
        30115
      ],
      "op": "ADD",
      "path": "0"
    },
    "2317": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30086,
        30115
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2318": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30169,
        30170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2320": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30169,
        30184
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2321": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30169,
        30184
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2322": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30169,
        30184
      ],
      "op": "EXP",
      "path": "0"
    },
    "2323": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30134,
        30185
      ],
      "op": "AND",
      "path": "0"
    },
    "2324": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x94E"
    },
    "2327": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2328": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2330": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2331": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2337": {
      "op": "SHL"
    },
    "2338": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2339": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2340": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2342": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "ADD",
      "path": "0"
    },
    "2343": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2344": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2345": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2347": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "ADD",
      "path": "0"
    },
    "2348": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2349": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2350": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "SUB",
      "path": "0"
    },
    "2351": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2352": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2353": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x30"
    },
    "2355": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2356": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2357": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2359": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "ADD",
      "path": "0"
    },
    "2360": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2361": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1705"
    },
    "2364": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x30"
    },
    "2366": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2367": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "2368": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2370": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "ADD",
      "path": "0"
    },
    "2371": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2372": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "POP",
      "path": "0"
    },
    "2373": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "POP",
      "path": "0"
    },
    "2374": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2376": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2377": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2378": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2379": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "SUB",
      "path": "0"
    },
    "2380": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2381": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2382": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30125,
        30244
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2383": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30254,
        30285
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x0"
    },
    "2385": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30254,
        30285
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2386": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30254,
        30285
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2387": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30254,
        30285
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2388": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30254,
        30274
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "2390": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30254,
        30285
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2392": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30254,
        30285
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2393": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30254,
        30285
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2394": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30254,
        30285
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2395": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30254,
        30285
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2397": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30254,
        30285
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2398": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30254,
        30285
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2399": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30254,
        30285
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2400": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30254,
        30307
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2401": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30254,
        30307
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2402": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30291,
        30292
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2404": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30291,
        30306
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2405": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30291,
        30306
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2406": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30291,
        30306
      ],
      "op": "EXP",
      "path": "0"
    },
    "2407": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30289,
        30307
      ],
      "op": "NOT",
      "path": "0"
    },
    "2408": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30254,
        30307
      ],
      "op": "AND",
      "path": "0"
    },
    "2409": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30254,
        30307
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2410": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30254,
        30307
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2411": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30344,
        30365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "2413": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30344,
        30376
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2414": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30344,
        30376
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2415": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30344,
        30376
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2416": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30344,
        30376
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2417": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30344,
        30376
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2418": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30344,
        30376
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2419": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30344,
        30376
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2420": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30344,
        30376
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2423": {
      "op": "NOT"
    },
    "2424": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30344,
        30380
      ],
      "op": "ADD",
      "path": "0"
    },
    "2425": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30390,
        30444
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 18
    },
    "2426": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30390,
        30444
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2427": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30390,
        30444
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2428": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30390,
        30444
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2429": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30510,
        30516
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x7"
    },
    "2431": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30510,
        30523
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2432": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2433": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2434": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2435": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2436": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2437": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2438": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2439": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "ADD",
      "path": "0"
    },
    "2440": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2441": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2442": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2443": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2444": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2445": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "ADD",
      "path": "0"
    },
    "2446": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2447": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30525,
        30535
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2448": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2450": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2451": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "ADD",
      "path": "0"
    },
    "2452": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2453": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2454": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2455": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x3E0A7036018B5A2A3C5D0AFA14E51998EF3CF98C38E4289A8897222B3ACF75A7"
    },
    "2488": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2489": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2490": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2491": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "SUB",
      "path": "0"
    },
    "2492": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2494": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "ADD",
      "path": "0"
    },
    "2495": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2496": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30459,
        30536
      ],
      "op": "LOG1",
      "path": "0"
    },
    "2497": {
      "branch": 85,
      "fn": "Multiownable.cancelPending",
      "offset": [
        30550,
        30574
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2498": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30546,
        30687
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA09"
    },
    "2501": {
      "branch": 85,
      "fn": "Multiownable.cancelPending",
      "offset": [
        30546,
        30687
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2502": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30590,
        30616
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 20,
      "value": "0x9CE"
    },
    "2505": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30606,
        30615
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2506": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30590,
        30605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13F4"
    },
    "2509": {
      "fn": "Multiownable.cancelPending",
      "jump": "i",
      "offset": [
        30590,
        30616
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2510": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30590,
        30616
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2511": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30635,
        30676
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x40"
    },
    "2513": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30635,
        30676
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2514": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30635,
        30676
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2515": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30635,
        30676
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2516": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30635,
        30676
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2517": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30635,
        30676
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2518": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30665,
        30675
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2519": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30635,
        30676
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2521": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30635,
        30676
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2522": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30635,
        30676
      ],
      "op": "ADD",
      "path": "0"
    },
    "2523": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30635,
        30676
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2524": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30635,
        30676
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2525": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30635,
        30676
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2526": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30635,
        30676
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x55E0DD61C29AAC6FC36807628300AD3E3EC68655AE76AE4002F7FB101496FA9F"
    },
    "2559": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30635,
        30676
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2560": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30635,
        30676
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2561": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30635,
        30676
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2562": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30635,
        30676
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2563": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30635,
        30676
      ],
      "op": "SUB",
      "path": "0"
    },
    "2564": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30635,
        30676
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2565": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30635,
        30676
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2566": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30635,
        30676
      ],
      "op": "ADD",
      "path": "0"
    },
    "2567": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30635,
        30676
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2568": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30635,
        30676
      ],
      "op": "LOG1",
      "path": "0"
    },
    "2569": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        30546,
        30687
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2570": {
      "offset": [
        27386,
        27387
      ],
      "op": "POP",
      "path": "0"
    },
    "2571": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        27386,
        27387
      ],
      "op": "POP",
      "path": "0"
    },
    "2572": {
      "offset": [
        27405,
        27411
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2573": {
      "offset": [
        27401,
        27512
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2574": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        27401,
        27512
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88E"
    },
    "2577": {
      "offset": [
        27401,
        27512
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2578": {
      "offset": [
        27431,
        27447
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "2580": {
      "offset": [
        27431,
        27460
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2581": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        27431,
        27460
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2588": {
      "op": "SHL"
    },
    "2589": {
      "op": "SUB"
    },
    "2590": {
      "op": "NOT"
    },
    "2591": {
      "offset": [
        27431,
        27460
      ],
      "op": "AND",
      "path": "0"
    },
    "2592": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        27431,
        27460
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2593": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        27431,
        27460
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2594": {
      "offset": [
        27458,
        27459
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2596": {
      "offset": [
        27478,
        27493
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2598": {
      "offset": [
        27478,
        27497
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2599": {
      "offset": [
        27161,
        27522
      ],
      "op": "POP",
      "path": "0"
    },
    "2600": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        27161,
        27522
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2601": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        29996,
        30693
      ],
      "op": "POP",
      "path": "0"
    },
    "2602": {
      "fn": "Multiownable.cancelPending",
      "jump": "o",
      "offset": [
        29996,
        30693
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2603": {
      "offset": [
        26126,
        26182
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2604": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "2606": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2608": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2609": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2611": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2612": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2613": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2614": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2616": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2617": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2618": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2619": {
      "fn": "Multiownable.cancelPending",
      "offset": [
        26126,
        26182
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2620": {
      "fn": "Multiownable.cancelPending",
      "jump": "o",
      "offset": [
        26126,
        26182
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2621": {
      "fn": "ERC20.symbol",
      "offset": [
        17321,
        17406
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2622": {
      "fn": "ERC20.symbol",
      "offset": [
        17392,
        17399
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x4"
    },
    "2624": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2625": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2626": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2628": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2629": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2630": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2632": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2634": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2638": {
      "op": "NOT"
    },
    "2639": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2642": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2644": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2645": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "AND",
      "path": "0"
    },
    "2646": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2647": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "MUL",
      "path": "0"
    },
    "2648": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "ADD",
      "path": "0"
    },
    "2649": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2650": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "2651": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "AND",
      "path": "0"
    },
    "2652": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2653": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2654": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2655": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "DIV",
      "path": "0"
    },
    "2656": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2657": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2658": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "ADD",
      "path": "0"
    },
    "2659": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2660": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2661": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "DIV",
      "path": "0"
    },
    "2662": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2663": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "MUL",
      "path": "0"
    },
    "2664": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2665": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "ADD",
      "path": "0"
    },
    "2666": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2667": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "ADD",
      "path": "0"
    },
    "2668": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2669": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2670": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2671": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2672": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2673": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2674": {
      "fn": "ERC20.symbol",
      "offset": [
        17360,
        17373
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2676": {
      "fn": "ERC20.symbol",
      "offset": [
        17360,
        17373
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2677": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2678": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2679": {
      "fn": "ERC20.symbol",
      "offset": [
        17392,
        17399
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2680": {
      "fn": "ERC20.symbol",
      "offset": [
        17392,
        17399
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2681": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2682": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "ADD",
      "path": "0"
    },
    "2683": {
      "fn": "ERC20.symbol",
      "offset": [
        17392,
        17399
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2684": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2685": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2686": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2687": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x632"
    },
    "2690": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2691": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2692": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2694": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "LT",
      "path": "0"
    },
    "2695": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x607"
    },
    "2698": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2699": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2702": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2703": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2704": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2705": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "DIV",
      "path": "0"
    },
    "2706": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "MUL",
      "path": "0"
    },
    "2707": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2708": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2709": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2710": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2712": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "ADD",
      "path": "0"
    },
    "2713": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2714": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x632"
    },
    "2717": {
      "fn": "ERC20.symbol",
      "offset": [
        17385,
        17399
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2718": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2719": {
      "fn": "StandardToken.burn",
      "offset": [
        32528,
        32532
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2721": {
      "offset": [
        27572,
        27611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAAB"
    },
    "2724": {
      "offset": [
        27591,
        27610
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2726": {
      "fn": "StandardToken.burn",
      "offset": [
        27591,
        27610
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2727": {
      "offset": [
        27572,
        27590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF3C"
    },
    "2730": {
      "jump": "i",
      "offset": [
        27572,
        27611
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2731": {
      "branch": 86,
      "fn": "StandardToken.burn",
      "offset": [
        27572,
        27611
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2732": {
      "offset": [
        27568,
        27965
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2733": {
      "fn": "StandardToken.burn",
      "offset": [
        27568,
        27965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x654"
    },
    "2736": {
      "branch": 86,
      "offset": [
        27568,
        27965
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2737": {
      "offset": [
        27642,
        27658
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "2739": {
      "fn": "StandardToken.burn",
      "offset": [
        27642,
        27658
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2746": {
      "op": "SHL"
    },
    "2747": {
      "op": "SUB"
    },
    "2748": {
      "offset": [
        27642,
        27658
      ],
      "op": "AND",
      "path": "0"
    },
    "2749": {
      "offset": [
        27642,
        27672
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2750": {
      "offset": [
        27687,
        27816
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2751": {
      "fn": "StandardToken.burn",
      "offset": [
        27687,
        27816
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2752": {
      "fn": "StandardToken.burn",
      "offset": [
        27687,
        27816
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADC"
    },
    "2755": {
      "fn": "StandardToken.burn",
      "offset": [
        27687,
        27816
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2756": {
      "offset": [
        27717,
        27733
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "2758": {
      "offset": [
        27717,
        27746
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2759": {
      "fn": "StandardToken.burn",
      "offset": [
        27717,
        27746
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2766": {
      "op": "SHL"
    },
    "2767": {
      "op": "SUB"
    },
    "2768": {
      "op": "NOT"
    },
    "2769": {
      "offset": [
        27717,
        27746
      ],
      "op": "AND",
      "path": "0"
    },
    "2770": {
      "offset": [
        27736,
        27746
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2771": {
      "offset": [
        27717,
        27746
      ],
      "op": "OR",
      "path": "0"
    },
    "2772": {
      "fn": "StandardToken.burn",
      "offset": [
        27717,
        27746
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2773": {
      "fn": "StandardToken.burn",
      "offset": [
        27717,
        27746
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2774": {
      "offset": [
        27782,
        27801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2776": {
      "fn": "StandardToken.burn",
      "offset": [
        27782,
        27801
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2777": {
      "offset": [
        27764,
        27779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2779": {
      "offset": [
        27764,
        27801
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2780": {
      "offset": [
        27687,
        27816
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2781": {
      "fn": "StandardToken.burn",
      "offset": [
        32544,
        32563
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 23,
      "value": "0xAE6"
    },
    "2784": {
      "fn": "StandardToken.burn",
      "offset": [
        32550,
        32553
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2785": {
      "fn": "StandardToken.burn",
      "offset": [
        32555,
        32562
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2786": {
      "fn": "StandardToken.burn",
      "offset": [
        32544,
        32549
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C7"
    },
    "2789": {
      "fn": "StandardToken.burn",
      "jump": "i",
      "offset": [
        32544,
        32563
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2790": {
      "fn": "StandardToken.burn",
      "offset": [
        32544,
        32563
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2791": {
      "fn": "StandardToken.burn",
      "offset": [
        32588,
        32600
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0xF"
    },
    "2793": {
      "fn": "StandardToken.burn",
      "offset": [
        32588,
        32600
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2794": {
      "fn": "StandardToken.burn",
      "offset": [
        32588,
        32613
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF3"
    },
    "2797": {
      "fn": "StandardToken.burn",
      "offset": [
        32588,
        32613
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2798": {
      "fn": "StandardToken.burn",
      "offset": [
        32605,
        32612
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2799": {
      "fn": "StandardToken.burn",
      "offset": [
        32588,
        32604
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF9"
    },
    "2802": {
      "fn": "StandardToken.burn",
      "jump": "i",
      "offset": [
        32588,
        32613
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2803": {
      "fn": "StandardToken.burn",
      "offset": [
        32588,
        32613
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2804": {
      "fn": "StandardToken.burn",
      "offset": [
        32573,
        32585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "2806": {
      "fn": "StandardToken.burn",
      "offset": [
        32573,
        32613
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2807": {
      "fn": "StandardToken.burn",
      "offset": [
        32631,
        32635
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x1"
    },
    "2809": {
      "fn": "StandardToken.burn",
      "offset": [
        32631,
        32635
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2810": {
      "op": "POP"
    },
    "2811": {
      "offset": [
        27848,
        27854
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2812": {
      "offset": [
        27844,
        27955
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2813": {
      "fn": "StandardToken.burn",
      "offset": [
        27844,
        27955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F3"
    },
    "2816": {
      "offset": [
        27844,
        27955
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2817": {
      "offset": [
        27874,
        27890
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "2819": {
      "offset": [
        27874,
        27903
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2820": {
      "fn": "StandardToken.burn",
      "offset": [
        27874,
        27903
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2827": {
      "op": "SHL"
    },
    "2828": {
      "op": "SUB"
    },
    "2829": {
      "op": "NOT"
    },
    "2830": {
      "offset": [
        27874,
        27903
      ],
      "op": "AND",
      "path": "0"
    },
    "2831": {
      "fn": "StandardToken.burn",
      "offset": [
        27874,
        27903
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2832": {
      "fn": "StandardToken.burn",
      "offset": [
        27874,
        27903
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2833": {
      "offset": [
        27901,
        27902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2835": {
      "offset": [
        27921,
        27936
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2837": {
      "offset": [
        27921,
        27940
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2838": {
      "offset": [
        27568,
        27965
      ],
      "op": "POP",
      "path": "0"
    },
    "2839": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2840": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2841": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "POP",
      "path": "0"
    },
    "2842": {
      "fn": "StandardToken.burn",
      "offset": [
        32443,
        32642
      ],
      "op": "POP",
      "path": "0"
    },
    "2843": {
      "fn": "StandardToken.burn",
      "jump": "o",
      "offset": [
        32443,
        32642
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2844": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21203,
        21469
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2845": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21296,
        21300
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2847": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21312,
        21441
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 26,
      "value": "0x650"
    },
    "2850": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21321,
        21333
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB29"
    },
    "2853": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21321,
        21331
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC5A"
    },
    "2856": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        21321,
        21333
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2857": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21321,
        21333
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2858": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21335,
        21342
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2859": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DE"
    },
    "2862": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21383,
        21398
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2863": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21440
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2865": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21440
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2866": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21440
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2867": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21440
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2869": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21440
      ],
      "op": "ADD",
      "path": "0"
    },
    "2870": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21440
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2872": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21440
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2873": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21440
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2874": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21440
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x25"
    },
    "2876": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21440
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2877": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21440
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2878": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21440
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2880": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21440
      ],
      "op": "ADD",
      "path": "0"
    },
    "2881": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1800"
    },
    "2884": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21440
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x25"
    },
    "2886": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21440
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2887": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21440
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "2888": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2890": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21369
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2892": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21356,
        21368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB53"
    },
    "2895": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21356,
        21366
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC5A"
    },
    "2898": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        21356,
        21368
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2899": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21356,
        21368
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2906": {
      "op": "SHL"
    },
    "2907": {
      "op": "SUB"
    },
    "2908": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21369
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2909": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21369
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2910": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21369
      ],
      "op": "AND",
      "path": "0"
    },
    "2911": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21369
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2912": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21369
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2913": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21369
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2915": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21369
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2916": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21369
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2917": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21369
      ],
      "op": "ADD",
      "path": "0"
    },
    "2918": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21369
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2919": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21369
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2920": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21369
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2921": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21369
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2922": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21369
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2924": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21369
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2925": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21369
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2926": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21369
      ],
      "op": "ADD",
      "path": "0"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2929": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21369
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2930": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21369
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2931": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21369
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2932": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21378
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2933": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21378
      ],
      "op": "DUP14",
      "path": "0"
    },
    "2934": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21378
      ],
      "op": "AND",
      "path": "0"
    },
    "2935": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21378
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2936": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21378
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2937": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21378
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2938": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21378
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2939": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21378
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2940": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21378
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2941": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21378
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2942": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21378
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2943": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21440
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2944": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        21344,
        21382
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA5"
    },
    "2947": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        21344,
        21440
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2948": {
      "fn": "ERC20.transfer",
      "offset": [
        18646,
        18818
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2949": {
      "fn": "ERC20.transfer",
      "offset": [
        18732,
        18736
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2951": {
      "fn": "ERC20.transfer",
      "offset": [
        18748,
        18790
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 27,
      "value": "0x650"
    },
    "2954": {
      "fn": "ERC20.transfer",
      "offset": [
        18758,
        18770
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB91"
    },
    "2957": {
      "fn": "ERC20.transfer",
      "offset": [
        18758,
        18768
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC5A"
    },
    "2960": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        18758,
        18770
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2961": {
      "fn": "ERC20.transfer",
      "offset": [
        18758,
        18770
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2962": {
      "fn": "ERC20.transfer",
      "offset": [
        18772,
        18781
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2963": {
      "fn": "ERC20.transfer",
      "offset": [
        18783,
        18789
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2964": {
      "fn": "ERC20.transfer",
      "offset": [
        18748,
        18757
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD4A"
    },
    "2967": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        18748,
        18790
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2968": {
      "offset": [
        31470,
        31501
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2969": {
      "fn": "ERC20.transfer",
      "offset": [
        31470,
        31501
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "2971": {
      "fn": "ERC20.transfer",
      "offset": [
        31470,
        31501
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2972": {
      "fn": "ERC20.transfer",
      "offset": [
        31470,
        31501
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2973": {
      "fn": "ERC20.transfer",
      "jump": "o",
      "offset": [
        31470,
        31501
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2974": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        26930,
        27016
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2975": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        26996,
        27002
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 28,
      "value": "0x7"
    },
    "2977": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        26996,
        27009
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2978": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        26930,
        27016
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2979": {
      "fn": "Multiownable.ownersCount",
      "jump": "o",
      "offset": [
        26930,
        27016
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2980": {
      "offset": [
        25937,
        25982
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2981": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "2983": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2985": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2986": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2988": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2989": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2990": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2991": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2993": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2994": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2995": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2996": {
      "fn": "Multiownable.ownersCount",
      "offset": [
        25937,
        25982
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2997": {
      "fn": "Multiownable.ownersCount",
      "jump": "o",
      "offset": [
        25937,
        25982
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2998": {
      "fn": "StandardToken.totalBurned",
      "offset": [
        31937,
        32026
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2999": {
      "fn": "StandardToken.totalBurned",
      "offset": [
        32007,
        32019
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 29,
      "value": "0xF"
    },
    "3001": {
      "fn": "StandardToken.totalBurned",
      "offset": [
        32007,
        32019
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3002": {
      "fn": "StandardToken.totalBurned",
      "offset": [
        31937,
        32026
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3003": {
      "fn": "StandardToken.totalBurned",
      "jump": "o",
      "offset": [
        31937,
        32026
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3004": {
      "fn": "ERC20.allowance",
      "offset": [
        18876,
        19025
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3009": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3011": {
      "op": "SHL"
    },
    "3012": {
      "op": "SUB"
    },
    "3013": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19009
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 30
    },
    "3014": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19009
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3015": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19009
      ],
      "op": "AND",
      "path": "0"
    },
    "3016": {
      "fn": "ERC20.allowance",
      "offset": [
        18965,
        18972
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3018": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19009
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3019": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19009
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3020": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19009
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3021": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19002
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3023": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19009
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3025": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19009
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3026": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19009
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3027": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19009
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3028": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19009
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3030": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19009
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3031": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19009
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3032": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19009
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3033": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19018
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3034": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19018
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3035": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19018
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3036": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19018
      ],
      "op": "AND",
      "path": "0"
    },
    "3037": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19018
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3038": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19018
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3039": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19018
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3040": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19018
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3041": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19018
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3042": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19018
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3043": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19018
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3044": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19018
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3045": {
      "fn": "ERC20.allowance",
      "offset": [
        18991,
        19018
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3046": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        18876,
        19025
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3047": {
      "offset": [
        26005,
        26058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3048": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "3050": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3052": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3053": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3055": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3056": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3057": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3058": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3060": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3061": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3062": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3063": {
      "fn": "ERC20.allowance",
      "offset": [
        26005,
        26058
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3064": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        26005,
        26058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3065": {
      "fn": "SafeMath.add",
      "offset": [
        4585,
        4761
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3066": {
      "fn": "SafeMath.add",
      "offset": [
        4643,
        4650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3068": {
      "fn": "SafeMath.add",
      "offset": [
        4674,
        4679
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3069": {
      "fn": "SafeMath.add",
      "offset": [
        4674,
        4679
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3070": {
      "fn": "SafeMath.add",
      "offset": [
        4674,
        4679
      ],
      "op": "ADD",
      "path": "0"
    },
    "3071": {
      "fn": "SafeMath.add",
      "offset": [
        4697,
        4703
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 31
    },
    "3072": {
      "fn": "SafeMath.add",
      "offset": [
        4697,
        4703
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3073": {
      "fn": "SafeMath.add",
      "offset": [
        4697,
        4703
      ],
      "op": "LT",
      "path": "0"
    },
    "3074": {
      "branch": 87,
      "fn": "SafeMath.add",
      "offset": [
        4697,
        4703
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3075": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC53"
    },
    "3078": {
      "branch": 87,
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3079": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3081": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3082": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3083": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3089": {
      "op": "SHL"
    },
    "3090": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3091": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3092": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3094": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3096": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3097": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "ADD",
      "path": "0"
    },
    "3098": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3099": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1B"
    },
    "3101": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3103": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3104": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "ADD",
      "path": "0"
    },
    "3105": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3106": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "3139": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3141": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3142": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "ADD",
      "path": "0"
    },
    "3143": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3144": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3145": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3146": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3147": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3148": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3149": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "SUB",
      "path": "0"
    },
    "3150": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "3152": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "ADD",
      "path": "0"
    },
    "3153": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3154": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3155": {
      "fn": "SafeMath.add",
      "offset": [
        4689,
        4735
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3156": {
      "fn": "SafeMath.add",
      "offset": [
        4753,
        4754
      ],
      "op": "SWAP4",
      "path": "0",
      "statement": 32
    },
    "3157": {
      "fn": "SafeMath.add",
      "offset": [
        4585,
        4761
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3158": {
      "op": "POP"
    },
    "3159": {
      "op": "POP"
    },
    "3160": {
      "op": "POP"
    },
    "3161": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        4585,
        4761
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3162": {
      "fn": "Context._msgSender",
      "offset": [
        655,
        759
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3163": {
      "fn": "Context._msgSender",
      "offset": [
        742,
        752
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 33
    },
    "3164": {
      "fn": "Context._msgSender",
      "offset": [
        655,
        759
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3165": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        655,
        759
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3166": {
      "fn": "ERC20._approve",
      "offset": [
        24267,
        24607
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3173": {
      "op": "SHL"
    },
    "3174": {
      "op": "SUB"
    },
    "3175": {
      "fn": "ERC20._approve",
      "offset": [
        24368,
        24387
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 34
    },
    "3176": {
      "branch": 88,
      "fn": "ERC20._approve",
      "offset": [
        24368,
        24387
      ],
      "op": "AND",
      "path": "0"
    },
    "3177": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCA3"
    },
    "3180": {
      "branch": 88,
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3181": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3183": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3184": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3190": {
      "op": "SHL"
    },
    "3191": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3192": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3193": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3195": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "ADD",
      "path": "0"
    },
    "3196": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3197": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3198": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3200": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "ADD",
      "path": "0"
    },
    "3201": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3202": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3203": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "SUB",
      "path": "0"
    },
    "3204": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3205": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3206": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3208": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3209": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3210": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3212": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "ADD",
      "path": "0"
    },
    "3213": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3214": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17A3"
    },
    "3217": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3219": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3220": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "3221": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3223": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "ADD",
      "path": "0"
    },
    "3224": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3225": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "POP",
      "path": "0"
    },
    "3226": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "POP",
      "path": "0"
    },
    "3227": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3229": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3230": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3231": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3232": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "SUB",
      "path": "0"
    },
    "3233": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3234": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3235": {
      "fn": "ERC20._approve",
      "offset": [
        24360,
        24428
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3242": {
      "op": "SHL"
    },
    "3243": {
      "op": "SUB"
    },
    "3244": {
      "fn": "ERC20._approve",
      "offset": [
        24446,
        24467
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 35
    },
    "3245": {
      "branch": 89,
      "fn": "ERC20._approve",
      "offset": [
        24446,
        24467
      ],
      "op": "AND",
      "path": "0"
    },
    "3246": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE8"
    },
    "3249": {
      "branch": 89,
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3250": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3252": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3253": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3257": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3259": {
      "op": "SHL"
    },
    "3260": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3261": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3262": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3264": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "ADD",
      "path": "0"
    },
    "3265": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3266": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3267": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3269": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "ADD",
      "path": "0"
    },
    "3270": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3271": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3272": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "SUB",
      "path": "0"
    },
    "3273": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3274": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3275": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x22"
    },
    "3277": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3278": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3279": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3281": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "ADD",
      "path": "0"
    },
    "3282": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3283": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x164B"
    },
    "3286": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x22"
    },
    "3288": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3289": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "3290": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3292": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "ADD",
      "path": "0"
    },
    "3293": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3294": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "POP",
      "path": "0"
    },
    "3295": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "POP",
      "path": "0"
    },
    "3296": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3298": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3299": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3300": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3301": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "SUB",
      "path": "0"
    },
    "3302": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3303": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3304": {
      "fn": "ERC20._approve",
      "offset": [
        24438,
        24506
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3309": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3311": {
      "op": "SHL"
    },
    "3312": {
      "op": "SUB"
    },
    "3313": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24535
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 36
    },
    "3314": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24535
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3315": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24535
      ],
      "op": "AND",
      "path": "0"
    },
    "3316": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3318": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24535
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3319": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24535
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3320": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24535
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3321": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3323": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3325": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24535
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3326": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24535
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3327": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24535
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3328": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3330": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24535
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3331": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24535
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3332": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24535
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3333": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24544
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3334": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24544
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3335": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24544
      ],
      "op": "AND",
      "path": "0"
    },
    "3336": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24544
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3337": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24544
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3338": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24544
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3339": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24544
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3340": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24544
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3341": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24544
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3342": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24544
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3343": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24544
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3344": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24544
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3345": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24544
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3346": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24553
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3347": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3348": {
      "fn": "ERC20._approve",
      "offset": [
        24517,
        24553
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3349": {
      "fn": "ERC20._approve",
      "offset": [
        24568,
        24600
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 37
    },
    "3350": {
      "fn": "ERC20._approve",
      "offset": [
        24568,
        24600
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3351": {
      "fn": "ERC20._approve",
      "offset": [
        24568,
        24600
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3352": {
      "fn": "ERC20._approve",
      "offset": [
        24568,
        24600
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3353": {
      "fn": "ERC20._approve",
      "offset": [
        24568,
        24600
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3354": {
      "fn": "ERC20._approve",
      "offset": [
        24568,
        24600
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3355": {
      "fn": "ERC20._approve",
      "offset": [
        24568,
        24600
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3356": {
      "fn": "ERC20._approve",
      "offset": [
        24568,
        24600
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "3389": {
      "fn": "ERC20._approve",
      "offset": [
        24568,
        24600
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3390": {
      "fn": "ERC20._approve",
      "offset": [
        24568,
        24600
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3391": {
      "fn": "ERC20._approve",
      "offset": [
        24568,
        24600
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3392": {
      "fn": "ERC20._approve",
      "offset": [
        24568,
        24600
      ],
      "op": "SUB",
      "path": "0"
    },
    "3393": {
      "fn": "ERC20._approve",
      "offset": [
        24568,
        24600
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3394": {
      "fn": "ERC20._approve",
      "offset": [
        24568,
        24600
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3395": {
      "fn": "ERC20._approve",
      "offset": [
        24568,
        24600
      ],
      "op": "ADD",
      "path": "0"
    },
    "3396": {
      "fn": "ERC20._approve",
      "offset": [
        24568,
        24600
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3397": {
      "fn": "ERC20._approve",
      "offset": [
        24568,
        24600
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3398": {
      "fn": "ERC20._approve",
      "offset": [
        24267,
        24607
      ],
      "op": "POP",
      "path": "0"
    },
    "3399": {
      "fn": "ERC20._approve",
      "offset": [
        24267,
        24607
      ],
      "op": "POP",
      "path": "0"
    },
    "3400": {
      "fn": "ERC20._approve",
      "offset": [
        24267,
        24607
      ],
      "op": "POP",
      "path": "0"
    },
    "3401": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        24267,
        24607
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3402": {
      "fn": "ERC20._transfer",
      "offset": [
        21943,
        22473
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3409": {
      "op": "SHL"
    },
    "3410": {
      "op": "SUB"
    },
    "3411": {
      "fn": "ERC20._transfer",
      "offset": [
        22048,
        22068
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 38
    },
    "3412": {
      "branch": 90,
      "fn": "ERC20._transfer",
      "offset": [
        22048,
        22068
      ],
      "op": "AND",
      "path": "0"
    },
    "3413": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD8F"
    },
    "3416": {
      "branch": 90,
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3417": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3419": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3420": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3424": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3426": {
      "op": "SHL"
    },
    "3427": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3428": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3429": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3431": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "ADD",
      "path": "0"
    },
    "3432": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3433": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3434": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3436": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "ADD",
      "path": "0"
    },
    "3437": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3438": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3439": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "SUB",
      "path": "0"
    },
    "3440": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3441": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3442": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x25"
    },
    "3444": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3445": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3446": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3448": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "ADD",
      "path": "0"
    },
    "3449": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3450": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x177E"
    },
    "3453": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x25"
    },
    "3455": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3456": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "3457": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3459": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "ADD",
      "path": "0"
    },
    "3460": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3461": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "POP",
      "path": "0"
    },
    "3462": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "POP",
      "path": "0"
    },
    "3463": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3465": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3466": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3467": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3468": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "SUB",
      "path": "0"
    },
    "3469": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3470": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3471": {
      "fn": "ERC20._transfer",
      "offset": [
        22040,
        22110
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3478": {
      "op": "SHL"
    },
    "3479": {
      "op": "SUB"
    },
    "3480": {
      "fn": "ERC20._transfer",
      "offset": [
        22128,
        22151
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 39
    },
    "3481": {
      "branch": 91,
      "fn": "ERC20._transfer",
      "offset": [
        22128,
        22151
      ],
      "op": "AND",
      "path": "0"
    },
    "3482": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDD4"
    },
    "3485": {
      "branch": 91,
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3486": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3488": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3489": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3493": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3495": {
      "op": "SHL"
    },
    "3496": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3497": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3498": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3500": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "ADD",
      "path": "0"
    },
    "3501": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3502": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3503": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3505": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "ADD",
      "path": "0"
    },
    "3506": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3507": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3508": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "SUB",
      "path": "0"
    },
    "3509": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3510": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3511": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x23"
    },
    "3513": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3514": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3515": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3517": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "ADD",
      "path": "0"
    },
    "3518": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3519": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1606"
    },
    "3522": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x23"
    },
    "3524": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3525": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "3526": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3528": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "ADD",
      "path": "0"
    },
    "3529": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3530": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "POP",
      "path": "0"
    },
    "3531": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "POP",
      "path": "0"
    },
    "3532": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3534": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3535": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3536": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3537": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "SUB",
      "path": "0"
    },
    "3538": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3539": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3540": {
      "fn": "ERC20._transfer",
      "offset": [
        22120,
        22191
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3541": {
      "fn": "ERC20._transfer",
      "offset": [
        22202,
        22249
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 40,
      "value": "0xDDF"
    },
    "3544": {
      "fn": "ERC20._transfer",
      "offset": [
        22223,
        22229
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3545": {
      "fn": "ERC20._transfer",
      "offset": [
        22231,
        22240
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3546": {
      "fn": "ERC20._transfer",
      "offset": [
        22242,
        22248
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3547": {
      "fn": "ERC20._transfer",
      "offset": [
        22202,
        22222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88C"
    },
    "3550": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        22202,
        22249
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3551": {
      "fn": "ERC20._transfer",
      "offset": [
        22202,
        22249
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3552": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22351
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 41,
      "value": "0xE1C"
    },
    "3555": {
      "fn": "ERC20._transfer",
      "offset": [
        22302,
        22308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3556": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3558": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22351
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3559": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22351
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3560": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "3562": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22351
      ],
      "op": "ADD",
      "path": "0"
    },
    "3563": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3565": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22351
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3566": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22351
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3567": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x26"
    },
    "3569": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22351
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3570": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22351
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3571": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3573": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22351
      ],
      "op": "ADD",
      "path": "0"
    },
    "3574": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22351
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x166D"
    },
    "3577": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x26"
    },
    "3579": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22351
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3580": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22351
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3587": {
      "op": "SHL"
    },
    "3588": {
      "op": "SUB"
    },
    "3589": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22297
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3590": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22297
      ],
      "op": "AND",
      "path": "0"
    },
    "3591": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3593": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3594": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3595": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22297
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3596": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3598": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3599": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3600": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22297
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3601": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3603": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3604": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22297
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3605": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22297
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3606": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22297
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3607": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22351
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3608": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22301
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA5"
    },
    "3611": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        22280,
        22351
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3612": {
      "fn": "ERC20._transfer",
      "offset": [
        22280,
        22351
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3619": {
      "op": "SHL"
    },
    "3620": {
      "op": "SUB"
    },
    "3621": {
      "fn": "ERC20._transfer",
      "offset": [
        22260,
        22277
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3622": {
      "fn": "ERC20._transfer",
      "offset": [
        22260,
        22277
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3623": {
      "fn": "ERC20._transfer",
      "offset": [
        22260,
        22277
      ],
      "op": "AND",
      "path": "0"
    },
    "3624": {
      "fn": "ERC20._transfer",
      "offset": [
        22260,
        22269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3626": {
      "fn": "ERC20._transfer",
      "offset": [
        22260,
        22277
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3627": {
      "fn": "ERC20._transfer",
      "offset": [
        22260,
        22277
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3628": {
      "fn": "ERC20._transfer",
      "offset": [
        22260,
        22277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3629": {
      "fn": "ERC20._transfer",
      "offset": [
        22260,
        22277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3631": {
      "fn": "ERC20._transfer",
      "offset": [
        22260,
        22277
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3632": {
      "fn": "ERC20._transfer",
      "offset": [
        22260,
        22277
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3633": {
      "fn": "ERC20._transfer",
      "offset": [
        22260,
        22277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3634": {
      "fn": "ERC20._transfer",
      "offset": [
        22260,
        22277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3636": {
      "fn": "ERC20._transfer",
      "offset": [
        22260,
        22277
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3637": {
      "fn": "ERC20._transfer",
      "offset": [
        22260,
        22277
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3638": {
      "fn": "ERC20._transfer",
      "offset": [
        22260,
        22277
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3639": {
      "fn": "ERC20._transfer",
      "offset": [
        22260,
        22351
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3640": {
      "fn": "ERC20._transfer",
      "offset": [
        22260,
        22351
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3641": {
      "fn": "ERC20._transfer",
      "offset": [
        22260,
        22351
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3642": {
      "fn": "ERC20._transfer",
      "offset": [
        22260,
        22351
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3643": {
      "fn": "ERC20._transfer",
      "offset": [
        22384,
        22404
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 42
    },
    "3644": {
      "fn": "ERC20._transfer",
      "offset": [
        22384,
        22404
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3645": {
      "fn": "ERC20._transfer",
      "offset": [
        22384,
        22404
      ],
      "op": "AND",
      "path": "0"
    },
    "3646": {
      "fn": "ERC20._transfer",
      "offset": [
        22384,
        22404
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3647": {
      "fn": "ERC20._transfer",
      "offset": [
        22384,
        22404
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3648": {
      "fn": "ERC20._transfer",
      "offset": [
        22384,
        22404
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3649": {
      "fn": "ERC20._transfer",
      "offset": [
        22384,
        22404
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3650": {
      "fn": "ERC20._transfer",
      "offset": [
        22384,
        22416
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE4B"
    },
    "3653": {
      "fn": "ERC20._transfer",
      "offset": [
        22384,
        22416
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3654": {
      "fn": "ERC20._transfer",
      "offset": [
        22409,
        22415
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3655": {
      "fn": "ERC20._transfer",
      "offset": [
        22384,
        22408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF9"
    },
    "3658": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        22384,
        22416
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3659": {
      "fn": "ERC20._transfer",
      "offset": [
        22384,
        22416
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3666": {
      "op": "SHL"
    },
    "3667": {
      "op": "SUB"
    },
    "3668": {
      "fn": "ERC20._transfer",
      "offset": [
        22361,
        22381
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3669": {
      "fn": "ERC20._transfer",
      "offset": [
        22361,
        22381
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3670": {
      "fn": "ERC20._transfer",
      "offset": [
        22361,
        22381
      ],
      "op": "AND",
      "path": "0"
    },
    "3671": {
      "fn": "ERC20._transfer",
      "offset": [
        22361,
        22370
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3673": {
      "fn": "ERC20._transfer",
      "offset": [
        22361,
        22381
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3674": {
      "fn": "ERC20._transfer",
      "offset": [
        22361,
        22381
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3675": {
      "fn": "ERC20._transfer",
      "offset": [
        22361,
        22381
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3676": {
      "fn": "ERC20._transfer",
      "offset": [
        22361,
        22381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3678": {
      "fn": "ERC20._transfer",
      "offset": [
        22361,
        22381
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3679": {
      "fn": "ERC20._transfer",
      "offset": [
        22361,
        22381
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3680": {
      "fn": "ERC20._transfer",
      "offset": [
        22361,
        22381
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3681": {
      "fn": "ERC20._transfer",
      "offset": [
        22361,
        22381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3683": {
      "fn": "ERC20._transfer",
      "offset": [
        22361,
        22381
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3684": {
      "fn": "ERC20._transfer",
      "offset": [
        22361,
        22381
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3685": {
      "fn": "ERC20._transfer",
      "offset": [
        22361,
        22381
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3686": {
      "fn": "ERC20._transfer",
      "offset": [
        22361,
        22381
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3687": {
      "fn": "ERC20._transfer",
      "offset": [
        22361,
        22416
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3688": {
      "fn": "ERC20._transfer",
      "offset": [
        22361,
        22416
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3689": {
      "fn": "ERC20._transfer",
      "offset": [
        22361,
        22416
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3690": {
      "fn": "ERC20._transfer",
      "offset": [
        22361,
        22416
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3691": {
      "fn": "ERC20._transfer",
      "offset": [
        22431,
        22466
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 43
    },
    "3692": {
      "fn": "ERC20._transfer",
      "offset": [
        22431,
        22466
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3693": {
      "fn": "ERC20._transfer",
      "offset": [
        22431,
        22466
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3694": {
      "fn": "ERC20._transfer",
      "offset": [
        22431,
        22466
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3695": {
      "fn": "ERC20._transfer",
      "offset": [
        22431,
        22466
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3696": {
      "fn": "ERC20._transfer",
      "offset": [
        22431,
        22466
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3697": {
      "fn": "ERC20._transfer",
      "offset": [
        22431,
        22466
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3698": {
      "fn": "ERC20._transfer",
      "offset": [
        22361,
        22381
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3699": {
      "fn": "ERC20._transfer",
      "offset": [
        22361,
        22381
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3700": {
      "fn": "ERC20._transfer",
      "offset": [
        22431,
        22466
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3701": {
      "fn": "ERC20._transfer",
      "offset": [
        22431,
        22466
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3702": {
      "fn": "ERC20._transfer",
      "offset": [
        22431,
        22466
      ],
      "op": "AND",
      "path": "0"
    },
    "3703": {
      "fn": "ERC20._transfer",
      "offset": [
        22431,
        22466
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3704": {
      "fn": "ERC20._transfer",
      "offset": [
        22431,
        22466
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3737": {
      "fn": "ERC20._transfer",
      "offset": [
        22431,
        22466
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3738": {
      "fn": "ERC20._transfer",
      "offset": [
        22431,
        22466
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3739": {
      "fn": "ERC20._transfer",
      "offset": [
        22431,
        22466
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3740": {
      "fn": "ERC20._transfer",
      "offset": [
        22431,
        22466
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3741": {
      "fn": "ERC20._transfer",
      "offset": [
        22431,
        22466
      ],
      "op": "SUB",
      "path": "0"
    },
    "3742": {
      "fn": "ERC20._transfer",
      "offset": [
        22431,
        22466
      ],
      "op": "ADD",
      "path": "0"
    },
    "3743": {
      "fn": "ERC20._transfer",
      "offset": [
        22431,
        22466
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3744": {
      "fn": "ERC20._transfer",
      "offset": [
        22431,
        22466
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3745": {
      "fn": "ERC20._transfer",
      "offset": [
        21943,
        22473
      ],
      "op": "POP",
      "path": "0"
    },
    "3746": {
      "fn": "ERC20._transfer",
      "offset": [
        21943,
        22473
      ],
      "op": "POP",
      "path": "0"
    },
    "3747": {
      "fn": "ERC20._transfer",
      "offset": [
        21943,
        22473
      ],
      "op": "POP",
      "path": "0"
    },
    "3748": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        21943,
        22473
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3749": {
      "fn": "SafeMath.sub",
      "offset": [
        5457,
        5644
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3750": {
      "fn": "SafeMath.sub",
      "offset": [
        5543,
        5550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3752": {
      "fn": "SafeMath.sub",
      "offset": [
        5578,
        5590
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 44
    },
    "3753": {
      "fn": "SafeMath.sub",
      "offset": [
        5570,
        5576
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3754": {
      "fn": "SafeMath.sub",
      "offset": [
        5570,
        5576
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3755": {
      "fn": "SafeMath.sub",
      "offset": [
        5570,
        5576
      ],
      "op": "GT",
      "path": "0"
    },
    "3756": {
      "branch": 92,
      "fn": "SafeMath.sub",
      "offset": [
        5570,
        5576
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3757": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF34"
    },
    "3760": {
      "branch": 92,
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3761": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3763": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3764": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3770": {
      "op": "SHL"
    },
    "3771": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3772": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3773": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3775": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "ADD",
      "path": "0"
    },
    "3776": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3777": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3778": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3780": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "ADD",
      "path": "0"
    },
    "3781": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3782": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3783": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "SUB",
      "path": "0"
    },
    "3784": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3785": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3786": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3787": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3788": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3789": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3790": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3791": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3792": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3794": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "ADD",
      "path": "0"
    },
    "3795": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3796": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "POP",
      "path": "0"
    },
    "3797": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3798": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3799": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3800": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3802": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "ADD",
      "path": "0"
    },
    "3803": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3804": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3805": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3806": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3807": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3809": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3810": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3811": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3812": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "LT",
      "path": "0"
    },
    "3813": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3814": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEF9"
    },
    "3817": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3818": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3819": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3820": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "ADD",
      "path": "0"
    },
    "3821": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3822": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3823": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3824": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "ADD",
      "path": "0"
    },
    "3825": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3826": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3828": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "ADD",
      "path": "0"
    },
    "3829": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEE1"
    },
    "3832": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3833": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3834": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "POP",
      "path": "0"
    },
    "3835": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "POP",
      "path": "0"
    },
    "3836": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "POP",
      "path": "0"
    },
    "3837": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "POP",
      "path": "0"
    },
    "3838": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3839": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "POP",
      "path": "0"
    },
    "3840": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3841": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3842": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "ADD",
      "path": "0"
    },
    "3843": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3844": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3846": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "AND",
      "path": "0"
    },
    "3847": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3848": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3849": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF26"
    },
    "3852": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3853": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3854": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3855": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "SUB",
      "path": "0"
    },
    "3856": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3857": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3858": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3860": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3861": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3863": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "SUB",
      "path": "0"
    },
    "3864": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3867": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "EXP",
      "path": "0"
    },
    "3868": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "SUB",
      "path": "0"
    },
    "3869": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "NOT",
      "path": "0"
    },
    "3870": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "AND",
      "path": "0"
    },
    "3871": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3872": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3873": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3875": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "ADD",
      "path": "0"
    },
    "3876": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3877": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "POP",
      "path": "0"
    },
    "3878": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3879": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "POP",
      "path": "0"
    },
    "3880": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3881": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "POP",
      "path": "0"
    },
    "3882": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "POP",
      "path": "0"
    },
    "3883": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "POP",
      "path": "0"
    },
    "3884": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3886": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3887": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3888": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3889": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "SUB",
      "path": "0"
    },
    "3890": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3891": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3892": {
      "fn": "SafeMath.sub",
      "offset": [
        5562,
        5591
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3893": {
      "op": "POP"
    },
    "3894": {
      "op": "POP"
    },
    "3895": {
      "op": "POP"
    },
    "3896": {
      "fn": "SafeMath.sub",
      "offset": [
        5613,
        5618
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3897": {
      "fn": "SafeMath.sub",
      "offset": [
        5613,
        5618
      ],
      "op": "SUB",
      "path": "0"
    },
    "3898": {
      "fn": "SafeMath.sub",
      "offset": [
        5613,
        5618
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3899": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        5457,
        5644
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3900": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28008,
        29482
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3901": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28087,
        28103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "3903": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28087,
        28103
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3904": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28067,
        28071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3906": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28067,
        28071
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3913": {
      "op": "SHL"
    },
    "3914": {
      "op": "SUB"
    },
    "3915": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28087,
        28103
      ],
      "op": "AND",
      "path": "0"
    },
    "3916": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28107,
        28117
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3917": {
      "branch": 93,
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28087,
        28117
      ],
      "op": "EQ",
      "path": "0"
    },
    "3918": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28083,
        28276
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3919": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28083,
        28276
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF9B"
    },
    "3922": {
      "branch": 93,
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28083,
        28276
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3923": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28152,
        28167
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 45,
      "value": "0xA"
    },
    "3925": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28152,
        28167
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3926": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28141,
        28148
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3927": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28141,
        28167
      ],
      "op": "GT",
      "path": "0"
    },
    "3928": {
      "branch": 94,
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28141,
        28167
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3929": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF93"
    },
    "3932": {
      "branch": 94,
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3933": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3935": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3936": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3942": {
      "op": "SHL"
    },
    "3943": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3944": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3945": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3947": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "ADD",
      "path": "0"
    },
    "3948": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3949": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3950": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3952": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "ADD",
      "path": "0"
    },
    "3953": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3954": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3955": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "SUB",
      "path": "0"
    },
    "3956": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3957": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3958": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3960": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3961": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3962": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3964": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "ADD",
      "path": "0"
    },
    "3965": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3966": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1693"
    },
    "3969": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3971": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3972": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "3973": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "3975": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "ADD",
      "path": "0"
    },
    "3976": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3977": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "POP",
      "path": "0"
    },
    "3978": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "POP",
      "path": "0"
    },
    "3979": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3981": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3982": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3983": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3984": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "SUB",
      "path": "0"
    },
    "3985": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3986": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3987": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28133,
        28240
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3988": {
      "op": "POP"
    },
    "3989": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28261,
        28265
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 46,
      "value": "0x1"
    },
    "3991": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28254,
        28265
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70F"
    },
    "3994": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28254,
        28265
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3995": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28083,
        28276
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3996": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28318,
        28328
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3997": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28286,
        28301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3999": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28304,
        28329
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4000": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28304,
        28329
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4001": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28304,
        28329
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4002": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28304,
        28317
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "4004": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28304,
        28329
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4006": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28304,
        28329
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4007": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28304,
        28329
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4009": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28304,
        28329
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4010": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28304,
        28329
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4011": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28304,
        28329
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4012": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28364,
        28370
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 47,
      "value": "0x7"
    },
    "4014": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28364,
        28377
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4017": {
      "op": "NOT"
    },
    "4018": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28304,
        28333
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4019": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28304,
        28333
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4020": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28304,
        28333
      ],
      "op": "ADD",
      "path": "0"
    },
    "4021": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28304,
        28333
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4022": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28351,
        28377
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4023": {
      "branch": 95,
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28351,
        28377
      ],
      "op": "LT",
      "path": "0"
    },
    "4024": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFF2"
    },
    "4027": {
      "branch": 95,
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4028": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4030": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4031": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4037": {
      "op": "SHL"
    },
    "4038": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4039": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4040": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4042": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "ADD",
      "path": "0"
    },
    "4043": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4044": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4045": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4047": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "ADD",
      "path": "0"
    },
    "4048": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4049": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4050": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "SUB",
      "path": "0"
    },
    "4051": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4052": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4053": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2E"
    },
    "4055": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4056": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4057": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4059": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "ADD",
      "path": "0"
    },
    "4060": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4061": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16D7"
    },
    "4064": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2E"
    },
    "4066": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4067": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "4068": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4070": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "ADD",
      "path": "0"
    },
    "4071": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4072": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "POP",
      "path": "0"
    },
    "4073": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "POP",
      "path": "0"
    },
    "4074": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4076": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4077": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4078": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4079": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "SUB",
      "path": "0"
    },
    "4080": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4081": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4082": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28343,
        28428
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4083": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28438,
        28455
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4085": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28485,
        28493
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4086": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28485,
        28493
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "4087": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4089": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4090": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4092": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "ADD",
      "path": "0"
    },
    "4093": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4094": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4095": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4096": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4097": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4098": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4099": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "4100": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4101": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4102": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "ADD",
      "path": "0"
    },
    "4103": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4104": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "POP",
      "path": "0"
    },
    "4105": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "POP",
      "path": "0"
    },
    "4106": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "POP",
      "path": "0"
    },
    "4107": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4108": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "POP",
      "path": "0"
    },
    "4109": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "POP",
      "path": "0"
    },
    "4110": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "POP",
      "path": "0"
    },
    "4111": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4113": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4114": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4116": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4117": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4118": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "SUB",
      "path": "0"
    },
    "4119": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "SUB",
      "path": "0"
    },
    "4120": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4121": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4122": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4123": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4125": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28468,
        28494
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4126": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28458,
        28495
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4127": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28458,
        28495
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4128": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28458,
        28495
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4129": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28458,
        28495
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4131": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28458,
        28495
      ],
      "op": "ADD",
      "path": "0"
    },
    "4132": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28458,
        28495
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4133": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28438,
        28495
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4134": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28438,
        28495
      ],
      "op": "POP",
      "path": "0"
    },
    "4135": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28555,
        28565
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 48
    },
    "4136": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28550,
        28551
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4138": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28550,
        28565
      ],
      "op": "EXP",
      "path": "0"
    },
    "4139": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28515,
        28535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "4141": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28515,
        28546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4143": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28536,
        28545
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4144": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28515,
        28546
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4145": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28515,
        28546
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4146": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28515,
        28546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4148": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28515,
        28546
      ],
      "op": "ADD",
      "path": "0"
    },
    "4149": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28515,
        28546
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4150": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28515,
        28546
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4151": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28515,
        28546
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4152": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28515,
        28546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4154": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28515,
        28546
      ],
      "op": "ADD",
      "path": "0"
    },
    "4155": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28515,
        28546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4157": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28515,
        28546
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4158": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28515,
        28546
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4159": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28515,
        28566
      ],
      "op": "AND",
      "path": "0"
    },
    "4160": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28571,
        28572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4162": {
      "branch": 96,
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28514,
        28572
      ],
      "op": "EQ",
      "path": "0"
    },
    "4163": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x107D"
    },
    "4166": {
      "branch": 96,
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4167": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4169": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4170": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4176": {
      "op": "SHL"
    },
    "4177": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4178": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4179": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4181": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "ADD",
      "path": "0"
    },
    "4182": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4183": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4184": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4186": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "ADD",
      "path": "0"
    },
    "4187": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4188": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4189": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "SUB",
      "path": "0"
    },
    "4190": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4191": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4192": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x39"
    },
    "4194": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4195": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4196": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4198": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "ADD",
      "path": "0"
    },
    "4199": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4200": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17C7"
    },
    "4203": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x39"
    },
    "4205": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4206": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "4207": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4209": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "ADD",
      "path": "0"
    },
    "4210": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4211": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "POP",
      "path": "0"
    },
    "4212": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "POP",
      "path": "0"
    },
    "4213": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4215": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4216": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4217": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4218": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "SUB",
      "path": "0"
    },
    "4219": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4220": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4221": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28506,
        28634
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4222": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28644,
        28675
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 49,
      "value": "0x0"
    },
    "4224": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28644,
        28675
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4225": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28644,
        28675
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4226": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28644,
        28675
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4227": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28644,
        28664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "4229": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28644,
        28675
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4231": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28644,
        28675
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4232": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28644,
        28675
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4233": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28644,
        28675
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4234": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28644,
        28675
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4236": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28644,
        28675
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4237": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28644,
        28675
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4238": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28644,
        28675
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4239": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28644,
        28696
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4240": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28644,
        28696
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4241": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28680,
        28681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4243": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28680,
        28695
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4244": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28680,
        28695
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4245": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28680,
        28695
      ],
      "op": "EXP",
      "path": "0"
    },
    "4246": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28644,
        28696
      ],
      "op": "OR",
      "path": "0"
    },
    "4247": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28644,
        28696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4248": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28644,
        28696
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4249": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28733,
        28754
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "4251": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28733,
        28765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4252": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28733,
        28765
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4253": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28733,
        28765
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4254": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28733,
        28765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4255": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28733,
        28765
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4256": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28733,
        28765
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4257": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28733,
        28765
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4260": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28733,
        28769
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4261": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28733,
        28769
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4262": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28733,
        28769
      ],
      "op": "ADD",
      "path": "0"
    },
    "4263": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28779,
        28833
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 50
    },
    "4264": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28779,
        28833
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4265": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28779,
        28833
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4266": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28779,
        28833
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4267": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28847,
        28871
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4268": {
      "branch": 97,
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28847,
        28871
      ],
      "op": "EQ",
      "path": "0"
    },
    "4269": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28843,
        29078
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4270": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28843,
        29078
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x113F"
    },
    "4273": {
      "branch": 97,
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28843,
        29078
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4274": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28922,
        28935
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 51,
      "value": "0x8"
    },
    "4276": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28922,
        28942
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4277": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28922,
        28942
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4278": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28887,
        28919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4280": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28887,
        28919
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4281": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28887,
        28919
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4282": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28887,
        28919
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4283": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28887,
        28908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "4285": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28887,
        28919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4287": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28887,
        28919
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4288": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28887,
        28919
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4289": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28887,
        28919
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4290": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28887,
        28919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4292": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28887,
        28919
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4293": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28887,
        28919
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4294": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28887,
        28919
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4295": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28887,
        28942
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4296": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28887,
        28942
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4297": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28887,
        28942
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4298": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28956,
        28985
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 52,
      "value": "0x1"
    },
    "4300": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28956,
        28985
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4301": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28956,
        28985
      ],
      "op": "ADD",
      "path": "0"
    },
    "4302": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28956,
        28985
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4303": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28956,
        28985
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4304": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28956,
        28985
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4305": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28956,
        28985
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4306": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28956,
        28985
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4307": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28956,
        28985
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4308": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28956,
        28985
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "4341": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28956,
        28985
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4342": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28956,
        28985
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4343": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28956,
        28985
      ],
      "op": "ADD",
      "path": "0"
    },
    "4344": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28956,
        28985
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4345": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28956,
        28985
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4346": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28956,
        28985
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4347": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29041,
        29047
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 53,
      "value": "0x7"
    },
    "4349": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29041,
        29054
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4350": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4351": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4352": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4353": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4354": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4355": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4356": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4357": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "ADD",
      "path": "0"
    },
    "4358": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4359": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4360": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4361": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4362": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4363": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "ADD",
      "path": "0"
    },
    "4364": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4365": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29056,
        29066
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4366": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "4368": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4369": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "ADD",
      "path": "0"
    },
    "4370": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4371": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4372": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4373": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x6BAB0114F9524353D2D33E64EDD3EBBD16E21EDD57DE2226BA76C310A7CE2265"
    },
    "4406": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4407": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4408": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4409": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "SUB",
      "path": "0"
    },
    "4410": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "4412": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "ADD",
      "path": "0"
    },
    "4413": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4414": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29004,
        29067
      ],
      "op": "LOG1",
      "path": "0"
    },
    "4415": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28843,
        29078
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4416": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29150,
        29156
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 54,
      "value": "0x7"
    },
    "4418": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29150,
        29163
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4419": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4421": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4422": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4423": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4424": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4425": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4426": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4428": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4429": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "ADD",
      "path": "0"
    },
    "4430": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4431": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4432": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4433": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4434": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4435": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "ADD",
      "path": "0"
    },
    "4436": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4437": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4438": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4439": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "4441": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4442": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "ADD",
      "path": "0"
    },
    "4443": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4444": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4445": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4446": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4447": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29165,
        29175
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4448": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "4450": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4451": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "ADD",
      "path": "0"
    },
    "4452": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4453": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4454": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8DD9582C6577AEA81973B5ADEB6C135F6E18565D99578B7BA0C9377437EC0221"
    },
    "4487": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4488": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4489": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4490": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "SUB",
      "path": "0"
    },
    "4491": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "4493": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "ADD",
      "path": "0"
    },
    "4494": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4495": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29092,
        29176
      ],
      "op": "LOG1",
      "path": "0"
    },
    "4496": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29248,
        29280
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4498": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29248,
        29280
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4499": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29248,
        29280
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4500": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29248,
        29280
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4501": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29248,
        29269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "4503": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29248,
        29280
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4505": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29248,
        29280
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4506": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29248,
        29280
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4508": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29248,
        29280
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4509": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29248,
        29280
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4510": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29248,
        29280
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4511": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29248,
        29291
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4512": {
      "branch": 98,
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29248,
        29291
      ],
      "op": "EQ",
      "path": "0"
    },
    "4513": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29244,
        29453
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4514": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29244,
        29453
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1203"
    },
    "4517": {
      "branch": 98,
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29244,
        29453
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4518": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29307,
        29333
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 55,
      "value": "0x11AE"
    },
    "4521": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29323,
        29332
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4522": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29307,
        29322
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13F4"
    },
    "4525": {
      "fn": "Multiownable.checkHowManyOwners",
      "jump": "i",
      "offset": [
        29307,
        29333
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4526": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29307,
        29333
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4527": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29391,
        29397
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 56,
      "value": "0x7"
    },
    "4529": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29391,
        29404
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4530": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4532": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4533": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4534": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4535": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4536": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4537": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4539": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4540": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "ADD",
      "path": "0"
    },
    "4541": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4542": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4543": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4544": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4545": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4546": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "ADD",
      "path": "0"
    },
    "4547": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4548": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4549": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4550": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4551": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29406,
        29416
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4552": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "4554": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4555": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "ADD",
      "path": "0"
    },
    "4556": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4557": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4558": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8A11C8CA99994C292318CE367F65BF6FF61D390BC814B3588496F6FBCC32807A"
    },
    "4591": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4592": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4593": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4594": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "SUB",
      "path": "0"
    },
    "4595": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "4597": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "ADD",
      "path": "0"
    },
    "4598": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4599": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29352,
        29417
      ],
      "op": "LOG1",
      "path": "0"
    },
    "4600": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29438,
        29442
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 57,
      "value": "0x1"
    },
    "4602": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29431,
        29442
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4603": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29431,
        29442
      ],
      "op": "POP",
      "path": "0"
    },
    "4604": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29431,
        29442
      ],
      "op": "POP",
      "path": "0"
    },
    "4605": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29431,
        29442
      ],
      "op": "POP",
      "path": "0"
    },
    "4606": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29431,
        29442
      ],
      "op": "POP",
      "path": "0"
    },
    "4607": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29431,
        29442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70F"
    },
    "4610": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29431,
        29442
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4611": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29244,
        29453
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4612": {
      "op": "POP"
    },
    "4613": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29470,
        29475
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 58,
      "value": "0x0"
    },
    "4615": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        29470,
        29475
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "4616": {
      "fn": "Multiownable.checkHowManyOwners",
      "offset": [
        28008,
        29482
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4617": {
      "op": "POP"
    },
    "4618": {
      "op": "POP"
    },
    "4619": {
      "op": "POP"
    },
    "4620": {
      "op": "POP"
    },
    "4621": {
      "fn": "Multiownable.checkHowManyOwners",
      "jump": "o",
      "offset": [
        28008,
        29482
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4622": {
      "fn": "ERC20._mint",
      "offset": [
        22743,
        23113
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4627": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4629": {
      "op": "SHL"
    },
    "4630": {
      "op": "SUB"
    },
    "4631": {
      "fn": "ERC20._mint",
      "offset": [
        22826,
        22847
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 59
    },
    "4632": {
      "branch": 99,
      "fn": "ERC20._mint",
      "offset": [
        22826,
        22847
      ],
      "op": "AND",
      "path": "0"
    },
    "4633": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1269"
    },
    "4636": {
      "branch": 99,
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4637": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4639": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4640": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4641": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4645": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4647": {
      "op": "SHL"
    },
    "4648": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4649": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4650": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4652": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4654": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4655": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "ADD",
      "path": "0"
    },
    "4656": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4657": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4659": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "4661": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4662": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "ADD",
      "path": "0"
    },
    "4663": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4664": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "4697": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "4699": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4700": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "ADD",
      "path": "0"
    },
    "4701": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4702": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4703": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4704": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4705": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4706": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4707": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "SUB",
      "path": "0"
    },
    "4708": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "4710": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "ADD",
      "path": "0"
    },
    "4711": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4712": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4713": {
      "fn": "ERC20._mint",
      "offset": [
        22818,
        22883
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4714": {
      "fn": "ERC20._mint",
      "offset": [
        22894,
        22943
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 60,
      "value": "0x1275"
    },
    "4717": {
      "fn": "ERC20._mint",
      "offset": [
        22923,
        22924
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4719": {
      "fn": "ERC20._mint",
      "offset": [
        22927,
        22934
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4720": {
      "fn": "ERC20._mint",
      "offset": [
        22936,
        22942
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4721": {
      "fn": "ERC20._mint",
      "offset": [
        22894,
        22914
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88C"
    },
    "4724": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        22894,
        22943
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4725": {
      "fn": "ERC20._mint",
      "offset": [
        22894,
        22943
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4726": {
      "fn": "ERC20._mint",
      "offset": [
        22969,
        22981
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 61,
      "value": "0x2"
    },
    "4728": {
      "fn": "ERC20._mint",
      "offset": [
        22969,
        22981
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4729": {
      "fn": "ERC20._mint",
      "offset": [
        22969,
        22993
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1282"
    },
    "4732": {
      "fn": "ERC20._mint",
      "offset": [
        22969,
        22993
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4733": {
      "fn": "ERC20._mint",
      "offset": [
        22986,
        22992
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4734": {
      "fn": "ERC20._mint",
      "offset": [
        22969,
        22985
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF9"
    },
    "4737": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        22969,
        22993
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4738": {
      "fn": "ERC20._mint",
      "offset": [
        22969,
        22993
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4739": {
      "fn": "ERC20._mint",
      "offset": [
        22954,
        22966
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4741": {
      "fn": "ERC20._mint",
      "offset": [
        22954,
        22993
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4748": {
      "op": "SHL"
    },
    "4749": {
      "op": "SUB"
    },
    "4750": {
      "fn": "ERC20._mint",
      "offset": [
        23024,
        23042
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 62
    },
    "4751": {
      "fn": "ERC20._mint",
      "offset": [
        23024,
        23042
      ],
      "op": "AND",
      "path": "0"
    },
    "4752": {
      "fn": "ERC20._mint",
      "offset": [
        23024,
        23033
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4754": {
      "fn": "ERC20._mint",
      "offset": [
        23024,
        23042
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4755": {
      "fn": "ERC20._mint",
      "offset": [
        23024,
        23042
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4756": {
      "fn": "ERC20._mint",
      "offset": [
        23024,
        23042
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4757": {
      "fn": "ERC20._mint",
      "offset": [
        23024,
        23042
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4759": {
      "fn": "ERC20._mint",
      "offset": [
        23024,
        23042
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4760": {
      "fn": "ERC20._mint",
      "offset": [
        23024,
        23042
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4761": {
      "fn": "ERC20._mint",
      "offset": [
        23024,
        23042
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4762": {
      "fn": "ERC20._mint",
      "offset": [
        23024,
        23042
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4764": {
      "fn": "ERC20._mint",
      "offset": [
        23024,
        23042
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4765": {
      "fn": "ERC20._mint",
      "offset": [
        23024,
        23042
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4766": {
      "fn": "ERC20._mint",
      "offset": [
        23024,
        23042
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4767": {
      "fn": "ERC20._mint",
      "offset": [
        23024,
        23054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12A8"
    },
    "4770": {
      "fn": "ERC20._mint",
      "offset": [
        23024,
        23054
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4771": {
      "fn": "ERC20._mint",
      "offset": [
        23047,
        23053
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4772": {
      "fn": "ERC20._mint",
      "offset": [
        23024,
        23046
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF9"
    },
    "4775": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        23024,
        23054
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4776": {
      "fn": "ERC20._mint",
      "offset": [
        23024,
        23054
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4781": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4783": {
      "op": "SHL"
    },
    "4784": {
      "op": "SUB"
    },
    "4785": {
      "fn": "ERC20._mint",
      "offset": [
        23003,
        23021
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4786": {
      "fn": "ERC20._mint",
      "offset": [
        23003,
        23021
      ],
      "op": "AND",
      "path": "0"
    },
    "4787": {
      "fn": "ERC20._mint",
      "offset": [
        23003,
        23012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4789": {
      "fn": "ERC20._mint",
      "offset": [
        23003,
        23021
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4790": {
      "fn": "ERC20._mint",
      "offset": [
        23003,
        23021
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4791": {
      "fn": "ERC20._mint",
      "offset": [
        23003,
        23021
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4792": {
      "fn": "ERC20._mint",
      "offset": [
        23003,
        23021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4794": {
      "fn": "ERC20._mint",
      "offset": [
        23003,
        23021
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4795": {
      "fn": "ERC20._mint",
      "offset": [
        23003,
        23021
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4796": {
      "fn": "ERC20._mint",
      "offset": [
        23003,
        23021
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4797": {
      "fn": "ERC20._mint",
      "offset": [
        23003,
        23021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4799": {
      "fn": "ERC20._mint",
      "offset": [
        23003,
        23021
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4800": {
      "fn": "ERC20._mint",
      "offset": [
        23003,
        23021
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4801": {
      "fn": "ERC20._mint",
      "offset": [
        23003,
        23021
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4802": {
      "fn": "ERC20._mint",
      "offset": [
        23003,
        23054
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "4803": {
      "fn": "ERC20._mint",
      "offset": [
        23003,
        23054
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4804": {
      "fn": "ERC20._mint",
      "offset": [
        23003,
        23054
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "4805": {
      "fn": "ERC20._mint",
      "offset": [
        23003,
        23054
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4806": {
      "fn": "ERC20._mint",
      "offset": [
        23069,
        23106
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 63
    },
    "4807": {
      "fn": "ERC20._mint",
      "offset": [
        23069,
        23106
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4808": {
      "fn": "ERC20._mint",
      "offset": [
        23069,
        23106
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4809": {
      "fn": "ERC20._mint",
      "offset": [
        23069,
        23106
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4810": {
      "fn": "ERC20._mint",
      "offset": [
        23069,
        23106
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4811": {
      "fn": "ERC20._mint",
      "offset": [
        23069,
        23106
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4812": {
      "fn": "ERC20._mint",
      "offset": [
        23069,
        23106
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4813": {
      "fn": "ERC20._mint",
      "offset": [
        23003,
        23021
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4814": {
      "fn": "ERC20._mint",
      "offset": [
        23003,
        23021
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4815": {
      "fn": "ERC20._mint",
      "offset": [
        23003,
        23012
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4816": {
      "fn": "ERC20._mint",
      "offset": [
        23003,
        23012
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4817": {
      "fn": "ERC20._mint",
      "offset": [
        23069,
        23106
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "4850": {
      "fn": "ERC20._mint",
      "offset": [
        23069,
        23106
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4851": {
      "fn": "ERC20._mint",
      "offset": [
        23069,
        23106
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4852": {
      "fn": "ERC20._mint",
      "offset": [
        23069,
        23106
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4853": {
      "fn": "ERC20._mint",
      "offset": [
        23069,
        23106
      ],
      "op": "SUB",
      "path": "0"
    },
    "4854": {
      "fn": "ERC20._mint",
      "offset": [
        23069,
        23106
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4855": {
      "fn": "ERC20._mint",
      "offset": [
        23069,
        23106
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4856": {
      "fn": "ERC20._mint",
      "offset": [
        23069,
        23106
      ],
      "op": "ADD",
      "path": "0"
    },
    "4857": {
      "fn": "ERC20._mint",
      "offset": [
        23069,
        23106
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4858": {
      "fn": "ERC20._mint",
      "offset": [
        23069,
        23106
      ],
      "op": "LOG3",
      "path": "0"
    },
    "4859": {
      "fn": "ERC20._mint",
      "offset": [
        22743,
        23113
      ],
      "op": "POP",
      "path": "0"
    },
    "4860": {
      "fn": "ERC20._mint",
      "offset": [
        22743,
        23113
      ],
      "op": "POP",
      "path": "0"
    },
    "4861": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        22743,
        23113
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4862": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        30849,
        31327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4867": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4869": {
      "op": "SHL"
    },
    "4870": {
      "op": "SUB"
    },
    "4871": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        30942,
        30965
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 64
    },
    "4872": {
      "branch": 100,
      "fn": "Multiownable._transferOwnership",
      "offset": [
        30942,
        30965
      ],
      "op": "AND",
      "path": "0"
    },
    "4873": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        30934,
        30966
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1311"
    },
    "4876": {
      "branch": 100,
      "fn": "Multiownable._transferOwnership",
      "offset": [
        30934,
        30966
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4877": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        30934,
        30966
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4879": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        30934,
        30966
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4880": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        30934,
        30966
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4881": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        30934,
        30966
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4882": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        30981,
        30990
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4884": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        30977,
        31264
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4885": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31000,
        31006
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "4887": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31000,
        31013
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4888": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        30996,
        31013
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4889": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        30996,
        31013
      ],
      "op": "LT",
      "path": "0"
    },
    "4890": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        30977,
        31264
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4891": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        30977,
        31264
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13AF"
    },
    "4894": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        30977,
        31264
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4895": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31051,
        31057
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "4897": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31058,
        31059
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4898": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31051,
        31060
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4899": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31051,
        31060
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4900": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31051,
        31060
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4901": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31051,
        31060
      ],
      "op": "LT",
      "path": "0"
    },
    "4902": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31051,
        31060
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x132B"
    },
    "4905": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31051,
        31060
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4906": {
      "dev": "Index out of range",
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31051,
        31060
      ],
      "op": "INVALID",
      "path": "0"
    },
    "4907": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31051,
        31060
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4908": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31051,
        31060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4910": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31051,
        31060
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4911": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31051,
        31060
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4912": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31051,
        31060
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4913": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31051,
        31060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4915": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31051,
        31060
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4916": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31051,
        31060
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4917": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31051,
        31060
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4918": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31051,
        31060
      ],
      "op": "ADD",
      "path": "0"
    },
    "4919": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31051,
        31060
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4926": {
      "op": "SHL"
    },
    "4927": {
      "op": "SUB"
    },
    "4928": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31038,
        31060
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4929": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31038,
        31060
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4930": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31038,
        31060
      ],
      "op": "AND",
      "path": "0"
    },
    "4931": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31051,
        31060
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4932": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31051,
        31060
      ],
      "op": "AND",
      "path": "0"
    },
    "4933": {
      "branch": 101,
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31038,
        31060
      ],
      "op": "EQ",
      "path": "0"
    },
    "4934": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31034,
        31254
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4935": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31034,
        31254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A7"
    },
    "4938": {
      "branch": 101,
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31034,
        31254
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4939": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31092,
        31101
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 65
    },
    "4940": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31086
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "4942": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31087,
        31088
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4943": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31089
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4944": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31089
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4945": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31089
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4946": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31089
      ],
      "op": "LT",
      "path": "0"
    },
    "4947": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31089
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1358"
    },
    "4950": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31089
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4951": {
      "dev": "Index out of range",
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31089
      ],
      "op": "INVALID",
      "path": "0"
    },
    "4952": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31089
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4953": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4955": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31089
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4956": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31089
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4957": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31089
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4958": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4960": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4961": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31089
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4962": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31089
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4963": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31089
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4964": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31089
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4965": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31089
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4966": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31089
      ],
      "op": "ADD",
      "path": "0"
    },
    "4967": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4968": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31101
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4975": {
      "op": "SHL"
    },
    "4976": {
      "op": "SUB"
    },
    "4977": {
      "op": "NOT"
    },
    "4978": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31101
      ],
      "op": "AND",
      "path": "0"
    },
    "4979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4985": {
      "op": "SHL"
    },
    "4986": {
      "op": "SUB"
    },
    "4987": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31101
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "4988": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31101
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4989": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31101
      ],
      "op": "AND",
      "path": "0"
    },
    "4990": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31101
      ],
      "op": "OR",
      "path": "0"
    },
    "4991": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31101
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4992": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31080,
        31101
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4993": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31146,
        31170
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 66
    },
    "4994": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31146,
        31170
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4995": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31146,
        31170
      ],
      "op": "AND",
      "path": "0"
    },
    "4996": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31146,
        31170
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4997": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31146,
        31170
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4998": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31146,
        31170
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4999": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31146,
        31159
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "5001": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31146,
        31170
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5002": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31146,
        31170
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5003": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31146,
        31170
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5004": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31146,
        31170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5006": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31146,
        31170
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5007": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31146,
        31170
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5008": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31146,
        31170
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5009": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31146,
        31170
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5010": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31146,
        31170
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5011": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31119,
        31143
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "5012": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31119,
        31143
      ],
      "op": "DUP9",
      "path": "0"
    },
    "5013": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31119,
        31143
      ],
      "op": "AND",
      "path": "0"
    },
    "5014": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31119,
        31143
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5015": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31119,
        31143
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5016": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31119,
        31143
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5017": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31119,
        31143
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5018": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31119,
        31143
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5019": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31119,
        31170
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5020": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31119,
        31170
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5021": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31119,
        31170
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5022": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31119,
        31170
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5023": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31188,
        31212
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 67
    },
    "5024": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31188,
        31212
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5025": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31188,
        31216
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5026": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31188,
        31216
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5027": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31234,
        31239
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 68,
      "value": "0x13AF"
    },
    "5030": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31234,
        31239
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5031": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31034,
        31254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5032": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31015,
        31018
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 69,
      "value": "0x1"
    },
    "5034": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31015,
        31018
      ],
      "op": "ADD",
      "path": "0"
    },
    "5035": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        30977,
        31264
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1314"
    },
    "5038": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        30977,
        31264
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5039": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        30977,
        31264
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5040": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        30977,
        31264
      ],
      "op": "POP",
      "path": "0"
    },
    "5041": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31310,
        31319
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 70
    },
    "5042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5048": {
      "op": "SHL"
    },
    "5049": {
      "op": "SUB"
    },
    "5050": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31278,
        31320
      ],
      "op": "AND",
      "path": "0"
    },
    "5051": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31299,
        31308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5056": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5058": {
      "op": "SHL"
    },
    "5059": {
      "op": "SUB"
    },
    "5060": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31278,
        31320
      ],
      "op": "AND",
      "path": "0"
    },
    "5061": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31278,
        31320
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "5094": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31278,
        31320
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5096": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31278,
        31320
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5097": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31278,
        31320
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5099": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31278,
        31320
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5100": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31278,
        31320
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5101": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31278,
        31320
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5102": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31278,
        31320
      ],
      "op": "SUB",
      "path": "0"
    },
    "5103": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31278,
        31320
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5104": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        31278,
        31320
      ],
      "op": "LOG3",
      "path": "0"
    },
    "5105": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        30849,
        31327
      ],
      "op": "POP",
      "path": "0"
    },
    "5106": {
      "fn": "Multiownable._transferOwnership",
      "offset": [
        30849,
        31327
      ],
      "op": "POP",
      "path": "0"
    },
    "5107": {
      "fn": "Multiownable._transferOwnership",
      "jump": "o",
      "offset": [
        30849,
        31327
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5108": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29488,
        29990
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5109": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29551,
        29561
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5111": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29564,
        29596
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5112": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29564,
        29596
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5113": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29564,
        29596
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5114": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29564,
        29585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "5116": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29564,
        29596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5118": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29564,
        29596
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5119": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29564,
        29596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5121": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29564,
        29596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5122": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29564,
        29596
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5123": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29564,
        29596
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5124": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29618,
        29631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "5126": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29618,
        29638
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5129": {
      "op": "NOT"
    },
    "5130": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29618,
        29642
      ],
      "op": "ADD",
      "path": "0"
    },
    "5131": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29610,
        29642
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5132": {
      "branch": 102,
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29610,
        29642
      ],
      "op": "LT",
      "path": "0"
    },
    "5133": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29606,
        29808
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5134": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29606,
        29808
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1479"
    },
    "5137": {
      "branch": 102,
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29606,
        29808
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5138": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29693,
        29706
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 71,
      "value": "0x8"
    },
    "5140": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29707,
        29727
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5141": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29707,
        29727
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5144": {
      "op": "NOT"
    },
    "5145": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29707,
        29731
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5146": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29707,
        29731
      ],
      "op": "ADD",
      "path": "0"
    },
    "5147": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29707,
        29731
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5148": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29693,
        29732
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5149": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29693,
        29732
      ],
      "op": "LT",
      "path": "0"
    },
    "5150": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29693,
        29732
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1423"
    },
    "5153": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29693,
        29732
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5154": {
      "dev": "Index out of range",
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29693,
        29732
      ],
      "op": "INVALID",
      "path": "0"
    },
    "5155": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29693,
        29732
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5156": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29693,
        29732
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5157": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29693,
        29732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5159": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29693,
        29732
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5160": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29693,
        29732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5162": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29693,
        29732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5164": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29693,
        29732
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5165": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29693,
        29732
      ],
      "op": "ADD",
      "path": "0"
    },
    "5166": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29693,
        29732
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5167": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29670,
        29683
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "5169": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29684,
        29689
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5170": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29670,
        29690
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5171": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29670,
        29690
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5172": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29670,
        29690
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5173": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29670,
        29690
      ],
      "op": "LT",
      "path": "0"
    },
    "5174": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29670,
        29690
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143B"
    },
    "5177": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29670,
        29690
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5178": {
      "dev": "Index out of range",
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29670,
        29690
      ],
      "op": "INVALID",
      "path": "0"
    },
    "5179": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29670,
        29690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5180": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29670,
        29690
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5181": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29670,
        29690
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5183": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29670,
        29690
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5184": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29670,
        29690
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5186": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29670,
        29690
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5188": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29670,
        29690
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5189": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29670,
        29690
      ],
      "op": "ADD",
      "path": "0"
    },
    "5190": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29670,
        29732
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5191": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29670,
        29732
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5192": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29670,
        29732
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5193": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29670,
        29732
      ],
      "op": "POP",
      "path": "0"
    },
    "5194": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29792,
        29797
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 72
    },
    "5195": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29746,
        29767
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "5197": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29746,
        29789
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5199": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29768,
        29781
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "5201": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29782,
        29787
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5202": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29768,
        29788
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5203": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29768,
        29788
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5204": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29768,
        29788
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5205": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29768,
        29788
      ],
      "op": "LT",
      "path": "0"
    },
    "5206": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29768,
        29788
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x145B"
    },
    "5209": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29768,
        29788
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5210": {
      "dev": "Index out of range",
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29768,
        29788
      ],
      "op": "INVALID",
      "path": "0"
    },
    "5211": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29768,
        29788
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5212": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29768,
        29788
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5213": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29768,
        29788
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5215": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29768,
        29788
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5216": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29768,
        29788
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5218": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29768,
        29788
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5220": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29768,
        29788
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5221": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29768,
        29788
      ],
      "op": "ADD",
      "path": "0"
    },
    "5222": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29768,
        29788
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5223": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29746,
        29789
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5224": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29746,
        29789
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5225": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29746,
        29789
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5227": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29746,
        29789
      ],
      "op": "ADD",
      "path": "0"
    },
    "5228": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29746,
        29789
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5229": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29746,
        29789
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5230": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29746,
        29789
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5231": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29746,
        29789
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5233": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29746,
        29789
      ],
      "op": "ADD",
      "path": "0"
    },
    "5234": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29746,
        29789
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5236": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29746,
        29789
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5237": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29746,
        29797
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5238": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29746,
        29797
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5239": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29746,
        29797
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5240": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29746,
        29797
      ],
      "op": "POP",
      "path": "0"
    },
    "5241": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29606,
        29808
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5242": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29830
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 73,
      "value": "0x8"
    },
    "5244": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5245": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5246": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5247": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1484"
    },
    "5250": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5251": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "INVALID",
      "path": "0"
    },
    "5252": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5253": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5255": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5256": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5257": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5258": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5260": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5261": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5262": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5263": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5264": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "ADD",
      "path": "0"
    },
    "5265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5267": {
      "op": "NOT"
    },
    "5268": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5269": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5270": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "ADD",
      "path": "0"
    },
    "5271": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5272": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5273": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5274": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5275": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5276": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "ADD",
      "path": "0"
    },
    "5277": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5278": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5279": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29817,
        29836
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5280": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29854,
        29885
      ],
      "op": "SWAP3",
      "path": "0",
      "statement": 74
    },
    "5281": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29854,
        29885
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5282": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29854,
        29885
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5283": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29854,
        29874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "5285": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29854,
        29885
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5286": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29854,
        29885
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5287": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29854,
        29885
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5289": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29854,
        29885
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5290": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29854,
        29885
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5291": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29854,
        29885
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5292": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29847,
        29885
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5293": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29847,
        29885
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5294": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29847,
        29885
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5295": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29902,
        29923
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 75,
      "value": "0xE"
    },
    "5297": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29902,
        29934
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5298": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29902,
        29934
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5299": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29902,
        29934
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5300": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29902,
        29934
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5301": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29902,
        29934
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5302": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29895,
        29934
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5303": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29895,
        29934
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5304": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29895,
        29934
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5305": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29951,
        29972
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 76,
      "value": "0xC"
    },
    "5307": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29951,
        29983
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5308": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29951,
        29983
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5309": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29951,
        29983
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5310": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29951,
        29983
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5311": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29951,
        29983
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5312": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29951,
        29983
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5313": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29944,
        29983
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5314": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29944,
        29983
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5315": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29944,
        29983
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5316": {
      "fn": "Multiownable.deleteOperation",
      "offset": [
        29944,
        29983
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5317": {
      "op": "POP"
    },
    "5318": {
      "fn": "Multiownable.deleteOperation",
      "jump": "o",
      "offset": [
        29488,
        29990
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5319": {
      "fn": "ERC20._burn",
      "offset": [
        23432,
        23842
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5326": {
      "op": "SHL"
    },
    "5327": {
      "op": "SUB"
    },
    "5328": {
      "fn": "ERC20._burn",
      "offset": [
        23515,
        23536
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 77
    },
    "5329": {
      "branch": 103,
      "fn": "ERC20._burn",
      "offset": [
        23515,
        23536
      ],
      "op": "AND",
      "path": "0"
    },
    "5330": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x150C"
    },
    "5333": {
      "branch": 103,
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5334": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5336": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5337": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5341": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5343": {
      "op": "SHL"
    },
    "5344": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5345": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5346": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5348": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "ADD",
      "path": "0"
    },
    "5349": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5350": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5351": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5353": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "ADD",
      "path": "0"
    },
    "5354": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5355": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5356": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "SUB",
      "path": "0"
    },
    "5357": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5358": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5359": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x21"
    },
    "5361": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5362": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5363": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5365": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "ADD",
      "path": "0"
    },
    "5366": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5367": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x175D"
    },
    "5370": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x21"
    },
    "5372": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5373": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "5374": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5376": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "ADD",
      "path": "0"
    },
    "5377": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5378": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "POP",
      "path": "0"
    },
    "5379": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "POP",
      "path": "0"
    },
    "5380": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5382": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5383": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5384": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5385": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "SUB",
      "path": "0"
    },
    "5386": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5387": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5388": {
      "fn": "ERC20._burn",
      "offset": [
        23507,
        23574
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5389": {
      "fn": "ERC20._burn",
      "offset": [
        23585,
        23634
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 78,
      "value": "0x1518"
    },
    "5392": {
      "fn": "ERC20._burn",
      "offset": [
        23606,
        23613
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5393": {
      "fn": "ERC20._burn",
      "offset": [
        23623,
        23624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5395": {
      "fn": "ERC20._burn",
      "offset": [
        23627,
        23633
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5396": {
      "fn": "ERC20._burn",
      "offset": [
        23585,
        23605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88C"
    },
    "5399": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        23585,
        23634
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5400": {
      "fn": "ERC20._burn",
      "offset": [
        23585,
        23634
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5401": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23734
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 79,
      "value": "0x1555"
    },
    "5404": {
      "fn": "ERC20._burn",
      "offset": [
        23689,
        23695
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5405": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23734
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5407": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23734
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5408": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5409": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23734
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "5411": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23734
      ],
      "op": "ADD",
      "path": "0"
    },
    "5412": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23734
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5414": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23734
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5415": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5416": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23734
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x22"
    },
    "5418": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23734
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5419": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23734
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5420": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23734
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5422": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23734
      ],
      "op": "ADD",
      "path": "0"
    },
    "5423": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1629"
    },
    "5426": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23734
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x22"
    },
    "5428": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23734
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5429": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23734
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "5430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5436": {
      "op": "SHL"
    },
    "5437": {
      "op": "SUB"
    },
    "5438": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23684
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5439": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23684
      ],
      "op": "AND",
      "path": "0"
    },
    "5440": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23675
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5442": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23684
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5443": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23684
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5444": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23684
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5445": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5447": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23684
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5448": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23684
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5449": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23684
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5450": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5452": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23684
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5453": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23684
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5454": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23684
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5455": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23684
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5456": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23734
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5457": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23688
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA5"
    },
    "5460": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        23666,
        23734
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5461": {
      "fn": "ERC20._burn",
      "offset": [
        23666,
        23734
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5468": {
      "op": "SHL"
    },
    "5469": {
      "op": "SUB"
    },
    "5470": {
      "fn": "ERC20._burn",
      "offset": [
        23645,
        23663
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5471": {
      "fn": "ERC20._burn",
      "offset": [
        23645,
        23663
      ],
      "op": "AND",
      "path": "0"
    },
    "5472": {
      "fn": "ERC20._burn",
      "offset": [
        23645,
        23654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5474": {
      "fn": "ERC20._burn",
      "offset": [
        23645,
        23663
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5475": {
      "fn": "ERC20._burn",
      "offset": [
        23645,
        23663
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5476": {
      "fn": "ERC20._burn",
      "offset": [
        23645,
        23663
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5477": {
      "fn": "ERC20._burn",
      "offset": [
        23645,
        23663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5479": {
      "fn": "ERC20._burn",
      "offset": [
        23645,
        23663
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5480": {
      "fn": "ERC20._burn",
      "offset": [
        23645,
        23663
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5481": {
      "fn": "ERC20._burn",
      "offset": [
        23645,
        23663
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5482": {
      "fn": "ERC20._burn",
      "offset": [
        23645,
        23663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5484": {
      "fn": "ERC20._burn",
      "offset": [
        23645,
        23663
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5485": {
      "fn": "ERC20._burn",
      "offset": [
        23645,
        23663
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5486": {
      "fn": "ERC20._burn",
      "offset": [
        23645,
        23734
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5487": {
      "fn": "ERC20._burn",
      "offset": [
        23759,
        23771
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 80,
      "value": "0x2"
    },
    "5489": {
      "fn": "ERC20._burn",
      "offset": [
        23759,
        23771
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5490": {
      "fn": "ERC20._burn",
      "offset": [
        23759,
        23783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x157B"
    },
    "5493": {
      "fn": "ERC20._burn",
      "offset": [
        23759,
        23783
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5494": {
      "fn": "ERC20._burn",
      "offset": [
        23776,
        23782
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5495": {
      "fn": "ERC20._burn",
      "offset": [
        23759,
        23775
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15C3"
    },
    "5498": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        23759,
        23783
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5499": {
      "fn": "ERC20._burn",
      "offset": [
        23759,
        23783
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5500": {
      "fn": "ERC20._burn",
      "offset": [
        23744,
        23756
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5502": {
      "fn": "ERC20._burn",
      "offset": [
        23744,
        23783
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5503": {
      "fn": "ERC20._burn",
      "offset": [
        23798,
        23835
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 81,
      "value": "0x40"
    },
    "5505": {
      "fn": "ERC20._burn",
      "offset": [
        23798,
        23835
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5506": {
      "fn": "ERC20._burn",
      "offset": [
        23798,
        23835
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5507": {
      "fn": "ERC20._burn",
      "offset": [
        23798,
        23835
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5508": {
      "fn": "ERC20._burn",
      "offset": [
        23798,
        23835
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5509": {
      "fn": "ERC20._burn",
      "offset": [
        23798,
        23835
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5510": {
      "fn": "ERC20._burn",
      "offset": [
        23798,
        23835
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5511": {
      "fn": "ERC20._burn",
      "offset": [
        23798,
        23835
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5512": {
      "fn": "ERC20._burn",
      "offset": [
        23824,
        23825
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5514": {
      "fn": "ERC20._burn",
      "offset": [
        23824,
        23825
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5519": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5521": {
      "op": "SHL"
    },
    "5522": {
      "op": "SUB"
    },
    "5523": {
      "fn": "ERC20._burn",
      "offset": [
        23798,
        23835
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5524": {
      "fn": "ERC20._burn",
      "offset": [
        23798,
        23835
      ],
      "op": "AND",
      "path": "0"
    },
    "5525": {
      "fn": "ERC20._burn",
      "offset": [
        23798,
        23835
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5526": {
      "fn": "ERC20._burn",
      "offset": [
        23798,
        23835
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "5559": {
      "fn": "ERC20._burn",
      "offset": [
        23798,
        23835
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5560": {
      "fn": "ERC20._burn",
      "offset": [
        23798,
        23835
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5561": {
      "fn": "ERC20._burn",
      "offset": [
        23798,
        23835
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5562": {
      "fn": "ERC20._burn",
      "offset": [
        23798,
        23835
      ],
      "op": "SUB",
      "path": "0"
    },
    "5563": {
      "fn": "ERC20._burn",
      "offset": [
        23798,
        23835
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5565": {
      "fn": "ERC20._burn",
      "offset": [
        23798,
        23835
      ],
      "op": "ADD",
      "path": "0"
    },
    "5566": {
      "fn": "ERC20._burn",
      "offset": [
        23798,
        23835
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5567": {
      "fn": "ERC20._burn",
      "offset": [
        23798,
        23835
      ],
      "op": "LOG3",
      "path": "0"
    },
    "5568": {
      "fn": "ERC20._burn",
      "offset": [
        23432,
        23842
      ],
      "op": "POP",
      "path": "0"
    },
    "5569": {
      "fn": "ERC20._burn",
      "offset": [
        23432,
        23842
      ],
      "op": "POP",
      "path": "0"
    },
    "5570": {
      "fn": "ERC20._burn",
      "jump": "o",
      "offset": [
        23432,
        23842
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5571": {
      "fn": "SafeMath.sub",
      "offset": [
        5032,
        5166
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5572": {
      "fn": "SafeMath.sub",
      "offset": [
        5090,
        5097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5574": {
      "fn": "SafeMath.sub",
      "offset": [
        5116,
        5159
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 82,
      "value": "0xC53"
    },
    "5577": {
      "fn": "SafeMath.sub",
      "offset": [
        5120,
        5121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5578": {
      "fn": "SafeMath.sub",
      "offset": [
        5123,
        5124
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5579": {
      "fn": "SafeMath.sub",
      "offset": [
        5116,
        5159
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5581": {
      "fn": "SafeMath.sub",
      "offset": [
        5116,
        5159
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5582": {
      "fn": "SafeMath.sub",
      "offset": [
        5116,
        5159
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5583": {
      "fn": "SafeMath.sub",
      "offset": [
        5116,
        5159
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5585": {
      "fn": "SafeMath.sub",
      "offset": [
        5116,
        5159
      ],
      "op": "ADD",
      "path": "0"
    },
    "5586": {
      "fn": "SafeMath.sub",
      "offset": [
        5116,
        5159
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5588": {
      "fn": "SafeMath.sub",
      "offset": [
        5116,
        5159
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5589": {
      "fn": "SafeMath.sub",
      "offset": [
        5116,
        5159
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5590": {
      "fn": "SafeMath.sub",
      "offset": [
        5116,
        5159
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1E"
    },
    "5592": {
      "fn": "SafeMath.sub",
      "offset": [
        5116,
        5159
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5593": {
      "fn": "SafeMath.sub",
      "offset": [
        5116,
        5159
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5594": {
      "fn": "SafeMath.sub",
      "offset": [
        5116,
        5159
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5596": {
      "fn": "SafeMath.sub",
      "offset": [
        5116,
        5159
      ],
      "op": "ADD",
      "path": "0"
    },
    "5597": {
      "fn": "SafeMath.sub",
      "offset": [
        5116,
        5159
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "5630": {
      "fn": "SafeMath.sub",
      "offset": [
        5116,
        5159
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5631": {
      "fn": "SafeMath.sub",
      "offset": [
        5116,
        5159
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5632": {
      "fn": "SafeMath.sub",
      "offset": [
        5116,
        5159
      ],
      "op": "POP",
      "path": "0"
    },
    "5633": {
      "fn": "SafeMath.sub",
      "offset": [
        5116,
        5119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA5"
    },
    "5636": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        5116,
        5159
      ],
      "op": "JUMP",
      "path": "0"
    }
  },
  "sha1": "b7d2c75ff1a3bc431560e21abf99493c435f725f",
  "source": "/**\n *Submitted for verification at Etherscan.io on 2021-04-03\n*/\n\n// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n// File: @openzeppelin/contracts/math/SafeMath.sol\npragma solidity ^0.6.0;\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Address.sol\npragma solidity ^0.6.2;\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n        // for accounts without code, i.e. `keccak256('')`\n        bytes32 codehash;\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { codehash := extcodehash(account) }\n        return (codehash != accountHash && codehash != 0x0);\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return _functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        return _functionCallWithValue(target, data, value, errorMessage);\n    }\n\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\npragma solidity ^0.6.0;\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name, string memory symbol) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n\npragma solidity 0.6.12;\ncontract Multiownable {\n\n    uint256 public howManyOwnersDecide;\n    address[] public owners;\n    bytes32[] public allOperations;\n    address internal insideCallSender;\n    uint256 internal insideCallCount;\n\n    mapping(address => uint) public ownersIndices; // Starts from 1\n    mapping(bytes32 => uint) public allOperationsIndicies;\n\n    mapping(bytes32 => uint256) public votesMaskByOperation;\n    mapping(bytes32 => uint256) public votesCountByOperation;\n\n    event OperationCreated(bytes32 operation, uint howMany, uint ownersCount, address proposer);\n    event OperationUpvoted(bytes32 operation, uint votes, uint howMany, uint ownersCount, address upvoter);\n    event OperationPerformed(bytes32 operation, uint howMany, uint ownersCount, address performer);\n    event OperationDownvoted(bytes32 operation, uint votes, uint ownersCount,  address downvoter);\n    event OperationCancelled(bytes32 operation, address lastCanceller);\n    event OwnershipRenounced(address indexed previousOwner);\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    function isOwner(address wallet) public view returns(bool) {\n        return ownersIndices[wallet] > 0;\n    }\n\n    function ownersCount() public view returns(uint) {\n        return owners.length;\n    }\n\n    function allOperationsCount() public  view returns(uint) {\n        return allOperations.length;\n    }\n\n    modifier onlyAnyOwner {\n        if (checkHowManyOwners(1)) {\n            bool update = (insideCallSender == address(0));\n            if (update) {\n                insideCallSender = msg.sender;\n                insideCallCount = 1;\n            }\n            _;\n            if (update) {\n                insideCallSender = address(0);\n                insideCallCount = 0;\n            }\n        }\n    }\n\n    modifier onlyManyOwners {\n        if (checkHowManyOwners(howManyOwnersDecide)) {\n            bool update = (insideCallSender == address(0));\n            if (update) {\n                insideCallSender = msg.sender;\n                insideCallCount = howManyOwnersDecide;\n            }\n            _;\n            if (update) {\n                insideCallSender = address(0);\n                insideCallCount = 0;\n            }\n        }\n    }\n\n    constructor() public {  }\n\n    function checkHowManyOwners(uint howMany) internal returns(bool) {\n        if (insideCallSender == msg.sender) {\n            require(howMany <= insideCallCount, \"checkHowManyOwners: nested owners modifier check require more owners\");\n            return true;\n        }\n\n        uint ownerIndex = ownersIndices[msg.sender] - 1;\n        require(ownerIndex < owners.length, \"checkHowManyOwners: msg.sender is not an owner\");\n        bytes32 operation = keccak256(abi.encodePacked(msg.data));\n\n        require((votesMaskByOperation[operation] & (2 ** ownerIndex)) == 0, \"checkHowManyOwners: owner already voted for the operation\");\n        votesMaskByOperation[operation] |= (2 ** ownerIndex);\n        uint operationVotesCount = votesCountByOperation[operation] + 1;\n        votesCountByOperation[operation] = operationVotesCount;\n        if (operationVotesCount == 1) {\n            allOperationsIndicies[operation] = allOperations.length;\n            allOperations.push(operation);\n            emit OperationCreated(operation, howMany, owners.length, msg.sender);\n        }\n        emit OperationUpvoted(operation, operationVotesCount, howMany, owners.length, msg.sender);\n\n        // If enough owners confirmed the same operation\n        if (votesCountByOperation[operation] == howMany) {\n            deleteOperation(operation);\n            emit OperationPerformed(operation, howMany, owners.length, msg.sender);\n            return true;\n        }\n\n        return false;\n    }\n\n    function deleteOperation(bytes32 operation) internal {\n        uint index = allOperationsIndicies[operation];\n        if (index < allOperations.length - 1) { // Not last\n            allOperations[index] = allOperations[allOperations.length - 1];\n            allOperationsIndicies[allOperations[index]] = index;\n        }\n        allOperations.pop();\n\n        delete votesMaskByOperation[operation];\n        delete votesCountByOperation[operation];\n        delete allOperationsIndicies[operation];\n    }\n\n    function cancelPending(bytes32 operation) public onlyAnyOwner {\n        uint ownerIndex = ownersIndices[msg.sender] - 1;\n        require((votesMaskByOperation[operation] & (2 ** ownerIndex)) != 0, \"cancelPending: operation not found for this user\");\n        votesMaskByOperation[operation] &= ~(2 ** ownerIndex);\n        uint operationVotesCount = votesCountByOperation[operation] - 1;\n        votesCountByOperation[operation] = operationVotesCount;\n        emit OperationDownvoted(operation, operationVotesCount, owners.length, msg.sender);\n        if (operationVotesCount == 0) {\n            deleteOperation(operation);\n            emit OperationCancelled(operation, msg.sender);\n        }\n    }\n\n    function transferOwnership(address _newOwner, address _oldOwner) public onlyManyOwners {\n        _transferOwnership(_newOwner, _oldOwner);\n    }\n\n    function _transferOwnership(address _newOwner, address _oldOwner) internal {\n        require(_newOwner != address(0));\n\n        for(uint256 i = 0; i < owners.length; i++) {\n            if (_oldOwner == owners[i]) {\n                owners[i] = _newOwner;\n                ownersIndices[_newOwner] = ownersIndices[_oldOwner];\n                ownersIndices[_oldOwner] = 0;\n                break;\n            }\n        }\n        emit OwnershipTransferred(_oldOwner, _newOwner);\n    }\n\n}\n\npragma solidity 0.6.12;\n\ncontract StandardToken is ERC20(\"StandardToken\", \"STRD\"), Multiownable {\n\n    uint256 private _totalBurned;\n\n    uint256 public MaxSupply = 1e27;\n\n    constructor(address _firstOwner, address _secondOwner, address _third) public {\n        owners.push(_firstOwner);\n        owners.push(_secondOwner);\n        owners.push(_third);\n\n        ownersIndices[_firstOwner] = 1;\n        ownersIndices[_secondOwner] = 2;\n        ownersIndices[_third] = 3;\n\n        howManyOwnersDecide = 2;\n        _mint(_third, MaxSupply);\n\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalBurned() public view returns (uint256) {\n        return _totalBurned;\n    }\n\n\n    /// @notice Creates `_amount` token to `_to`. Must only be called by the  Governance Contracts\n    function mint(address _to, uint256 _amount) public onlyManyOwners() virtual returns (bool) {\n        require(totalSupply().add(_amount) <= MaxSupply);\n        _mint(_to, _amount);\n\n        return true;\n    }\n\n    /// @notice Creates `_amount` token to `_to`. Must only be called by the Governance Contracts\n    function burn(address _to, uint256 _amount) public onlyManyOwners() virtual returns (bool) {\n        _burn(_to, _amount);\n        _totalBurned = _totalBurned.add(_amount);\n\n        return true;\n    }\n\n}",
  "sourceMap": "31357:1288:0:-:0;;;31497:4;31470:31;;31508:369;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;31508:369:0;;;;;;;;;;;;16921:141;;;;;;;;;;-1:-1:-1;;;16921:141:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;16921:141:0;;;;;;;16993:12;;31508:369;;;;;;16921:141;;;16993:12;;:5;;:12;:::i;:::-;-1:-1:-1;17015:16:0;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;17041:9:0;:14;;-1:-1:-1;;17041:14:0;17053:2;17041:14;;;-1:-1:-1;31596:6:0;:24;;17041:14;31596:24;;;;;;;;;;;-1:-1:-1;;;;;31596:24:0;;;-1:-1:-1;;;;;;31596:24:0;;;;;;;;31630:25;;;;;;;;;;;;;;;;;;;;;;31665:19;;;;;;;;;;;;;;;;;;;;;;;;;17041:9;31695:26;;;:13;31596:24;31695:26;;;;;:30;;;;31735:27;;;;;;31765:1;31735:31;;;;31776:21;;;;;;31800:1;31776:25;;31812:19;:23;31859:9;;31845:24;;31677:6;;31845:5;:24::i;:::-;31508:369;;;31357:1288;;22743:370;-1:-1:-1;;;;;22826:21:0;;22818:65;;;;;-1:-1:-1;;;22818:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;22894:49;22923:1;22927:7;22936:6;22894:20;:49::i;:::-;22969:24;22986:6;22969:12;;:16;;;;;;:24;;;;:::i;:::-;22954:12;:39;-1:-1:-1;;;;;23024:18:0;;:9;:18;;;;;;;;;;;;:30;;23047:6;;23024:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;23003:18:0;;:9;:18;;;;;;;;;;;:51;;;;23069:37;;;;;;;23003:18;;:9;;23069:37;;;;;;;;;;22743:370;;:::o;25605:92::-;;;;:::o;4585:176::-;4643:7;4674:5;;;4697:6;;;;4689:46;;;;;-1:-1:-1;;;4689:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4753:1;4585:176;-1:-1:-1;;;4585:176:0:o;31357:1288::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;31357:1288:0;;;-1:-1:-1;31357:1288:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/StandardToken.sol",
  "type": "contract"
}